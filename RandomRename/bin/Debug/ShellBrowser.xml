<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ShellBrowser</name>
    </assembly>
    <members>
        <member name="T:Jam.Shell.ShellAddressBarPane">
            <summary>
            Possible panes of an <see cref="T:Jam.Shell.ShellAddressBar"/>.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellAddressBarPane.BreadCrumbBar">
            <summary>
            The <see cref="T:Jam.Shell.ShellBreadCrumbBar"/> in the middle.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellAddressBarPane.History">
            <summary>
            The <see cref="T:Jam.Shell.ShellHistoryToolBar"/> on left side.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellAddressBarPane.SearchEdit">
            <summary>
            The <see cref="T:Jam.Shell.ShellSearchEdit"/> on right side.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellAddressBar">
            <summary>
            The addressbar found on top of Windows Explorer.
            </summary>
            <remarks>
            <para>
            The <see cref="T:Jam.Shell.ShellAddressBar"/> is the addressbar found on top of Windows Explorer and contains
            <see cref="T:Jam.Shell.ShellBreadCrumbBar"/>, <see cref="T:Jam.Shell.ShellHistoryToolBar"/> and <see cref="T:Jam.Shell.ShellSearchEdit"/>. 
            Some panes like the search box are optional and its visibility can be changed using property <see cref="P:Jam.Shell.ShellAddressBar.VisiblePanes"/>.
            </para>
            <para>
            This control is embedded in <see cref="T:Jam.Shell.ExplorerBrowser"/>.
            </para>
            </remarks>
            <seealso cref="T:Jam.Shell.ExplorerBrowser"/>
        </member>
        <member name="M:Jam.Shell.ShellAddressBar.#ctor">
            <summary>
            Constructor for creating an <c>ShellAddressBar</c> instance.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.CreateParams">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellAddressBar.OnHandleCreated(System.EventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellAddressBar.OnMouseMove(System.Windows.Forms.MouseEventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellAddressBar.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="x"><inheritdoc/></param>
            <param name="y"><inheritdoc/></param>
            <param name="width"><inheritdoc/></param>
            <param name="height"><inheritdoc/></param>
            <param name="specified"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellAddressBar.WndProc(System.Windows.Forms.Message@)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="m"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellAddressBar.WmNotify(System.Windows.Forms.Message@)">
            <summary>
            Processes <c>WM_NOTIFY</c> messages.
            </summary>
            <param name="m">A <c>WM_NOTIFY</c> message.</param>
            <returns><c>true</c> if message was processed and should not be handled by <c>WndProc()</c> otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Jam.Shell.ShellAddressBar.OnCreateControl">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellAddressBar.OnFontChanged(System.EventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellAddressBar.BeginInit">
            <summary>Begins an initialize.</summary>
        </member>
        <member name="M:Jam.Shell.ShellAddressBar.EndInit">
            <summary>Ends an initialize.</summary>
        </member>
        <member name="M:Jam.Shell.ShellAddressBar.Refresh(Jam.Shell.RefreshLevel)">
            <summary>
            This method indicates that the control should perform a refresh of its contents.
            </summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellAddressBar.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>
            This method indicates that the control should perform a refresh of its contents.
            </summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should
            be refreshed. This value can be null.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellAddressBar.FullRefresh">
            <summary>Triggers a full refresh for all connected controls.</summary>
            <seealso cref="M:Jam.Shell.ShellListView.FullRefresh"/>
            <seealso cref="M:Jam.Shell.ShellTreeView.FullRefresh"/>
        </member>
        <member name="M:Jam.Shell.ShellAddressBar.SmartRefresh">
            <summary>Triggers a smart refresh for all connected controls.</summary>
            <seealso cref="M:Jam.Shell.ShellListView.SmartRefresh"/>
            <seealso cref="M:Jam.Shell.ShellTreeView.SmartRefresh"/>
        </member>
        <member name="M:Jam.Shell.ShellAddressBar.GoUp">
            <summary>Move in all connected controls from the current to the parent folder.</summary>
            <returns>Returns, if the change of the folder was successfull.</returns>
            <seealso cref="M:Jam.Shell.ShellListView.GoUp"/>
            <seealso cref="M:Jam.Shell.ShellTreeView.GoUp"/>
        </member>
        <member name="M:Jam.Shell.ShellAddressBar.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>Folder changed.</summary>
            <param name="p_ItemIdList">The ItemIdList of the new folder.</param>
        </member>
        <member name="M:Jam.Shell.ShellAddressBar.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>Selected file change.</summary>
            <param name="p_ItemIdList">The ItemIdList of the new selected element.</param>
        </member>
        <member name="M:Jam.Shell.ShellAddressBar.OnPathSelected">
            <summary>Executes the path selected event.</summary>
        </member>
        <member name="E:Jam.Shell.ShellAddressBar.EditModeEnter">
            <summary>
            Occurs if edit mode is entered.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellAddressBar.EditModeLeave">
            <summary>
            Occurs if edit mode is left.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellAddressBar.PathChanged">
            <summary>
            Occurs if <see cref="P:Jam.Shell.ShellAddressBar.AbsoluteItemIdList"/> has changed.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellAddressBar.ForeColorChanged">
            <summary>
            <inheritdoc cref="E:System.Windows.Forms.Control.ForeColorChanged"/>
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellAddressBar.TextChanged">
            <summary>
            <inheritdoc cref="E:System.Windows.Forms.Control.TextChanged"/>
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellAddressBar.RightToLeftChanged">
            <summary>
            <inheritdoc cref="E:System.Windows.Forms.Control.RightToLeftChanged"/>
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellAddressBar.ImeModeChanged">
            <summary>
            <inheritdoc cref="E:System.Windows.Forms.Control.ImeModeChanged"/>
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellAddressBar.Paint">
            <summary>
            <inheritdoc cref="E:System.Windows.Forms.Control.Paint"/>
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellAddressBar.Initialized">
            <summary>Occurs when initialization of the component is completed.</summary>
        </member>
        <member name="E:Jam.Shell.ShellAddressBar.PathSelected">
            <summary>
            Occurs if a new path was set through the ShellAddressBar.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.ForeColor">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.Text">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.Dock">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.ImeMode">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.Control.ImeMode"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.DefaultImeMode">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.RightToLeft">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.Control.RightToLeft"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.DefaultSize">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.TabStop">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.Control.TabStop"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.ShellControlConnector">
            <summary>
            Connects this control to a <see cref="T:Jam.Shell.ShellControlConnector"/> component, which allows to synchronize several shell controls.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.VisiblePanes">
            <summary>
            Gets or sets the visible panes.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.Path">
            <summary>
            Gets or sets the displayed path.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.AbsoluteItemIdList">
            <summary>
            Gets or sets the displayed path.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.SpecialFolder">
            <summary>
            Gets or sets the special folder.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.AutomaticRefresh">
            <summary>
            Gets or sets if breadcrumbs should be refreshed according to filesystem changes.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.RootedAt">
            <summary>
            Gets or sets the root of the AddressBar.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.ShowErrorMessages">
            <summary>
            Gets or sets if error messages should be shown.
            </summary>
            <remarks>
            This property especially controls the behaviour when entering an invalid path. If set to <c>true</c> an error message is shown.
            Otherwise the invalid path just stays selected.
            </remarks>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.ShowHidden">
            <summary>
            <inheritdoc cref="P:Jam.Shell.ShellListView.ShowHidden"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.CanOverflow">
            <summary>
            Determines how the control handles overflow of items if there is not enough space for all breadcrumbs.
            </summary>
            <seealso cref="P:Jam.Shell.ShellAddressBar.MinOverflowButtonCount"/>
            <seealso cref="P:Jam.Shell.ShellAddressBar.MinOverflowButtonWidth"/>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.MinOverflowButtonWidth">
            <summary>
            Gets or sets the minimum button width in pixels if control is in overflow mode.
            </summary>
            <remarks>
            Cannot be smaller than 40.
            </remarks>
            <seealso cref="P:Jam.Shell.ShellAddressBar.CanOverflow"/>
            <seealso cref="P:Jam.Shell.ShellAddressBar.MinOverflowButtonCount"/>
            <seealso cref="P:Jam.Shell.ShellAddressBar.OverflowThreshold"/>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.MinOverflowButtonCount">
            <summary>
            Gets or sets the minimum number of buttons that should be shown when control is in overflow mode.
            </summary>
            <remarks>
            Cannot be smaller than 1.
            </remarks>
            <seealso cref="P:Jam.Shell.ShellAddressBar.CanOverflow"/>
            <seealso cref="P:Jam.Shell.ShellAddressBar.MinOverflowButtonWidth"/>
            <seealso cref="P:Jam.Shell.ShellAddressBar.OverflowThreshold"/>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.OverflowThreshold">
            <summary>
            Gets or sets the minimum space in pixels between right side and last breadcrumb before overflow is started.
            </summary>
            <remarks>
            Cannot be smaller than 0.
            </remarks>
            <seealso cref="P:Jam.Shell.ShellAddressBar.CanOverflow"/>
            <seealso cref="P:Jam.Shell.ShellAddressBar.MinOverflowButtonCount"/>
            <seealso cref="P:Jam.Shell.ShellAddressBar.MinOverflowButtonWidth"/>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.MaxDropDownCount">
            <summary>
            Gets or sets the number of items that should be displayed without vertical scrollbar.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.Progress">
            <summary>
            Gets or sets the current progress value.
            </summary>
            <seealso cref="P:Jam.Shell.ShellAddressBar.ProgressMax"/>
            <seealso cref="P:Jam.Shell.ShellAddressBar.ProgressMin"/>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.ProgressMin">
            <summary>
            Gets or sets the minimum value of the progress bar.
            </summary>
            <seealso cref="P:Jam.Shell.ShellAddressBar.ProgressMax"/>
            <seealso cref="P:Jam.Shell.ShellAddressBar.Progress"/>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.ProgressMax">
            <summary>
            Gets or sets the maximum value of the progress bar.
            </summary>
            <seealso cref="P:Jam.Shell.ShellAddressBar.ProgressMin"/>
            <seealso cref="P:Jam.Shell.ShellAddressBar.Progress"/>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.Version">
            <summary>
            The current version of the ShellBrowser components.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.HistoryToolBar">
            <summary>
            The <see cref="T:Jam.Shell.ShellHistoryToolBar"/> on left side.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.BreadCrumbBar">
            <summary>
            The <see cref="T:Jam.Shell.ShellBreadCrumbBar"/> in the middle.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.SearchEdit">
            <summary>
            The <see cref="T:Jam.Shell.ShellSearchEdit"/> on right side.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellAddressBar.IsInitialized">
            <summary>
            Gets a value indicating whether the component is initialized.
            </summary>
            <seealso cref="E:Jam.Shell.ShellAddressBar.Initialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="T:Jam.Shell.BrowseForFolder">
            <summary>A BrowseForFolder dialog that uses the Vista-style dialog by default instead of a simple directory tree.</summary>
        </member>
        <member name="P:Jam.Shell.BrowseForFolder.Title">
            <summary>Gets or sets the title of the dialog.</summary>
            <value>The title.</value>
        </member>
        <member name="P:Jam.Shell.BrowseForFolder.Description">
            <summary>Gets or sets the title of the dialog.</summary>
            <value>The title.</value>
        </member>
        <member name="P:Jam.Shell.BrowseForFolder.RootFolder">
            <summary>Gets or sets the root folder.</summary>
            <value>The pathname of the root folder.</value>
            <remarks>Not supported in Vista dialog. See <see cref="P:Jam.Shell.BrowseForFolder.ForceOldDialog"/></remarks>
        </member>
        <member name="P:Jam.Shell.BrowseForFolder.SelectedPath">
            <summary>Gets or sets the directory the dialog initially displays.</summary>
            <value>The full pathname of the initial directory.</value>
        </member>
        <member name="P:Jam.Shell.BrowseForFolder.SelectedFolderIdList">
            <summary>After execution contains the Folder that was selected.</summary>
            <value>The ItemIdList of the selected folder.</value>
        </member>
        <member name="P:Jam.Shell.BrowseForFolder.FileSystemOnly">
            <summary>Only allow file system directories.</summary>
            <value>true if onlz file system directories are allowed, false if not.</value>
            <remarks>Not supported for the old dialog. See <see cref="P:Jam.Shell.BrowseForFolder.ForceOldDialog"/></remarks>
        </member>
        <member name="P:Jam.Shell.BrowseForFolder.ShowNewFolderButton">
            <summary>Gets or sets a value indicating whether the new folder button is shown.</summary>
            <value>true if show new folder button, false if not.</value>
            <remarks>Not supported in Vista dialog. See <see cref="P:Jam.Shell.BrowseForFolder.ForceOldDialog"/></remarks>
        </member>
        <member name="P:Jam.Shell.BrowseForFolder.ForceOldDialog">
            <summary>Gets or sets a value indicating whether the old dialog should be forced.</summary>
            <value>true if the old simple directory dialog should be displayed even in Vista or later.</value>
        </member>
        <member name="M:Jam.Shell.BrowseForFolder.RunDialog(System.IntPtr)">
            <summary>Runs a directory open dialog.</summary>
            <param name="pOwner">The owner.</param>
            <returns>true if the dialog box was successfully run; otherwise, false.</returns>
            <remarks>Runs a simple d</remarks>
        </member>
        <member name="M:Jam.Shell.BrowseForFolder.Reset">
            <summary>Resets the properties of a common dialog box to their default values.</summary>
        </member>
        <member name="F:Jam.Shell.Controls.InvokeReturn.Ok">
            <summary>
            Invoke was called successfully
            </summary>
        </member>
        <member name="F:Jam.Shell.Controls.InvokeReturn.NoInvokeRequired">
            <summary>
            Invoke was not called because not required
            </summary>
        </member>
        <member name="F:Jam.Shell.Controls.InvokeReturn.InvalidState">
            <summary>
            Invoke not called because the object is already disposed or because no handle is created or if an exception was thrown while trying to invoke.
            </summary>
        </member>
        <member name="M:Jam.Shell.Controls.ThreadPoolHelper.SafeInvoke(System.Windows.Forms.Control,System.Windows.Forms.MethodInvoker,System.Object[])">
            <summary>
            Calls Invoke/BeginInvoke on the control, catching exceptions if the object is already disposed or the thread is already finished.
            </summary>
            <param name="control">The control.</param>
            <param name="method">The method to be called.</param>
            <param name="args">The arguments that should be passed to the method.</param>
            <returns>An InvokeReturn value depending on what happened.</returns>
        </member>
        <member name="M:Jam.Shell.Controls.ThreadPoolHelper.SafeCall(System.Windows.Forms.Control,System.Action)">
            <summary>Calls the passed pAction if the pControl is still alive, catching relevant exceptions that might occur if a thread returns too late.</summary>
            <param name="pControl">The control.</param>
            <param name="pAction">The action.</param>
        </member>
        <member name="M:Jam.Shell.Controls.ThreadPoolHelper.SafeBeginInvoke(System.Windows.Forms.Control,System.Delegate,System.Object[])">
            <summary>
            Executes the passed method on the passed control (using BeginInvoke) if invoke is required.
            </summary>
            <param name="control">The control that should get the BeginInvoke call</param>
            <param name="method">The method to be executed</param>
            <param name="args">arguments to be passed to the method</param>
            <returns>0 if everything is ok, -1 if the method threw an expected error</returns>
        </member>
        <member name="T:Jam.Shell.Dialogs.NamespaceDoc">
            <summary>
            This is the namespace for shell related dialogs.
            </summary>
        </member>
        <member name="T:Jam.Shell.Dialogs.ControlPanelTaskDialog">
             <summary>
             Dialog for executing control panel items.
             </summary>
             <remarks>
             <para>Setting value of <see cref="P:Jam.Shell.Dialogs.ControlPanelTaskDialog.ControlPanelItem"/> to a <see cref="P:Jam.Shell.Dialogs.ControlPanelTaskDialog.ControlPanelItem"/> value you can specify which dialog will be displayed.</para>
             <para>Not that not all values are supported on any supported Windows version.</para>
             <para>IMPORTANT: Bitness of calling application must match OS bitness to show control panel items. Otherwise nothing is shown! Ensure application is targeted architecture "Any CPU".</para>
            </remarks>
        </member>
        <member name="M:Jam.Shell.Dialogs.ControlPanelTaskDialog.#ctor">
            <summary>
            Contructor for creating a <c>ControlPanelTaskDialog</c> instance.
            </summary>
        </member>
        <member name="M:Jam.Shell.Dialogs.ControlPanelTaskDialog.Reset">
            <summary>
            Resets the properties of a common dialog box to their default values.
            </summary>
        </member>
        <member name="M:Jam.Shell.Dialogs.ControlPanelTaskDialog.RunDialog(System.IntPtr)">
            <summary>Executes the dialog.</summary>
            <param name="pOwner">The owner.</param>
            <returns><c>True</c> if the dialog has been started successfully or <c>False</c> otherwise.</returns>
        </member>
        <member name="P:Jam.Shell.Dialogs.ControlPanelTaskDialog.ControlPanelItemGuid">
            <summary>
            Gets or sets the control panel item that should be shown.
            </summary>
            <seealso cref="P:Jam.Shell.Dialogs.ControlPanelTaskDialog.ControlPanelItem"/>
        </member>
        <member name="P:Jam.Shell.Dialogs.ControlPanelTaskDialog.ControlPanelItem">
            <summary>
            Gets or sets the control panel item that should be shown.
            </summary>
            <seealso cref="P:Jam.Shell.Dialogs.ControlPanelTaskDialog.ControlPanelItemGuid"/>
        </member>
        <member name="T:Jam.Shell.CustomDrawStage">
            <summary>
            Possible custom draw stages.
            </summary>
            <remarks>
            https://msdn.microsoft.com/de-de/library/windows/desktop/bb775483(v=vs.85).aspx
            </remarks>
        </member>
        <member name="F:Jam.Shell.CustomDrawStage.PrePaint">
            <summary>
            Before the painting cycle begins.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomDrawStage.PostPaint">
            <summary>
            After the painting cycle is complete.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomDrawStage.PreErase">
            <summary>
            Before the erasing cycle begins.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomDrawStage.PostErase">
            <summary>
            After the erasing cycle is complete.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomDrawStage.ItemPrePaint">
            <summary>
            Before an item is drawn.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomDrawStage.ItemPostPaint">
            <summary>
            After an item has been drawn.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomDrawStage.ItemPreErase">
            <summary>
            Before an item is erased.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomDrawStage.ItemPostErase">
            <summary>
            After an item has been erased.
            </summary>
        </member>
        <member name="T:Jam.Shell.CustomDrawState">
            <summary>
            Possible custom draw states.
            </summary>
            <remarks>
            https://msdn.microsoft.com/de-de/library/windows/desktop/bb775483(v=vs.85).aspx
            </remarks>
        </member>
        <member name="F:Jam.Shell.CustomDrawState.Selected">
            <summary>
            The item is selected.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomDrawState.Grayed">
            <summary>
            The item is grayed.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomDrawState.Disabled">
            <summary>
            The item is disabled.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomDrawState.Checked">
            <summary>
            The item is checked.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomDrawState.Focus">
            <summary>
            The item is in focus.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomDrawState.Default">
            <summary>
            The item is in its default state.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomDrawState.Hot">
            <summary>
            The item is currently under the pointer ("hot").
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomDrawState.Marked">
            <summary>
            The item is marked. The meaning of this is determined by the implementation.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomDrawState.Indeterminate">
            <summary>
            The item is in an indeterminate state.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomDrawState.ShowKeyboardCues">
            <summary>
            The item is showing its keyboard cues.
            </summary>
        </member>
        <member name="T:Jam.Shell.CustomDrawEventArgs">
            <summary>
            Event arguments for <see cref="M:Jam.Shell.CustomToolBar.OnCustomDraw(Jam.Shell.CustomDrawEventArgs)"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomDrawEventArgs.#ctor(System.Drawing.Graphics,System.Drawing.Rectangle,Jam.Shell.CustomDrawStage)">
            <summary>
            Constructor for creating a <c>CustomDrawEventArgs</c> instance.
            </summary>
            <param name="pGraphics">The graphics object.</param>
            <param name="pRect">The rectangle to draw in.</param>
            <param name="pStage">The drawing stage.</param>
        </member>
        <member name="P:Jam.Shell.CustomDrawEventArgs.Rectangle">
            <summary>
            Gets the rectangle of the drawing process.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomDrawEventArgs.Stage">
            <summary>
            Gets the current drawing stage.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomDrawEventArgs.DrawDefault">
            <summary>
            Gets or sets if drawing should be done by system.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomDrawEventArgs.Graphics">
            <summary>
            Gets the current <see cref="P:Jam.Shell.CustomDrawEventArgs.Graphics"/> object.
            </summary>
        </member>
        <member name="T:Jam.Shell.DrawToolBarButtonEventArgs">
            <summary>
            Event arguments for <see cref="T:Jam.Shell.DrawToolBarButtonEventHandler"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.DrawToolBarButtonEventArgs.#ctor(System.Windows.Forms.ToolBarButton,System.Drawing.Graphics,System.Drawing.Rectangle,Jam.Shell.CustomDrawStage,Jam.Shell.CustomDrawState)">
            <summary>
            Constructor for creating a <c>DrawToolBarButtonEventArgs</c> instance.
            </summary>
            <param name="pButton">The button to draw.</param>
            <param name="pGraphics">The graphics object.</param>
            <param name="pRect">The rectangle to draw in.</param>
            <param name="pStage">The drawing stage.</param>
            <param name="pState">The drawing state.</param>
        </member>
        <member name="P:Jam.Shell.DrawToolBarButtonEventArgs.Button">
            <summary>
            Gets the button that is currently drawn.
            </summary>
        </member>
        <member name="P:Jam.Shell.DrawToolBarButtonEventArgs.State">
            <summary>
            Gets the state of the button.
            </summary>
        </member>
        <member name="T:Jam.Shell.DrawToolBarButtonEventHandler">
            <summary>
            Handles button drawing.
            </summary>
            <param name="sender">The sender</param>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Jam.Shell.CustomToolBar">
            <summary>
            Customized <see cref="T:System.Windows.Forms.ToolBar"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomToolBar.CreateParams">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.Control.CreateParams"/>
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomToolBar.OnHandleCreated(System.EventArgs)">
            <summary>
            <inheritdoc cref="M:System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)"/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.CustomToolBar.IndexOf(System.Int32)">
            <summary>
            Retrieves the zero-based index for the button associated with the specified command identifier.
            </summary>
            <param name="pCommand">Command identifier associated with the button.</param>
            <returns>The zero-based index for the button or <c>-1</c> if the specified command identifier is invalid.</returns>
        </member>
        <member name="M:Jam.Shell.CustomToolBar.OnCustomDraw(Jam.Shell.CustomDrawEventArgs)">
            <summary>
            Provides support for custom drawing.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Jam.Shell.CustomToolBar.OnCustomDrawButton(Jam.Shell.DrawToolBarButtonEventArgs)">
            <summary>
            Provides support for button custom drawing.
            </summary>
            <param name="e">The event arguments.</param>
        </member>
        <member name="M:Jam.Shell.CustomToolBar.WmNotify(System.Windows.Forms.Message@)">
            <summary>
            Processes <c>WM_NOTIFY</c> messages.
            </summary>
            <param name="m">A <c>WM_NOTIFY</c> message.</param>
            <returns><c>true</c> if message was processed and should not be handled by <see cref="M:Jam.Shell.CustomToolBar.WndProc(System.Windows.Forms.Message@)"/> otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Jam.Shell.CustomToolBar.WndProc(System.Windows.Forms.Message@)">
            <summary>
            <inheritdoc cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)"/>
            </summary>
            <param name="m"><inheritdoc/></param>
        </member>
        <member name="E:Jam.Shell.CustomToolBar.DrawButton">
            <summary>
            Occurs if a button is drawn and <see cref="P:Jam.Shell.CustomToolBar.OwnerDraw"/> is set to <c>true</c>.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomToolBar.OwnerDraw">
            <summary>
            Determines if control supports owner-drawing.
            </summary>
            <remarks>
            If set to <c>true</c> control allows to intercept button drawing inside <see cref="E:Jam.Shell.CustomToolBar.DrawButton"/>.
            </remarks>
            <seealso cref="E:Jam.Shell.CustomToolBar.DrawButton"/>
        </member>
        <member name="P:Jam.Shell.CustomToolBar.HideClippedButtons">
            <summary>
            Determines if partial clipped buttons should be hidden or shown.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomToolBar.Indent">
            <summary>
            Sets the indentation for the first button. 
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomToolBar.DoubleBuffered">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomToolBar.Padding">
            <summary>
            Gets or sets the padding.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomToolBar.Version">
            <summary>
            The current version of the ShellBrowser components.
            </summary>
        </member>
        <member name="T:Jam.Shell.CustomToolBarButton">
            <summary>
            Customized <see cref="T:System.Windows.Forms.ToolBarButton"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomToolBarButton.#ctor(System.Windows.Forms.ToolBar)">
            <summary>
            Constructor for creating a <c>CustomToolBarButton</c> instance.
            </summary>
            <param name="pOwner">The owner.</param>
        </member>
        <member name="P:Jam.Shell.CustomToolBarButton.Pressed">
            <summary>
            Gets or sets the pressed state.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomToolBarButton.Width">
            <summary>
            Gets or sets the width of the button.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellDropTarget">
            <summary>
            <c>IDropTarget</c> interceptor.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellDropTarget.#ctor(System.IntPtr,System.Object)">
            <summary>
              Constructor for creating a <c>ShellDropTarget</c> instance.
            </summary>
            <param name="windowHandle">
              The window to subclass drag-and-drop operations.
            </param>
            <param name="view">
              The view to subclass drag-and-drop operations.
            </param>
        </member>
        <member name="F:Jam.Shell.ShellDropTarget.OnDragEnter">
            <summary>
              Occurs when the user drags a file on the control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellDropTarget.OnDragOver">
            <summary>
              Occurs when the user drags a file over the control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellDropTarget.OnDragLeave">
            <summary>
              Occurs when the user drags a file out of the selected control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellDropTarget.OnDragDrop">
            <summary>
              Occurs when the user drops a file on the control.
            </summary>
        </member>
        <member name="T:Jam.Shell.ExplorerBrowser">
            <summary>
            This component embeds the native windows ExplorerBrowser control into a .NET component.
            </summary>
            <remarks>
              <para>
                This control displays the contents of a folder in a ListView like control.
                It is a true instance of the ExplorerBrowser (on Windows Vista and later)
                that is used by the Windows Explorer and therefore looks and behaves
                exactly like the Windows Explorer on the system it is running on.
              </para>
              <para>
                There are some panes that can be shown or hidden by using the
                <see cref="P:Jam.Shell.ExplorerBrowser.VisiblePanes"/> property. The used view style can be changed
                using the <see cref="P:Jam.Shell.ExplorerBrowser.View"/> property. If <see cref="F:Jam.Shell.Com.FolderViewMode.Details"/>
                is used columns are displayed. They can be edited by using <see cref="P:Jam.Shell.ExplorerBrowser.Columns"/>
                property.
              </para>
            </remarks>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowser.m_ExplorerBrowser">
            <summary>
            The ComObject that is used internally
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowser.m_TreeViewDragTarget">
            <summary>
            Subclassed tree view drag-and-drop
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowser.m_ShellViewDragTarget">
            <summary>
            Subclassed shell view drag-and-drop
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowser.m_ShellBrowser">
            <summary>
            ShellBrowser instance holding the contents of the control
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowser.m_Items">
            <summary>
            Holds the Items of currently active Folder
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowser.m_SelectedItems">
            <summary>
            Holds the selected Items of the currently active folder
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ExplorerBrowser"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.ProcessTabKey(System.Boolean)">
            <summary>Process the tab key described by forward. </summary>
            <param name="forward">true to forward. </param>
            <returns>true if it succeeds, false if it fails. </returns>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.OnCreateControl">
            <summary>
            Creates the internal ComObject and initializes it
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.OnHandleDestroyed(System.EventArgs)">
            <summary>
            Cleans up the explorer browser events+object when the window is being taken down.
            </summary>
            <param name="e">An EventArgs that contains event data.</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.Dispose(System.Boolean)">
            <summary>
            Disposes the instance.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.ShellControlConnector">
            <summary>
            Connects this control to a ShellControlConnector component, which allows to synchronize several shell controls.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.FolderIdList">
            <summary>
            Gets or sets the current location.
            </summary>
            <value>A <see cref="T:Jam.Shell.ItemIdList"/> instance.</value>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.Path"/>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.SpecialFolder"/>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.GroupBy">
            <summary>
              Gets or sets the view grouping.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.GroupDirection">
            <summary>
              Gets or sets the group direction.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.Path">
            <summary>
            Gets or sets the filesystem path which contents should be displayed.
            </summary>
            <value>The filesystem folder.</value>
            <remarks>
            If a non-filesystem folder should be displayed use <see cref="P:Jam.Shell.ExplorerBrowser.SpecialFolder"/> or <see cref="P:Jam.Shell.ExplorerBrowser.FolderIdList"/>.
            </remarks>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.SpecialFolder"/>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.FolderIdList"/>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.ShowErrorMessages">
            <summary>
            If set to true the ShellList component will show a MessageBox if an error occured,
            otherwise the errors will only be logged to the Debug output.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.SpecialFolder">
            <summary>
            Gets or sets the special folder to be displayed.
            </summary>
            <value>
            The special folder.
            </value>
            <exception cref="T:System.Runtime.InteropServices.COMException">A COM-Exception is thrown if the special folder selected 
            is not supported by the system the application is running on.</exception>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.Path"/>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.FolderIdList"/>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.View">
            <summary>
            Allows to set the different view modes of the ExplorerBrowser control.
            </summary>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.ViewFolderFlags"/>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.ThumbnailSize">
            <summary>
            Gets or sets the size of the icons that is applied when <see cref="P:Jam.Shell.ExplorerBrowser.View"/> is set to <see cref="F:Jam.Shell.Com.FolderViewMode.Thumbnail"/>.
            </summary>
            <value>
            The size of the icon.
            </value>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.View"/>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.VisiblePanes">
            <summary>
            Gets or sets the panes that are/should be visible.
            </summary>
            <example>
            Flags can be added by <code>VisiblePanes |= ExplorerPane.PreviewPane</code> and removed by <code>VisiblePanes &amp;= ~ExplorerPane.PreviewPane</code>.
            </example>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.ViewFolderFlags">
            <summary>
            Get or set the <see cref="T:Jam.Shell.FolderFlags"/> that specify how the ListView displays
            its content. The flags can be or'ed together, ie. "FolderFlags.NoColumnHeader | FolderFlags.AbbreviatedNames"
            in the designer this is specified by a comma-separation.
            </summary>
            <remarks>
            Not all of the Flags are supported currently.
            </remarks>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.View"/>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.AutoCheckSelect">
            <summary>
            Gets or sets a value indicating whether the control displays checkboxes
            that can be used to set the selection
            </summary>
            <value>
              <c>true</c> if checkboxes should be displayed; otherwise, <c>false</c>.
            </value>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.CheckMode"/>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.SelectItem(System.Int32,System.Boolean)"/>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.CheckMode">
            <summary>Gets or sets a value defining the current CheckMode. </summary>
            <value>A CheckMode value.</value>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.SelectItem(System.Int32,System.Boolean)"/>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.ShowHeader">
            <summary>
            Gets or sets a value indicating if column headers should be shown.
            </summary>
            <value>
            The show header.
            </value>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.Columns"/>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.AllColumns"/>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.ContentFilter">
            <summary>
            A ShellItemFilter specifiying filter criteria for this instance.
            </summary>
            <remarks>Not that a specified filter doesn't apply to all <see cref="P:Jam.Shell.ExplorerBrowser.VisiblePanes"/> in the control, but mainly the items listed in the shellview part are filtered.</remarks>
            <example> 
            The following example shows how to use the filter.
            <code source ="CodeExamples.cs" region ="ExplorerBrowser_ContentFilter" lang="C#" />
            </example>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.Items"/>
            <seealso cref="E:Jam.Shell.ExplorerBrowser.AddItem"/>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.Items">
            <summary>
            Contains the Items in the ExplorerBrowser.
            The collection is gathered upon first retreival. It is updated internally when the items change, i.e. by moving to another folder.
            The items returned may be sorted differently than the view.
            </summary>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.SelectedItems"/>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.CheckedItems"/>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.ContentFilter"/>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.SelectedItems">
            <summary>
            Contains the selected item collection in the ExplorerBrowser.
            The collection is gathered upon first retreival. It is updated internally when the items change, i.e. by moving to another folder.
            The items returned may be sorted differently than the view.
            </summary>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.SelectItem(System.Int32,System.Boolean)"/>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.CheckMode"/>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.SelectedItemIdList">
            <summary>
            Gets or sets the selected item identifier list. A previous selection is removed.
            </summary>
            <value>
            An absolute ItemIdList of the element to be selected.
            </value>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.CheckedItems">
            <summary>
            Gets the checked items.
            The collection is non-recursive - if a folder is checked its content is not included. 
            </summary>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.CheckItem(System.Int32)"/>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.CheckMode"/>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowser.AddItem">
            <summary>
            This event occurs if a ListItem is to be added to the list.
            If the "CanAdd" property of the event args is set to false in an 
            event handler, the item will not be added to the listview.
            </summary>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.ContentFilter"/>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowser.SelectionChanged">
            <summary>
            This event occurs, if a selection changed in the listview
            </summary>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.SelectItem(System.Int32,System.Boolean)"/>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowser.BeforeFullRefresh">
            <summary>
            This event occurs right before the <see cref="M:Jam.Shell.ExplorerBrowser.FullRefresh"/> method is called.
            </summary>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.FullRefresh"/>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowser.PathChanged">
            <summary>
            This event occurs if the path changed that the control displays.
            </summary>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.Path"/>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowser.ViewChanged">
            <summary>
            This event happens on view changes of the control.
            </summary>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.View"/>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowser.NavigationComplete">
            <summary>
            Occurs when navigating to a folder has been completed successfully.
            </summary>
            <seealso cref="E:Jam.Shell.ExplorerBrowser.NavigationPending"/>
            <seealso cref="E:Jam.Shell.ExplorerBrowser.NavigationFailed"/>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowser.NavigationFailed">
            <summary>
            Occurs when navigating to a folder has failed.
            </summary>
            <seealso cref="E:Jam.Shell.ExplorerBrowser.NavigationPending"/>
            <seealso cref="E:Jam.Shell.ExplorerBrowser.NavigationComplete"/>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowser.NavigationPending">
            <summary>
            Occurs before navigating to a folder. The operation can be cancelled using <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>
            </summary>
            <example>
            The following example shows how to cancel a navigation. 
            <code source ="CodeExamples.cs" region = "ExplorerBrowser_NavigationPending" lang="C#" /> 
            </example>
            <seealso cref="E:Jam.Shell.ExplorerBrowser.NavigationFailed"/>
            <seealso cref="E:Jam.Shell.ExplorerBrowser.NavigationComplete"/>
            <seealso cref="E:Jam.Shell.ExplorerBrowser.DefaultAction"/>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowser.DefaultAction">
            <summary>
            This event occurs if the user triggers the default command e.g. double-click on an item.
            </summary>
            <seealso cref="E:Jam.Shell.ExplorerBrowser.NavigationPending"/>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.BeginUpdate">
            <summary>
            Prevent that a FullRefresh is called until EndUpdate is called. Every call of BeginUpdate() increments an UpdateCounter variable.
            </summary>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.EndUpdate"/>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.EndUpdate">
            <summary>
            End the updating mode.
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.IsUpdating">
            <summary>Query if this object is updating.</summary>
            <returns>True if updating, false if not.</returns>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.BeginUpdate"/>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.EndUpdate"/>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.GetViewModeAndIconSizeFromControl(System.Boolean)">
            <summary>
            Updates the internal viewMode and iconsize from the control used
            </summary>
            <param name="forceUpdate">overwrites viewMode "Auto"</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.SetFolderIdListInternal(Jam.Shell.ItemIdList)">
            <summary>
            Sets the ShellBrowser's folderIdList. Method does not open the folder in any control and does not issue any events. 
            Needed to avoid double actions in the SystemShellView
            </summary>
            <param name="value">ItemIdList of the folder to be set</param>
            <returns>true if a new and valid ItemIdList has been passed, false if the ItemIdList has not been set because it is invalid, null or the same</returns>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.NotifyFolderChange">
            <summary>
            Notifies connected controls that the path was changed.
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.Open">
            <summary>
            Opens the ShellBrowser's folder
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the System.Windows.Forms.KeyUp event.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.OnResize(System.EventArgs)">
            <summary>
            Resizes the component to the new ClientArea.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.OnBeforeFullRefresh">
            <summary>
            Issues the <see cref="E:Jam.Shell.ExplorerBrowser.BeforeFullRefresh"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.OnPathChanged">
            <summary>
            Issues the <see cref="E:Jam.Shell.ExplorerBrowser.PathChanged"/> event.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.IndexOf(Jam.Shell.ItemIdList)">
            <summary>
            Searches for the index of the ItemIdList within the listview. This function has O(n) complexity, since it iterates through all items within the list.
            </summary>
            <param name="pItemIdList">The ItemIdList that will be searched.</param>
            <returns>The index of the item or -1 if the item is not in the list.</returns>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.SelectItem(System.Int32,System.Boolean)"/>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.CheckItem(System.Int32)"/>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.EnsureVisible(System.Int32)"/>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.DeselectAll"/>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.IndexOf(System.String)">
            <summary>
            Searches for the index of the given path within the shell-list.
            This function has O(n) complexity, since it iterates through all items within the list
            </summary>
            <param name="pPath">The path that will be searched</param>
            <returns>The index of the item, -1 if the item is not in the list</returns>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.SelectItem(System.Int32,System.Boolean)"/>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.CheckItem(System.Int32)"/>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.EnsureVisible(System.Int32)"/>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.DeselectAll"/>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.SelectItem(System.Int32,System.Boolean)">
            <summary>
            Selects the item at the position passed by index.
            </summary>
            <param name="pIndex">The index of the item to be selected</param>
            <param name="pAdd">if set to <c>true</c> the current selection is kept, else it is overwritten.</param>
            <exception cref="T:System.Runtime.InteropServices.COMException">if item could not be selected e.g. in control panel.</exception>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.CheckItem(System.Int32)"/>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.EnsureVisible(System.Int32)"/>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.DeselectAll"/>
            <seealso cref="E:Jam.Shell.ExplorerBrowser.SelectionChanged"/>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.CheckItem(System.Int32)">
            <summary>
            Checks the item at the position passed by index.
            </summary>
            <param name="pIndex">The index of the item to be checked</param>
            <exception cref="T:System.Runtime.InteropServices.COMException">if item could not be checked e.g. in control panel.</exception>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.SelectItem(System.Int32,System.Boolean)"/>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.EnsureVisible(System.Int32)"/>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.DeselectAll"/>
            <seealso cref="E:Jam.Shell.ExplorerBrowser.SelectionChanged"/>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.EnsureVisible(System.Int32)">
            <summary>
            Scrolls to the item at the specified index.
            </summary>
            <param name="pIndex">The index of the item to be shown.</param>
            <exception cref="T:System.Runtime.InteropServices.COMException">if item could not be made visible e.g. in control panel.</exception>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.DeselectAll">
            <summary>
            Deselect all items in the listview.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">if items could not be deselected e.g. in control panel.</exception>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.SelectItem(System.Int32,System.Boolean)"/>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.CheckItem(System.Int32)"/>
            <seealso cref="E:Jam.Shell.ExplorerBrowser.SelectionChanged"/>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.Ungroup">
            <summary>
              Ungroups the items inside the current view.
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.FullRefresh">
            <summary>
            Reloads the component.
            </summary>
            <seealso cref="E:Jam.Shell.ExplorerBrowser.BeforeFullRefresh"/>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.InvokeCommandOnSelected(Jam.Shell.ShellCommand)">
            <summary>
            Invokes a <see cref="T:Jam.Shell.ShellCommand"/> on the selected item(s) of the ListView.
            </summary>
            <param name="command">The shell command to use on the selected item(s) of the view</param>
            <returns>True, if the command has been processed</returns>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.InvokeCommandOnFolder(Jam.Shell.ShellCommand)"/>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.InvokeCommandOnFolder(Jam.Shell.ShellCommand)">
            <summary>
            Use InvokeCommandOnFolder to execute a command of the context menu for the listed folder. 
            </summary>
            <param name="command">The <see cref="T:Jam.Shell.ShellCommand"/> to use</param>
            <returns>true, if the command has successfully been processed</returns>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.InvokeCommandOnSelected(Jam.Shell.ShellCommand)"/>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.InvokeCommand(Jam.Shell.ShellCommand)"/>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.InvokeCommand(Jam.Shell.ShellCommand)">
            <summary>
            Executes a context menu command for listed folder or selected items depending on focus.
            </summary>
            <param name="command">The <see cref="T:Jam.Shell.ShellCommand"/> to use</param>
            <returns>
              <c>True</c> if the command was executed successfully or <c>False</c>
              otherwise.
            </returns>
            <remarks>
            If navigation tree on the left side has the focus <see cref="M:Jam.Shell.ExplorerBrowser.InvokeCommandOnFolder(Jam.Shell.ShellCommand)"/>
            is called. Otherwise <see cref="M:Jam.Shell.ExplorerBrowser.InvokeCommandOnSelected(Jam.Shell.ShellCommand)"/> is called.
            </remarks>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.InvokeCommandOnSelected(Jam.Shell.ShellCommand)"/>
            <seealso cref="M:Jam.Shell.ExplorerBrowser.InvokeCommandOnFolder(Jam.Shell.ShellCommand)"/>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.Columns">
            <summary>
            Gets the <see cref="T:Jam.Shell.ShellViewColumns"/> the control currently displays.
            </summary>
            <value>
            An <see cref="T:Jam.Shell.ShellViewColumns"/> collection containing the visible columns.
            </value>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.AllColumns"/>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.ShowHeader"/>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.View"/>
            <example> 
            The following examples control the columns displayed in the ExplorerBrowser. 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_AddColumns" lang="C#" /> 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_SetColumns" lang="C#" /> 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_ShowColumns" lang="C#" /> 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_RemoveColumns" lang="C#" /> 
            </example>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.AllColumns">
            <summary>
            Gets a list of all columns that are supported in the current view. These depend on what the control currently displays.
            </summary>
            <value>
            A <see cref="T:Jam.Shell.ShellViewColumns"/> collection containing all columns supported by the current view. 
            </value>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.Columns"/>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.ShowHeader"/>
            <seealso cref="P:Jam.Shell.ExplorerBrowser.View"/>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.IsColumnAvailable(Jam.Shell.SHCOLUMNID)">
            <summary>
            Determines whether the <see cref="T:Jam.Shell.SHCOLUMNID"/> passed is supported by the current view, no matter if it is currently displayed or not.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>true if the column is available, false otherwise.</returns>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.BackColor">
            <summary>
            This property is not implemented.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.ForeColor">
            <summary>
            This property is not implemented.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.BackgroundImage">
            <summary>
            This property is not implemented.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.BackgroundImageLayout">
            <summary>
            This property is not implemented.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.Font">
            <summary>
            This property is not implemented.
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Processes Windows messages.
            </summary>
            <param name="m">The Windows Message to process.</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.Refresh(Jam.Shell.RefreshLevel)">
            <summary>
            This method indicates that the control should perform a refresh of its contents.
            </summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel" />
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>
            This method indicates that the control should perform a refresh of its contents.
            </summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should be refreshed. This value can be null.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel" />
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.SmartRefresh">
            <summary>
            Triggers a smart refresh for all connected controls.
            </summary>
            <seealso cref="M:Jam.Shell.ShellListView.SmartRefresh" />
            <seealso cref="M:Jam.Shell.ShellTreeView.SmartRefresh" />
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Changes the displayed folder in all connected controls.
            </summary>
            <param name="p_ItemIdList">Contains the information of the new path.</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            Called when the selected file was changed in a connected control.
            Not handled by this control
            </summary>
            <param name="p_ItemIdList">Contains the absolute ItemIdList of the new file.</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.GoUp">
            <summary>
            Move in all connected controls from the current to the parent folder.
            </summary>
            <returns>
            Returns, if the change of the folder was successfull.
            </returns>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowser.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowser.Initialized">
            <summary>
            Occurs when initialization of the component is completed.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowser.IsInitialized">
            <summary>
            Gets a value indicating whether the component is initialized.
            </summary>
            <returns>true to indicate the component has completed initialization; otherwise, false. </returns>
        </member>
        <member name="T:Jam.Shell.ItemCheckedEventArgsGen`1">
            <summary>Generic EventArgs for checkable items of a TreeView or ListView.</summary>
            <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="M:Jam.Shell.ItemCheckedEventArgsGen`1.#ctor(`0)">
            <summary>Constructor.</summary>
            <param name="pItem">The item.</param>
        </member>
        <member name="P:Jam.Shell.ItemCheckedEventArgsGen`1.Item">
            <summary>Gets the item whose checked state has changed.</summary>
            <returns>The item whose checked state has changed.</returns>
        </member>
        <member name="T:Jam.Shell.ListItemCheckedEventArgs">
            <summary>Provides data for the <see cref="E:Jam.Shell.JamBaseShellListView.ItemChecked"/> event of the <see cref="T:Jam.Shell.ShellListView"/> control.</summary>
        </member>
        <member name="M:Jam.Shell.ListItemCheckedEventArgs.#ctor(Jam.Shell.ShellListBaseItem)">
            <summary>Initializes a new instance of the class. </summary>
            <param name="pItem">The item that is being checked or unchecked.</param>
        </member>
        <member name="T:Jam.Shell.TreeNodeCheckedEventArgs">
            <summary>Provides data for the <see cref="E:Jam.Shell.ShellTreeView.NodeChecked"/> event of the <see cref="T:Jam.Shell.ShellTreeView"/>. </summary>
        </member>
        <member name="M:Jam.Shell.TreeNodeCheckedEventArgs.#ctor(Jam.Shell.ShellTreeNode)">
            <summary>Initializes a new instance of the class. </summary>
            <param name="pItem">The node that is being checked or unchecked.</param>
        </member>
        <member name="T:Jam.Shell.ExtensionMethods">
            <summary>Class that collects extension methods.</summary>
        </member>
        <member name="M:Jam.Shell.ExtensionMethods.GetPaths(System.Windows.Forms.IDataObject)">
            <summary>An IDataObject extension method that gets the FilePaths in the IDataObject (if any).</summary>
            <param name="pDataObject">The pDataObject to act on.</param>
            <returns>The paths.</returns>
        </member>
        <member name="M:Jam.Shell.ExtensionMethods.GetItemIdLists(System.Windows.Forms.IDataObject)">
            <summary>An IDataObject extension method that gets a list of ItemIdLists contained in the IDataObject (if any).</summary>
            <param name="pDataObject">The pDataObject to act on.</param>
            <returns>The list of ItemIdLists.</returns>
        </member>
        <member name="M:Jam.Shell.ExtensionMethods.Restart(System.Timers.Timer)">
            <summary>Restarts the timer.</summary>
            <param name="pTimer">The timer.</param>
        </member>
        <member name="T:Jam.Shell.ShellHistoryToolBar">
            <summary>
            <see cref="T:System.Windows.Forms.ToolBar"/> known from the Windows Explorer to control history of visited folders.
            </summary>
            <seealso cref="T:Jam.Shell.ShellAddressBar"/>
            <seealso cref="T:Jam.Shell.ExplorerBrowser"/>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.#ctor(System.Boolean)">
            <summary>
            Constructor for creating a <c>ShellHistoryToolBar</c> instance.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.Dispose(System.Boolean)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="disposing"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.OnCreateControl">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.OnHandleCreated(System.EventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.OnFontChanged(System.EventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.OnButtonClick(System.Windows.Forms.ToolBarButtonClickEventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.OnCustomDrawButton(Jam.Shell.DrawToolBarButtonEventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.Refresh(Jam.Shell.RefreshLevel)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should be refreshed. This value can be null.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.FullRefresh">
            <summary>
            Refreshes the shown content.
            </summary>    
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.SmartRefresh">
            <summary>
            Refreshes the shown content in a smart way.
            </summary>   
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.GoUp">
            <summary>
            Goes up to parent directory.
            </summary>
            <returns><c>True</c> if successful or <c>False</c> otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Called if folder has changed.
            </summary>
            <param name="p_ItemIdList">The new path.</param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            Called if selection has changed.
            </summary>
            <param name="p_ItemIdList">The new selected item.</param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.BeginInit">
            <summary>
            Signals that the object initialization has started.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.EndInit">
            <summary>
            Signals that the object initialization has finished.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.MoveBackward">
            <summary>
            Moves one step backward in history of visited folders.
            </summary>
            <seealso cref="P:Jam.Shell.ShellHistoryToolBar.ShellControlConnector"/>
            <seealso cref="M:Jam.Shell.ShellControlConnector.MoveInHistory(System.Int32)"/>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.MoveForward">
            <summary>
            Moves one step forward in history of visited folders.
            </summary>
            <seealso cref="P:Jam.Shell.ShellHistoryToolBar.ShellControlConnector"/>
            <seealso cref="M:Jam.Shell.ShellControlConnector.MoveInHistory(System.Int32)"/>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.ShowDropDown">
            <summary>
            Shows the history popup menu.
            </summary>
            <seealso cref="P:Jam.Shell.ShellHistoryToolBar.ShellControlConnector"/>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolBar.MoveUpward">
            <summary>
            Moves up to parent directory.
            </summary>
            <seealso cref="P:Jam.Shell.ShellHistoryToolBar.ShellControlConnector"/>
        </member>
        <member name="E:Jam.Shell.ShellHistoryToolBar.Initialized">
            <summary>
            This event is fired after the initialization of the component.
            </summary>
            <seealso cref="P:Jam.Shell.ShellHistoryToolBar.IsInitialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="E:Jam.Shell.ShellHistoryToolBar.FontChanged">
            <summary>
            <inheritdoc cref="E:System.Windows.Forms.Control.FontChanged"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolBar.Font">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolBar.Buttons">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.ToolBar.Buttons"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolBar.Appearance">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.ToolBar.Appearance"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolBar.DropDownArrows">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.ToolBar.DropDownArrows"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolBar.ButtonSize">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.ToolBar.ButtonSize"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolBar.TextAlign">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.ToolBar.TextAlign"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolBar.Wrappable">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.ToolBar.Wrappable"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolBar.Divider">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.ToolBar.Divider"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolBar.ShowToolTips">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.ToolBar.ShowToolTips"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolBar.DefaultSize">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.Control.DefaultSize"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolBar.ShellControlConnector">
            <summary>
            Connects this control to a <see cref="T:Jam.Shell.ShellControlConnector"/> component, which allows to synchronize several shell controls.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolBar.IsInitialized">
            <summary>
            Gets a value indicating whether the component is initialized.
            </summary>
            <seealso cref="E:Jam.Shell.ShellHistoryToolBar.Initialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="T:Jam.Shell.WinFormsPathCollection">
            <summary>
            A class that allows to store paths and prevents duplicates. Adds some methods that need access of Windows.Forms. 
            </summary>
        </member>
        <member name="M:Jam.Shell.WinFormsPathCollection.#ctor">
            <summary>
            Initializes a new instance of the <b><see cref="T:Jam.Shell.PathCollection"/></b> class 
            </summary>
        </member>
        <member name="M:Jam.Shell.WinFormsPathCollection.#ctor(System.Windows.Forms.IDataObject)">
            <summary>
            Initializes a new instance of the <b>PathCollection</b> class and fills it
            with the filename(s) in the given IDataObject
            </summary>
            <param name="p_dataObject">IDataObject from Drag+Drop</param>
        </member>
        <member name="T:Jam.Shell.WinFormsPathCollection.GetFolderSizeTaskInfo">
            <summary>
            Used to supply data when calculating the folder size asynchronously.
            </summary>
        </member>
        <member name="T:Jam.Shell.WinFormsPathCollection.GetFolderSizeCallbackDelegate">
            <summary>
            This delegate is used by <see cref="M:Jam.Shell.WinFormsPathCollection.GetFolderSize(System.String,Jam.Shell.WinFormsPathCollection.GetFolderSizeCallbackDelegate,System.Object)"/> to get folder sizes asynchronously. 
            </summary>
            <param name="path">The path for that its entire size was determined.</param>
            <param name="foldersize">The size of the path in bytes.</param>
            <param name="filecount">The number of files in the path.</param>
            <param name="foldercount">The number of folders in the path.</param>
            <param name="state">An optional, user-provided object that distinguishes this particular asynchronous request from other requests.</param>
            <seealso cref="M:Jam.Shell.WinFormsPathCollection.GetFolderSize(System.String,Jam.Shell.WinFormsPathCollection.GetFolderSizeCallbackDelegate,System.Object)"/>
        </member>
        <member name="M:Jam.Shell.WinFormsPathCollection.GetFolderSizeThreadProc(System.Object)">
            <summary>
            Asynchronoulsy calculates the size of a folder, including all files in all subfolders, and the file count.
            </summary>
        </member>
        <member name="M:Jam.Shell.WinFormsPathCollection.GetFolderSize(System.String,Jam.Shell.WinFormsPathCollection.GetFolderSizeCallbackDelegate,System.Object)">
            <summary>
            Asynchronoulsy calculates the size of a folder, including all files in all subfolders, and the file count.
            </summary>
            <param name="p_Path">The full path of the folder for that the size should be calculated.</param>
            <param name="p_Callback">A delegate that should be called with the results of the calculation.</param>
            <param name="p_State">An optional, user-provided object that distinguishes this particular asynchronous request from other requests.</param>
        </member>
        <member name="M:Jam.Shell.WinFormsPathCollection.GetFolderSize(System.String,Jam.Shell.WinFormsPathCollection.GetFolderSizeCallbackDelegate,System.Object,System.Int32)">
            <summary>
            Asynchronoulsy calculates the size of a folder, including all files in all subfolders, and the file count.
            </summary>
            <param name="p_Path">The full path of the folder for that the size should be calculated.</param>
            <param name="p_Callback">A delegate that should be called with the results of the calculation.</param>
            <param name="p_State">An optional, user-provided object that distinguishes this particular asynchronous request from other requests.</param>
            <param name="handle">A handle that identifies the control that requested the call.</param>
        </member>
        <member name="T:Jam.Shell.VSCLASS">
            <summary>
            Contains visual style classes.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellBreadCrumbComboButton">
            <summary>
            The combo button on right side.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbComboButton.#ctor(System.Windows.Forms.ToolBar)">
            <summary>
            Constructor for creating a <c>ShellBreadCrumbComboButton</c> instance.
            </summary>
            <param name="pOwner">The owner.</param>
        </member>
        <member name="T:Jam.Shell.ShellBreadCrumbGoPane">
            <summary>
            <see cref="T:System.Windows.Forms.ToolBar"/> that contains the combo and refresh button.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbGoPane.#ctor">
            <summary>
            Constructor for creating a <c>ShellBreadCrumbGoPane</c> instance.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbGoPane.OnCreateControl">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbGoPane.OnHandleCreated(System.EventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbGoPane.OnButtonClick(System.Windows.Forms.ToolBarButtonClickEventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbGoPane.OnCustomDrawButton(Jam.Shell.DrawToolBarButtonEventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="E:Jam.Shell.ShellBreadCrumbGoPane.OnComboButtonClick">
            <summary>
            Occurs if combo button was clicked.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellBreadCrumbButton">
            <summary>
            A single breadcrumb item.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbButton.#ctor(System.Windows.Forms.ToolBar,Jam.Shell.ItemIdList)">
            <summary>
            Constructor for creating a <c>ShellBreadCrumbButton</c> instance.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbButton.AbsoluteItemIdList">
            <summary>
            Gets the absolute <see cref="T:Jam.Shell.ItemIdList"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbButton.Rectangle">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.ToolBarButton.Rectangle"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbButton.Visible">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.ToolBarButton.Visible"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbButton.Shrinked">
            <summary>
            Gets the shrinked button width.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbButton.Width">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellRootBreadCrumbButton">
            <summary>
            The root button on left side containing icon and overflow.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellRootBreadCrumbButton.#ctor(Jam.Shell.ShellBreadCrumbs,Jam.Shell.ItemIdList)">
            <summary>
            Constructor for creating a <c>ShellRootBreadCrumbButton</c> instance.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellBreadCrumbPopupMenu">
            <summary>
            Breadcrumb drop-down menu that shows a list of sub-folders.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbPopupMenu.#ctor(Jam.Shell.ShellBreadCrumbs)">
            <summary>
            Constructor for creating a <c>ShellBreadCrumbPopupMenu</c> instance.
            </summary>
            <param name="pBreadCrumbs">The owner</param>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbPopupMenu.OnFontChanged(System.EventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbPopupMenu.CreateParams">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbPopupMenu.Show(Jam.Shell.ShellBreadCrumbButton)">
            <summary>
            Shows the drop-down list on a specified button.
            </summary>
            <param name="pButton">The button to show the drop-down list.</param>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbPopupMenu.Hide">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbPopupMenu.MaxDropDownCount">
            <summary>
            Gets or sets the number of items that should be displayed without vertical scrollbar.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbPopupMenu.ShowHidden">
            <summary>
            <inheritdoc cref="P:Jam.Shell.ShellListView.ShowHidden"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbPopupMenu.ShowErrorMessages">
            <summary>
            <inheritdoc cref="P:Jam.Shell.JamBaseShellListView.ShowErrorMessages"/>
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellBreadCrumbs">
            <summary>
            Manages the bread crumbs.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbs.#ctor(Jam.Shell.ShellBreadCrumbBar)">
            <summary>
            Constructor for creating a <c>ShellBreadCrumbs</c> instance.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbs.FullRefresh">
            <summary>
            Refreshes the breadcrumbs.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbs.OnHandleCreated(System.EventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbs.OnHandleDestroyed(System.EventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbs.OnCustomDrawButton(Jam.Shell.DrawToolBarButtonEventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbs.OnCreateControl">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbs.OnResize(System.EventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbs.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbs.ShowDropDown(Jam.Shell.ShellBreadCrumbButton)">
            <summary>
            Shows the drop-down menu on a specified <see cref="T:Jam.Shell.ShellBreadCrumbButton"/>.
            </summary>
            <param name="pButton">The breadcrumb.</param>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbs.WmNotify(System.Windows.Forms.Message@)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="m"><inheritdoc/></param>
            <returns><inheritdoc/></returns>
        </member>
        <member name="E:Jam.Shell.ShellBreadCrumbs.RootButtonClick">
            <summary>
            Occurs if root button has been clicked.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellBreadCrumbs.BackgroundClicked">
            <summary>
            Occurs if user clicked in background.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellBreadCrumbs.PathChanged">
            <summary>
            Occurs if <see cref="P:Jam.Shell.ShellBreadCrumbs.AbsoluteItemIdList"/> has changed.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbs.AbsoluteItemIdList">
            <summary>
            Gets or sets the displayed path.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbs.AutomaticRefresh">
            <summary>
            Gets or sets if breadcrumbs should be refreshed according to filesystem changes.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbs.RootedAt">
            <summary>
            Gets or sets the root node.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbs.CanOverflow">
            <summary>
            Determines if control supports overflow.
            </summary>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbs.MinOverflowButtonCount"/>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbs.MinOverflowButtonWidth"/>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbs.OverflowThreshold"/>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbs.MinOverflowButtonWidth">
            <summary>
            Gets or sets the minimum button width in pixels if control is in overflow mode.
            </summary>
            <remarks>
            Cannot be smaller than 40.
            </remarks>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbs.CanOverflow"/>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbs.MinOverflowButtonCount"/>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbs.OverflowThreshold"/>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbs.MinOverflowButtonCount">
            <summary>
            Gets or sets the minimum number of buttons that should be shown when control is in overflow mode.
            </summary>
            <remarks>
            Cannot be smaller than 1.
            </remarks>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbs.CanOverflow"/>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbs.MinOverflowButtonWidth"/>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbs.OverflowThreshold">
            <summary>
            Gets or sets the minimum space in pixels between right side and last breadcrumb before overflow is started.
            </summary>
            <remarks>
            Cannot be smaller than 0.
            </remarks>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbs.CanOverflow"/>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbs.MinOverflowButtonCount"/>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbs.MinOverflowButtonWidth"/>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbs.ShowHidden">
            <summary>
            <inheritdoc cref="P:Jam.Shell.ShellListView.ShowHidden"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbs.ShowErrorMessages">
            <summary>
            <inheritdoc cref="P:Jam.Shell.JamBaseShellListView.ShowErrorMessages"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbs.MaxDropDownCount">
            <summary>
            <inheritdoc cref="P:Jam.Shell.ShellBreadCrumbPopupMenu.MaxDropDownCount"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbs.OverflowItems">
            <summary>
            Gets the overflowed items.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellBreadCrumbProgressBar">
            <summary>
            <see cref="T:System.Windows.Forms.ProgressBar"/> in background.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbProgressBar.WndProc(System.Windows.Forms.Message@)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="m"><inheritdoc/></param>
        </member>
        <member name="T:Jam.Shell.ShellBreadCrumbParent">
            <summary>
            Parent of breadcrumb items.
            </summary>
            <remarks>
            Determines to draw progress bar or combobox background.
            </remarks>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbParent.#ctor(Jam.Shell.ShellBreadCrumbProgressBar)">
            <summary>
            Constructor for creating a <c>ShellBreadCrumbParent</c> instance.
            </summary>
            <param name="pProgressBar">The progressbar.</param>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbParent.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbParent.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbParent.OnParentBackColorChanged(System.EventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbParent.CanFocus">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.Control.CanFocus"/>
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellAddressComboItem">
            <summary>
            Items inside <see cref="T:Jam.Shell.ShellAddressComboBox"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellAddressComboItem.#ctor(System.String)">
            <summary>
            Constructor for creating a <c>ShellAddressComboItem</c> instance.
            </summary>
            <param name="pPath">The path.</param>
        </member>
        <member name="M:Jam.Shell.ShellAddressComboItem.ToString">
            <summary>
            <inheritdoc/>
            </summary>
            <returns>The caption.</returns>
        </member>
        <member name="T:Jam.Shell.ShellAddressComboBox">
            <summary>
            The path edit combobox in the background.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellAddressComboBox.#ctor(Jam.Shell.ShellBreadCrumbBar)">
            <summary>
            Constructor for creating a <c>ShellAddressComboBox</c> instance.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellAddressComboBox.OnHandleCreated(System.EventArgs)">
            <summary>This event is triggered after the handle of the control was created.</summary>
            <param name="e">the event arguments when this Event occurs.</param>
        </member>
        <member name="M:Jam.Shell.ShellAddressComboBox.OnHandleDestroyed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="T:Jam.Shell.ShellAddressComboBox.ItemIdListResolver">
            <summary>
            Resolves an <see cref="T:Jam.Shell.ItemIdList"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellAddressComboBox.OnCreateControl">
            <summary>
            Fills the ComboBox.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellAddressComboBox.WndProc(System.Windows.Forms.Message@)">
            <summary>Processes Windows messages.</summary>
            <param name="m">[in,out] The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>
        </member>
        <member name="P:Jam.Shell.ShellAddressComboBox.ShowErrorMessages">
            <summary>
            Gets or sets if error messages should be shown.
            </summary>
            <remarks>
            This property especially controls the behaviour when entering an invalid path. If set to <c>true</c> an error message is shown.
            Otherwise the invalid path just stays selected.
            </remarks>
        </member>
        <member name="T:Jam.Shell.ShellBreadCrumbBar">
            <summary>
            Embeds the native Windows BreadCrumbBar control into a .NET component.
            </summary>
            <remarks>
            <para>
            This class provides a breadcrumb navigation known from the Windows Explorer. It
            uses the same theming whereby it has the look-and-feel of the current Windows
            version it is running on. Please note that this control cannot be used directly as
            it is embedded in <see cref="T:Jam.Shell.ShellAddressBar"/>.
            </para>
            <para>
            The <see cref="T:Jam.Shell.ShellBreadCrumbBar"/> provides a drop-down menu when clicking on the drop-down 
            portion of a breadcrumb item. The maximum number of items can be changed using 
            <see cref="P:Jam.Shell.ShellBreadCrumbBar.MaxDropDownCount"/>. Per default hidden items are also display. This can be 
            changed using <see cref="P:Jam.Shell.ShellBreadCrumbBar.ShowHidden"/>.
            </para>
            <para>
            The control contains a progress bar in the background like the native BreadCrumbBar which
            can be used to inform the user about a long lasting operation. The progress range can be 
            configured by using <see cref="P:Jam.Shell.ShellBreadCrumbBar.ProgressMin"/> and <see cref="P:Jam.Shell.ShellBreadCrumbBar.ProgressMax"/>. The progress
            has to be set by <see cref="P:Jam.Shell.ShellBreadCrumbBar.Progress"/>.
            </para>
            <para>
            The control always tries to ensure the readability of the path. If the path is too long 
            and some breadcrumbs at the end cannot be displayed properly, the control starts hiding 
            breadcrumbs at the front of path. This feature is called "overflow". Overflow can be enabled or 
            disabled using <see cref="P:Jam.Shell.ShellBreadCrumbBar.CanOverflow"/> and highly customized using <see cref="P:Jam.Shell.ShellBreadCrumbBar.OverflowThreshold"/>, 
            <see cref="P:Jam.Shell.ShellBreadCrumbBar.MinOverflowButtonCount"/> and <see cref="P:Jam.Shell.ShellBreadCrumbBar.MinOverflowButtonWidth"/>.
            </para>
            </remarks>
            <seealso cref="T:Jam.Shell.ShellAddressBar"/>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbBar.#ctor(Jam.Shell.ShellAddressBar)">
            <summary>Constructor for creating a <c>ShellBreadCrumbBar</c> instance.</summary>
            <param name="pParent">The <see cref="T:Jam.Shell.ShellAddressBar"/> that hosts this instance.</param>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbBar.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="x"><inheritdoc/></param>
            <param name="y"><inheritdoc/></param>
            <param name="width"><inheritdoc/></param>
            <param name="height"><inheritdoc/></param>
            <param name="specified"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbBar.OnCreateControl">
            <summary>
            Raises the <see cref="M:System.Windows.Forms.Control.CreateControl" /> method.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.RootedAt">
            <summary>
            Gets or sets the root breadcrumb.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbBar.OnFontChanged(System.EventArgs)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="e"><inheritdoc/></param>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbBar.Refresh(Jam.Shell.RefreshLevel)">
            <summary>
            This method indicates that the control should perform a refresh of its contents.
            </summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbBar.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>
            This method indicates that the control should perform a refresh of its contents.
            </summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should be refreshed. This value can be null.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbBar.FullRefresh">
            <summary>
            Triggers a full refresh for all connected controls.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbBar.SmartRefresh">
            <summary>
            Triggers a smart refresh for all connected controls.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbBar.GoUp">
            <summary>
            Move in all connected controls from the current to the parent folder.
            </summary>
            <returns>Returns <c>True</c> if the change of the folder was successfull or <c>False</c> otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbBar.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Changes the displayed folder in all connected controls. The Edit-Mode is left.
            </summary>
            <param name="p_ItemIdList">Contains the information of the new path.</param>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbBar.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            Changes the displayed file in all connected controls.
            </summary>
            <param name="p_ItemIdList">An ItemIdList</param>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbBar.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBreadCrumbBar.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellBreadCrumbBar.Initialized">
            <summary>
            Occurs when initialization of the component is completed.
            </summary>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbBar.IsInitialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="E:Jam.Shell.ShellBreadCrumbBar.EditModeEnter">
            <summary>
            Occurs if edit mode is entered.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellBreadCrumbBar.EditModeLeave">
            <summary>
            Occurs if edit mode is left.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellBreadCrumbBar.PathChanged">
            <summary>
            Occurs if <see cref="P:Jam.Shell.ShellBreadCrumbBar.AbsoluteItemIdList"/> has changed.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellBreadCrumbBar.ForeColorChanged">
            <summary>
            <inheritdoc cref="E:System.Windows.Forms.ToolBar.ForeColorChanged"/>
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellBreadCrumbBar.ImeModeChanged">
            <summary>
            <inheritdoc cref="E:System.Windows.Forms.ToolBar.ImeModeChanged"/>
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellBreadCrumbBar.TextChanged">
            <summary>
            <inheritdoc cref="E:System.Windows.Forms.ToolBar.TextChanged"/>
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellBreadCrumbBar.BackgroundImageChanged">
            <summary>
            <inheritdoc cref="E:System.Windows.Forms.ToolBar.BackgroundImageChanged"/>
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellBreadCrumbBar.BackgroundImageLayoutChanged">
            <summary>
            <inheritdoc cref="E:System.Windows.Forms.ToolBar.BackgroundImageLayoutChanged"/>
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellBreadCrumbBar.TabIndexChanged">
            <summary>
            <inheritdoc cref="E:System.Windows.Forms.Control.TabIndexChanged"/>
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellBreadCrumbBar.RightToLeftChanged">
            <summary>
            <inheritdoc cref="E:System.Windows.Forms.Control.RightToLeftChanged"/>
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellBreadCrumbBar.Paint">
            <summary>
            <inheritdoc cref="E:System.Windows.Forms.ToolBar.Paint"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.ForeColor">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.ToolBar.ForeColor"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.BackgroundImage">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.ToolBar.BackgroundImage"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.BackgroundImageLayout">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.ToolBar.BackgroundImageLayout"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.TabIndex">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.Control.TabIndex"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.ImeMode">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.Control.ImeMode"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.RightToLeft">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.Control.RightToLeft"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.Text">
            <summary>
            Gets the current displayed address for screenreaders.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.DefaultSize">
            <summary>
            <inheritdoc/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.TabStop">
            <summary>
            <inheritdoc cref="P:System.Windows.Forms.Control.TabStop"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.AutomaticRefresh">
            <summary>
            Gets or sets if breadcrumbs should be refreshed according to filesystem changes.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.ShowErrorMessages">
            <summary>
            Gets or sets if error messages should be shown.
            </summary>
            <remarks>
            This property especially controls the behaviour when entering an invalid path. If set to <c>true</c> an error message is shown.
            Otherwise the invalid path just stays selected.
            </remarks>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.ShellControlConnector">
            <summary>
            Connects this control to a <see cref="T:Jam.Shell.ShellControlConnector"/> component, which allows to synchronize several shell controls.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.IsInitialized">
            <summary>
            Gets a value indicating whether the component is initialized.
            </summary>
            <returns>true to indicate the component has completed initialization; otherwise, false.</returns>
            <seealso cref="E:Jam.Shell.ShellBreadCrumbBar.Initialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.Path">
            <summary>
            Gets or sets the displayed path.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.AbsoluteItemIdList">
            <summary>
            Gets or sets the displayed path.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.SpecialFolder">
            <summary>
            Gets or sets the special folder.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.ShowHidden">
            <summary>
            <inheritdoc cref="P:Jam.Shell.ShellListView.ShowHidden"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.MaxDropDownCount">
            <summary>
            Gets or sets the number of items that should be displayed inside drop-down menu without vertical scrollbar.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.CanOverflow">
            <summary>
            Determines if control supports overflow.
            </summary>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbBar.MinOverflowButtonCount"/>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbBar.MinOverflowButtonWidth"/>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.MinOverflowButtonWidth">
            <summary>
            Gets or sets the minimum button width in pixels if control is in overflow mode.
            </summary>
            <remarks>
            Cannot be smaller than 40.
            </remarks>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbBar.CanOverflow"/>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbBar.MinOverflowButtonCount"/>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbBar.OverflowThreshold"/>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.MinOverflowButtonCount">
            <summary>
            Gets or sets the minimum number of buttons that should be shown when control is in overflow mode.
            </summary>
            <remarks>
            Cannot be smaller than 1.
            </remarks>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbBar.CanOverflow"/>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbBar.MinOverflowButtonWidth"/>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbBar.OverflowThreshold"/>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.OverflowThreshold">
            <summary>
            Gets or sets the minimum space in pixels between right side and last breadcrumb before overflow is started.
            </summary>
            <remarks>
            Cannot be smaller than 0.
            </remarks>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbBar.CanOverflow"/>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbBar.MinOverflowButtonCount"/>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbBar.MinOverflowButtonWidth"/>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.Progress">
            <summary>
            Gets or sets the current progress value.
            </summary>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbBar.ProgressMax"/>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbBar.ProgressMin"/>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.ProgressMin">
            <summary>
            Gets or sets the minimum value of the progress bar.
            </summary>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbBar.ProgressMax"/>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbBar.Progress"/>
        </member>
        <member name="P:Jam.Shell.ShellBreadCrumbBar.ProgressMax">
            <summary>
            Gets or sets the maximum value of the progress bar.
            </summary>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbBar.ProgressMin"/>
            <seealso cref="P:Jam.Shell.ShellBreadCrumbBar.Progress"/>
        </member>
        <member name="T:Jam.Shell.ShellContextMenuProvider">
            <summary>A shell context menu.</summary>
        </member>
        <member name="P:Jam.Shell.ShellContextMenuProvider.CustomMenu">
            <summary>Gets or sets the custom menu.</summary>
            <value>The custom menu.</value>
        </member>
        <member name="P:Jam.Shell.ShellContextMenuProvider.CustomMenuStrip">
            <summary>Sets the custom menu strip.</summary>
            <value>The custom menu strip.</value>
        </member>
        <member name="P:Jam.Shell.ShellContextMenuProvider.ShowShellContextMenuOnTop">
            <summary>
            Defines the order of ShellContextMenu and <see cref="P:Jam.Shell.ShellContextMenuProvider.CustomMenuStrip"/>.
            </summary>
            <remarks>
            If this property is set to <c>true</c>, the shell context menu will be added on top of the
            the <see cref="P:Jam.Shell.ShellContextMenuProvider.CustomMenuStrip"/>. If set to <c>false</c>, the shell
            context menu will be added below the <see cref="P:Jam.Shell.ShellContextMenuProvider.CustomMenuStrip"/>.
            </remarks>
        </member>
        <member name="M:Jam.Shell.ShellContextMenuProvider.CreatePopupMenu">
            <summary>Creates popup menu.</summary>
            <returns>The handle of the new popup menu.</returns>
        </member>
        <member name="M:Jam.Shell.ShellContextMenuProvider.HandleMenuItem(System.Int32)">
            <summary>Handles the menu item described by pCommandId.</summary>
            <param name="pCommandId">Identifier for the command.</param>
            <returns>True if the menu item was handled, false if not.</returns>
        </member>
        <member name="M:Jam.Shell.ShellContextMenuProvider.Release">
            <summary>Releases this object.</summary>
        </member>
        <member name="M:Jam.Shell.ShellContextMenuProvider.#ctor(Jam.Shell.JamItemIdListCollection)">
            <summary>
            Creates a context menu for the passed <see cref="T:Jam.Shell.JamItemIdListCollection"/>.
            </summary>
            <param name="pSourceItems">A collection of ItemIdLists the context menu is applied upon.</param>
        </member>
        <member name="M:Jam.Shell.ShellContextMenuProvider.#ctor(Jam.Shell.ItemIdList)">
            <summary>Creates a context menu for the passed <see cref="T:Jam.Shell.ItemIdList"/>.</summary>
            <param name="pItemIdList">The <see cref="T:Jam.Shell.ItemIdList"/> the context menu is applied upon.</param>
        </member>
        <member name="T:Jam.Shell.ShellPartContextMenu">
            <summary>
            Used as base context menu for the Shell context menu.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellPartContextMenu.#ctor(System.Windows.Forms.Menu)">
            <summary>
            Creates a new context menu that can be used as basis for the shell context menu.
            </summary>
            <param name="aMenu">If a menu is given, this menu will be a clone of the given menu.</param>
        </member>
        <member name="M:Jam.Shell.ShellPartContextMenu.TriggerUserMenuItem(System.Windows.Forms.Menu,System.Int32,System.Boolean)">
            <summary>
            Triggers the click event of the MenuItem with the given Win32 ID. 
            The method searches recursively in the given menu.
            </summary>
            <param name="pMenu">The menu in which should be searched for the given ID.</param>
            <param name="id">The Win32 menu item ID for whose MenuItem the Click event should be triggered.</param>
            <param name="pShellMenuOnTop">Flag that indicates whether the shell context menu is shown on top of the custom menu or not.</param>
            <returns>Returns true, if the click event of the menu item has been triggered.</returns>
        </member>
        <member name="T:Jam.Shell.ToolStripMenuItemWrapper">
            <summary>
            Creates a MenuItem instance and wraps all properties of the ToolStripMenuItem possible
            </summary>
        </member>
        <member name="M:Jam.Shell.ToolStripMenuItemWrapper.#ctor(System.Windows.Forms.ToolStripItem)">
            <summary>
            copy constructor
            supports ordinary ToolStripMenuItems and ToolStripSeparators
            </summary>
            <param name="pToolStripItem">The ToolStripItem to emulate</param>
        </member>
        <member name="M:Jam.Shell.ToolStripMenuItemWrapper.OnEvent``1(System.String,``0)">
            <summary>Raises an event by calling the protected OnXyz method reflectively.</summary>
            <typeparam name="TEventArgs">Type of the event arguments.</typeparam>
            <param name="eventTrigger">The name of the method to call, ie. "OnClick".</param>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.ToolStripMenuItemWrapper.OnClick(System.Object,System.EventArgs)">
            <summary>
            Raises the ToolStripMenuItem.Click event by
            calling the protected <see cref="M:System.Windows.Forms.ToolStripMenuItem.OnClick(System.EventArgs)"/> method reflectively.
            </summary>
            <param name="source">source of the event, ignored</param>
            <param name="e">Contains event information.</param>
        </member>
        <member name="T:Jam.Shell.ContextMenuStripWrapper">
            <summary>
            Creates a ContextMenu instance and wraps most of the base functionality of the ContextMenuStrip
            </summary>
        </member>
        <member name="M:Jam.Shell.ContextMenuStripWrapper.OnEvent``1(System.String,``0)">
            <summary>Raises an event by calling the protected OnXyz method reflectively.</summary>
            <typeparam name="TEventArgs">Type of the event arguments.</typeparam>
            <param name="eventTrigger">The name of the method to call, ie. "OnClick".</param>
            <param name="e">Contains event information.</param>
        </member>
        <member name="T:Jam.Shell.JamBaseShellListView">
            <summary>
            The base listview class.
            </summary>
        </member>
        <member name="T:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1">
            <summary>
            Generic <see cref="T:System.Windows.Forms.ListView.SelectedListViewItemCollection"/> class that subclasses of <see cref="T:Jam.Shell.JamBaseShellListView"/> use for their <see cref="P:System.Windows.Forms.ListView.SelectedItems"/> collections.
            Concrete subclasses must specify their item type in the ITEM_CLASS parameter.
            </summary>
            <typeparam name="T">If used/overriden must specify a concrete item type that is inheriting from ListViewItem</typeparam>
            <seealso cref="P:Jam.Shell.ShellListView.SelectedItems"/>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1.#ctor(System.Windows.Forms.ListView)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1"/> class.
            </summary>
            <param name="owner">The <see cref="T:System.Windows.Forms.ListView" /> control that owns the collection.</param>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1.Item(System.Int32)">
            <summary>
            Gets the item at the specified index within the collection.
            </summary>
            <param name="index">The index.</param>
            <returns>The Item.</returns>
        </member>
        <member name="T:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1">
            <summary>
            Generic ListViewItemCollection class that subclasses of <see cref="T:Jam.Shell.JamBaseShellListView"/> use for their <see cref="P:System.Windows.Forms.ListView.Items"/> collections.
            Concrete subclasses must specify their item type in the ITEM_CLASS parameter.
            </summary>
            <typeparam name="T">If used/overriden must specify a concrete item type that is inheriting from ListViewItem</typeparam>
            <seealso cref="P:Jam.Shell.ShellListView.Items"/>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1.#ctor(System.Windows.Forms.ListView)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1"/> class.
            </summary>
            <param name="owner">The <see cref="T:System.Windows.Forms.ListView" /> that owns the collection.</param>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1.Item(System.Int32)">
            <summary>
            Gets the item at the specified index within the collection.
            </summary>
            <param name="index">The index.</param>
            <returns>The Item.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.GetItemCollectionType">
            <summary>
            Gets the type of the Item Collection. It is used to create the correct <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1"/> for the inheriting classes.
            </summary>
            <returns>A typed <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1"/></returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.GetSelectedItemCollectionType">
            <summary>
            Gets the type of the Selected Item Collection. It is used to create the correct <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1"/> for the inheriting classes.
            </summary>
            <returns>A typed <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1"/></returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.GetColumnHeaderCollectionType">
            <summary>
            Gets the type of the column header collection.
            </summary>
            <returns>JamShellColumnCollection currently, since it is not overwritten by any subclasses.</returns>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ViewState">
            <summary>
            The current ViewState.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_CheckBoxes">
            <summary>
            Indicates whether checkboxes are turned on or off.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_IgnoreChanges">
            <summary>
            Indicates whether changes should be ignored.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ShellControlConnector">
            <summary>
            The shell control connector.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_IsRefreshing">
            <summary>
            Indicates whether the control is currently updating, e.g. during a FullRefresh.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.IsRefreshing">
            <summary>
            Indicates whether the control is currently updating, e.g. during a FullRefresh.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_AutoSizeColumn">
            <summary>
            The auto size column.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_InitialSortColumnIndex">
            <summary>Zero-based index of the initial sort column. -2 means: Default value not overriden or already applied</summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_SortColumnShellIndex">
            <summary>
            The shell index of the sort column. Default is 0 - the name column.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_SortColumnIndex">
            <summary>
            The current sort order as index of column.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_SortColumnShellId">
            <summary>
            The current sort order as SHCOLUMNID
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_SortOrderDirty">
            <summary>
            Redetermine m_SortColumnShellIndex, m_SortColumnIndex. See <see cref="M:Jam.Shell.JamBaseShellListView.UpdateSortColumn"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_SortOrder">
            <summary>
            The initial sort order.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ShellBrowser">
            <summary>
            An instance of our ShellBrowser.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ShellChangeNotifier">
            <summary>
            A readonly instance of a ShellChangeNotifier.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_Initialized">
            <summary>
            The attribute is used by classes deriving from JamBaseShellListView.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_NoFillOnStartup">
            <summary>
            Determines if the control should be filled on startup or not.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ShellContextMenu">
            <summary>
            Determines if the ShellContextMenu should be shown or not.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ShowContextMenu">
            <summary>
            Determines if the context menu should be shown.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ContextMenuStrip">
            <summary>
            The ContextMenuStrip that the component will convert to a ContextMenu instance.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_HeaderContextMenuStrip">
            <summary>
            The context menu that will be shown after the user right clicks on the column headers.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_CollectSelectedPaths">
            <summary>true if m_SelectedFiles should contains whole paths instead of files only.</summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_SelectedFiles">
            <summary>
            A collection of the currently selected files.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_AllowDrag">
            <summary>
            Indicates whether dragging items is allowed.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_DropItem">
            <summary>
            Stores the drop item.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_IsDropTarget">
            <summary>
            Determines if the control is a drop target or not.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_DropTargetHelper">
            <summary>
            Used to support drag images and Vista style drag cursors.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_DraggedDataObject">
            <summary> During a drag and drop operation that origins in this control this member contains the <c>IDataObject</c>. Filled in the ItemDrag method of the control.</summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_DroppedDataObject">
            <summary> During a drag and drop operation this member contains the <c>IDataObject</c> that is dragged over the control. Filled in <see cref="E:System.Windows.Forms.Control.DragEnter"/>.</summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_AutomaticRefresh">
            <summary>
            Indicates whether automatic refresh is enabled or not.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ThumbnailBorderColor">
            <summary>
            The color of the Thumbnail border.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ThumbnailSize">
            <summary>
            The Thumbnail size.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ThumbnailImages">
            <summary>
            The ImageList for the Thumbnail images.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_SmallImages">
            <summary>
            The SystemImageListHelper for small images.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_LargeImages">
            <summary>
            The SystemImageListHelper for large images.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_DetectRightClick">
            <summary>
            Local variable to detect whether the mouse is clicked or dragged
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_DetectLeftClick">
            <summary>
            Local variable to detect whether the mouse is clicked or dragged
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ShowInfoToolTips">
            <summary>
            If true, tooltips are shown.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_SlowInfoTip">
            <summary>
            If true, the slow tooltip is used.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.m_ColumnPropertiesCache">
            <summary>
            Cache for the current instance. Stores what columns are shown, their widths etc.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.PastedFiles">
            <summary>Contains the files that were pasted during a Paste operation.</summary>
            <value>The pasted files.</value>
        </member>
        <member name="F:Jam.Shell.JamBaseShellListView.JamHiddenColumnWidth">
            <summary>
            used to mark hidden columns in the array of saved column widths
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.#ctor">
            <summary>
            Constructor for the JamBaseShellListView.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.Font">
            <summary>
            The font used to display text in the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ViewState">
            <summary>
            Gets or sets how items are displayed in the ListView control.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.EmptyText">
            <summary>Gets or sets the text, that is displayed if the list doesn't contain anything.</summary>
            <value>The text that is displayed if the list doesn't contain any elements.</value>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.View">
            <summary>
            Overrides the ListView.View property. Use ViewState instead.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShowInfoToolTips">
            <summary>
            Whether to show the informational shell tooltips, the default is true
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.Columns">
            <summary>
            Gets the collection of all column headers that appear in the control.
            </summary>
            <returns>A <see cref="T:Jam.Shell.IJamShellColumnCollection" /> that represents the column headers that appear when the <see cref="P:System.Windows.Forms.ListView.View" /> property is set to <see cref="F:System.Windows.Forms.View.Details" />.</returns>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.InternalColumns">
            <summary>
            Gets the columns as JamShellColumnCollection.
            </summary>
            <value>
            The column collection.
            </value>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.UseSlowInfoTip">
            <summary>
            If true, the slow tooltip that contains additional information like the folder size is used.
            Setting this value to false increases the performance.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.CheckBoxes">
            <summary>
            Use this property to turn on or off the checkboxes for file and folder selection. 
            The checkboxes will only work, if a <see cref="P:Jam.Shell.JamBaseShellListView.ShellControlConnector"/> has been 
            assigned to the ShellControlConnector property of this component. It will 
            automatically synchronize the selection state of the items in multiple shell 
            controls linked together with this ShellControlConnector.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.IgnoreChanges">
            <summary>
            This property may only be set/unset from within the <see cref="T:Jam.Shell.ShellListItem"/> class.
            If true, the ListView will not act on events caused by the ShellChangeNotifier.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.CustomColumnCount">
            <summary>
            The number of Custom Columns in this Listview
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.CheckedItems">
            <summary>
            Refer to the <see cref="P:Jam.Shell.ShellControlConnector.SelectionList"/> property
            to determine which items are selected. Please do not use this property, 
            it is currently not supported.
            The <see cref="P:Jam.Shell.JamBaseShellListView.CheckBoxes"/> in an ordinary <see cref="T:System.Windows.Forms.ListView"/> do 
            not support the grayed <see cref="T:Jam.Shell.CheckState"/> furthermore the ListView 
            does not support them at all in <see cref="P:Jam.Shell.JamBaseShellListView.View"/> TileView.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ThumbnailBorderColor">
            <summary>
            Get or set the color of the frame that is drawn around the thumbnails.
            If this value is set to null, no frame will be shown.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.Thumbnails">
            <summary>
            Obsolete: Use ViewState.Thumbnails instead.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ThumbnailSize">
            <summary>
            Use the ThumbnailSize property to get or set the size in pixels of the thumbnail images.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShowExtraLargeIcons">
            <summary>
            Obsolete: Use ViewState.ExtraLargeIcons instead.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShellControlConnector">
            <summary>
            Connects this control to a ShellControlConnector component, which allows to synchronize several shell controls.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.AutomaticRefresh">
            <summary>
            Set this property to true if you like the component to be refreshed automatically 
            if a Drive is added or removed.
            This property is directly connected to the Enabled property of an internal instance of <see cref="P:Jam.Shell.JamBaseShellListView.ShellChangeNotifier"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShellChangeNotifier">
            <summary>
            Returns the reference to the ShellChangeNotifier that 
            is associated with this instance.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.UsedShColumnIds">
            <summary>
            Returns an array of the currently used ShColumnIds.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.HeaderMenuStrip">
            <summary>
            Gets or sets the ContextMenuStrip that will be shown if the user rightclicks
            on the headerbar.
            Get: If it's null, we generate a list of available columns.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.DropItem">
            <summary>
            Gets or sets the item on that a current drag and drop operation would be executed.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.AllowDrop">
            <summary>
            Use this property to turn on or off drop support with the Windows Explorer.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.AllowDrag">
            <summary>
            Use this property to turn on or off drag support with the Windows Explorer.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShowErrorMessages">
            <summary>
            If set to true the ShellList component will show a MessageBox if an error occured,
            otherwise the errors will only be logged to the Debug output.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShowContextMenu">
            <summary>
            If set to true, the context menu will be shown if a right click event occurs.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShellBrowser">
            <summary>
            Gets or sets the shellbrowser instance.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.NoFillOnStartup">
            <summary>
            If set to true, the control will not fill automatically after it was created.
            The <see cref="M:Jam.Shell.IShellControl.FullRefresh"/> method must be called explicitly.
            Since filling shell control with the appropriate items is a costly operation, this
            property can be useful to prevent unnecessary refreshes of the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.IsDropTarget">
            <summary>
            Gets or sets if this controls is a drop target or not.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.IsInitialized">
            <summary>
            Gets a value indicating whether the component is initialized.
            </summary>
            <seealso cref="E:Jam.Shell.JamBaseShellListView.Initialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.IsInitializing">
            <summary>
            The value this property is true between the calls BeginInit() and EndInit() 
            of the <see cref="T:System.ComponentModel.ISupportInitialize"/> interface.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.Sorting">
            <summary>
            Gets or sets the sort order for items in the control.
            </summary>
            <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
            The value specified is not one of the System.Windows.Forms.SortOrder values.
            </exception>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.SortColumn">
            <summary>
            The column according to which the listed objects are sorted.
            If this is set to a negative value, sorting is disabled by setting 
            <see cref="T:System.Windows.Forms.SortOrder"/> to SortOrder.None, this is useful to
            insert large amounts of items, e.g. during a search.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If the value is >= Columns.Count</exception>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.SortColumnShellID">
            <summary>
            Gets or sets the current sort order.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.SetSortOrder(Jam.Shell.SHCOLUMNID)">
            <summary>Sets and applies the SortColumn in ascending.</summary>
            <param name="p_SortColumnShellId">Identifier for column to sort by. </param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.SetSortOrder(Jam.Shell.SHCOLUMNID,System.Windows.Forms.SortOrder)">
            <summary>Sets and applies the sortrder. </summary>
            <param name="p_SortColumnShellId">Identifier for column to sort by. </param>
            <param name="p_SortOrder">The sort order. </param>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.AutoSizeColumn">
            <summary>
            Adjust the size of the given column so that it fills the remaining horizontal space.
            </summary>
            <value>
            If a value greater or equal to zero is assigned to this property, the column width this
            index will be adjusted to fill the available horizontal space so that no scrollbar
            needs to be shown. A minimum size of 80 is preserved.
            </value>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.NumShellColumns">
            <summary>
            The number of system columns without the columns added by the user.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.GetScrollPos(System.Boolean)">
            <summary>
            Gets the scroll position of the ListView.
            </summary>
            <param name="pHorizontal">if set to <c>true</c> returns the horizontal scroll position, else the vertical</param>
            <returns>The scroll position of the control or -1 it retrieval fails.</returns>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.VerticalScrollPos">
            <summary>
            Gets or sets the vertical scroll position. 
            
            </summary>
            <value>
            The vertical scroll position as vertical pixel position. If <see cref="P:Jam.Shell.JamBaseShellListView.ViewState"/> is <see cref="T:Jam.Shell.ViewState"/> the index of the TopItem.
            </value>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShellContextMenu">
            <summary>
            Indicates whether the Windows ShellContextMenu should be shown or not.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ShowShellContextMenuOnTop">
            <summary>
            If set to to 'true', the shell context menu will be shown on top of the provided popup menu. 
            If set to 'false', the shell context menu will be shown below the provided popup menu.
            The value true is currently not supported. The menu items will be shown correctly, however their Click event cannot be triggered.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ContextMenuStrip">
            <summary>
            The ContextMenuStrip is converted to an ordinary ContextMenu. This makes it 
            possible to merge your ContextMenuStrip with the Default ShellContextMenu provided
            by the system.
            The "Opening" and "Closing" events of the ContextMenuStrip will be raised if the 
            ContextMenu "Popup"/"Collapse" event occurs. For menu items only the "Click" event
            is available. All other events are not available.
            All ToolStripMenuItems are converted, and ToolStripSeparators are recognized.
            The ShortCut Keys defined in a ToolStripMenuItem are not converted.
            If you would like to have the ShortCut-Keys, leave this Property null, instead set
            the ContextMenu property to your menu explicitly.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.SelectedFiles">
            <summary>
            This property provides access to a list of all files including their extension, which
            are currently selected in the ShellListView. Dependent on the user settings, the file names
            in the ListView may be displayed without extension, which makes it difficult to further
            process them when they are accessed only by the <see cref="P:System.Windows.Forms.ListView.SelectedItems"/>
            property. You can also use the SelectedFiles property to add files to the selection by using
            SelectedFiles.Add method.
            </summary>
            <remarks>For some derived classes this list might contain whole paths instead
            of filenames only.</remarks>
            <value>The selected files.</value>
            <seealso cref="P:Jam.Shell.JamBaseShellListView.ShellControlConnector"/>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ColumnsInitialized">
            <summary>
            Returns whether the columns were already initialized for the current SpecialFolder.
            </summary>
            <returns> True if the columns were initialized.</returns>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.ThumbnailImageList">
            <summary>
            Returns the ImageList that holds the currently used thubmnails.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.WorkItemTag">
            <summary>
            A internal number that is used to tag the workitems of a list view.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.VirtualMode">
            <summary>
            Not supported-
            </summary>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.VirtualListSize">
            <summary>
            Not supported-
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.GetListViewItemSorter">
            <summary>
            Return an instance of IComparer that should be used for sorting the lists in subclasses
            </summary>
            <returns>object implementing IComparer</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.IsColumnVisibleByDefault(System.Int32,System.Int32@)">
            <summary>
            Determines whether the column with the specified shellcolumnId is a column shown by default.
            </summary>
            <param name="shellColumnId">The shell column id.</param>
            <param name="columnWidth">Returns the width of the column: > 0 if the column is a default column, else 0</param>
            <returns>
            <c>true</c> if the column should be shown by default; otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.InitColumns">
            <summary>
            Initializes the columns.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.AddShellColumn(System.Int32)">
            <summary>
            Adds a shell column to the list view.
            </summary>
            <param name="pShellColumnIndex">The shell column index.</param>
            <returns>The column header that has been created.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.AddShellColumn(System.Int32,System.Int32)">
            <summary>Adds a shell column with the given width to the list view.</summary>
            <param name="pShellColumnIndex">The shell column index.</param>
            <param name="pWidth">The width the column should have.</param>
            <returns>The JamShellColumnHeader that has been created.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.SetColumnVisibility(System.Int32,System.Boolean)">
            <summary>
            Sets the visibility of a column.
            </summary>
            <param name="p_ColIndex">The shell column index. Note: Deleting column 0 is not allowed.</param>
            <param name="visible">True to show the column, false to hide.</param>
            <returns>
            0 or more: the index of the added column. 
            -1: the column was successfully removed. 
            -2: the 'name' column should be removed but thats not allowed.
            -3: the column index was not supported by the current folder.
            </returns>
            <remarks>
            If you don't know the shell column index, you may find it using the function <see cref="M:Jam.Shell.ShellBrowser.GetColumnText(System.Int32,System.Boolean)"/>.
            Just loop over the possible 255 columns and compare the returned column title with your wanted column title.
            Note that the column title depends on your system language.
            </remarks>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.SetColumnVisibility(Jam.Shell.SHCOLUMNID,System.Boolean)">
            <summary>
            Sets the visibility of a column.
            </summary>
            <param name="p_ColID">The <see cref="T:Jam.Shell.SHCOLUMNID"/>. Note: Deleting the name column is not allowed.</param>
            <param name="visible">True to show the column, false to hide.</param>
            <returns>
            0 or more: the index of the added column. 
            -1: the column was successfully removed. 
            -2: the 'name' column should be removed but thats not allowed.
            </returns>
            <seealso cref="T:Jam.Shell.SHCOLUMNID"/>
            /// <remarks>
            If you don't know the SHCOLUMNID, you may find it using the function <see cref="M:Jam.Shell.ShellBrowser.GetColumnText(System.Int32,System.Boolean)"/> 
            and <see cref="M:Jam.Shell.ShellBrowser.GetShColumnIdFromColumnNumber(System.Int32)"/>.
            Just loop over the possible 255 columns and compare the returned column title with your wanted column title.
            As soon as you found the correct shell column number, use the <see cref="M:Jam.Shell.ShellBrowser.GetShColumnIdFromColumnNumber(System.Int32)"/>
            to convert it into a <see cref="T:Jam.Shell.SHCOLUMNID"/>.
            Note that the column title depends on your system language.
            </remarks>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.FinalizeColumnVisibilityChange">
            <summary>
            Finalizes the column visibility change. The sort column is checked and the column order updated.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.ShowColumn(Jam.Shell.SHCOLUMNID)">
            <summary>
            Shows the column with the passed ShellColumnId.
            </summary>
            <param name="pShellColumnId">The <see cref="T:Jam.Shell.SHCOLUMNID"/> representing the column.</param>
            <returns>
            0 or more: the index of the added column.
            -1: column couldn't be inserted.
            </returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.UpdateSubitemsAfterColumnGetsVisible(Jam.Shell.SHCOLUMNID,System.Int32)">
            <summary>
            Loads subitems for a column that has been added at the passed position.
            </summary>
            <param name="p_ColID">The SHColumnID of the changed column.</param>
            <param name="p_LocalIndex">Local index of the column.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.HideColumn(Jam.Shell.SHCOLUMNID)">
            <summary>
            Hides the column with the passed <see cref="T:Jam.Shell.SHCOLUMNID"/>.
            </summary>
            <param name="pShellColumnId">The SHCOLUMNID to hide.</param>
            <returns>
            not used. Currently -2 means that the name column cannot be hidden.
            </returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.DisplayHeaderContextMenu(System.Object)">
            <summary>
            Empty handler of the HeaderRightClick event. This needs to be implemented by the deriving classes.
            </summary>
            <param name="sender">The sender of the event.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.Refresh(Jam.Shell.RefreshLevel)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should be refreshed. This value can be null.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.SmartRefresh">
            <summary>
            Call a smart refresh.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.FullRefresh">
            <summary>
            Call a full refresh.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.GetUIObject(System.Guid)">
            <summary>
            Get the UI object.
            </summary>
            <param name="riid">The interface id that should be returned.</param>
            <returns>Base class returns null.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.GoUp">
            <summary>
            Goes up one directory level.
            </summary>
            <returns>true, if the operation was performed succesfully. false, if the operation could not be perofrmed, which can e.g. happen, if the current folder is the root of the shell namespace.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Gets called if the active folder should change.
            </summary>
            <param name="p_ItemIdList">The ItemIdList of the new folder.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            Gets called if the selected file should change.
            </summary>
            <param name="p_ItemIdList">The absolute ItemIdList of the newly selected file.</param>
            <seealso cref="M:Jam.Shell.JamBaseShellListView.FolderChanged(Jam.Shell.ItemIdList)"/>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.Compare(System.Object,System.Object)">
            <summary>
            Override this method to compare objects given the <see cref="P:Jam.Shell.JamBaseShellListView.SortColumn"/>.
            The basic implementation compares the items alphabetically.
            
            If you need to change this, you can start out like this:
            <code source ="CodeExamplesWinforms.cs" region = "OverridenListCompare" lang="C#"/>
            </summary>
            <seealso cref="P:Jam.Shell.JamBaseShellListView.SortColumn"/>
            <param name="x">First LIST_ITEM</param>
            <param name="y">Second LIST_ITEM, which will be compared with first one.</param>
            <returns>Returns a value less than 0 if x is less than y, 
            0 if x is equal to y and a value greater
            than 0 if x is greater than y.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.RemoveItemFromList(Jam.Shell.ShellListBaseItem)">
            <summary>
            Removes the list element from the list
            </summary>
            <param name="item">a ShellListBaseItem that should be removed.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overrides
            <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />.
            </summary>
            <param name="m">[in,out] The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.Dispose(System.Boolean)">
            <summary>
            Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ListView" /> and optionally releases the managed resources.
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.InvalidateSortColumns">
            <summary>For internal use: invalidates the current sort column.</summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.CleanUpThumbnails">
            <summary>
            This method cleans up the currently loaded thumbnails and created a new image list.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.InitThumbnailImageList">
            <summary>
            Inits the thumbnail image list.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.ResetItems">
            <summary>
            Resets the items and their subitems.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.IsCustomColumn(System.Int32)">
            <summary>
            Checks whether the given column index is a custom or shell column
            </summary>
            <param name="index">The index of the column that should be checked (0 for first column)</param>
            <returns>True if it`s a custom column. False if it`s a shell column or we cannot check (because there are no columns)</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.CustomCompare(System.Windows.Forms.ListViewItem,System.Windows.Forms.ListViewItem,System.Int32)">
            <summary>
            Compares the given items by the content of the subitems at the SortColumn index.
            </summary>
            <remarks>Method is only working correctly if the subitem that is compared is loaded! </remarks>
            <param name="pItem1">The first item.</param>
            <param name="pItem2">The second item</param>
            <param name="pSortOrder">The SortOrder. 1 for Ascending, -1 for Descending.</param>
            <returns>
            Returns -1 if x is less than y, 0 if x is equal to y and 1 if x is greater than y.
            </returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.ResetColumns">
            <summary>
            Resets the columns to the initial state.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.ClearColumns">
            <summary>
            Clears the current columns and the header context menu. Please use this method instead of ListView.Columns.Clear()>.
            </summary> 
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.Clear">
            <summary>
            Removes all items and columns from the control.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.DoAutoSizeColumn">
            <summary>
            Autosizes the column that is set in <see cref="P:Jam.Shell.JamBaseShellListView.AutoSizeColumn"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.GetIndexOfShColumnId(Jam.Shell.SHCOLUMNID,System.Boolean)">
            <summary>
            Returns the local index for the given ShellColumnID.
            </summary>
            <param name="p_ColID">A ShellColumnID.</param>
            <param name="mustBeVisible">if true only returns indexes of visible columns</param>
            <returns>The local column index.</returns>
            <seealso cref="T:Jam.Shell.SHCOLUMNID"/>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.GetIndexOfShColumnId(Jam.Shell.SHCOLUMNID)">
            <summary>
            Returns the local index for the given ShellColumnID (if the column is existing and visible)
            </summary>
            <param name="p_ColID">A ShellColumnID.</param>
            <returns>The local column index.</returns>
            <seealso cref="T:Jam.Shell.SHCOLUMNID"/>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.IsColumnVisible(Jam.Shell.SHCOLUMNID)">
            <summary>
            Returns whether the given SHColumnId is currently visible or not.
            </summary>
            <param name="pColId">The SHCOLUMNID of the column that should be checked.</param>
            <returns>True if it`s visible, False if hidden or not existing.</returns>
            <seealso cref="T:Jam.Shell.SHCOLUMNID"/>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.IsColumnVisible(System.Int32)">
            <summary>
            Returns whether the given column id is currently visible or not.
            </summary>
            <param name="pShellIndex">The shell column index to be checked.</param>
            <returns>True if it's visible.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.UpdateHeaderMenu(Jam.Shell.SHCOLUMNID)">
            <summary>
            Updates the checked state of a header menu entry
            </summary>
            <param name="colId">The SHCOLUMNID of the column to check</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.InitHeaderContextMenu">
            <summary>
            Initialize the HeaderContextMenu.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.EnumWindowCallBack(System.IntPtr,System.IntPtr)">
            <summary>
            Set HeaderRectangle to the area that contains the headerbar.
            </summary>
            <param name="hwnd">
            The pointer to the child window of the listview 
            which should be the headerbar</param>
            <param name="lParam"></param>
            <returns>false.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnHeaderContextMenuClick(System.Object,System.EventArgs)">
            <summary>
            Eventhandler for a HeaderContextMenuClick.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="args">System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.HandleNeeded">
            <summary>
            Creates the handle if it has not been created already.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.IsEmpty">
            <summary>
            Checks if the list is empty.
            </summary>
            <returns>True, if the list is empty.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.SelectedFilesReset">
            <summary>
            This method gets called to reset the collection of selected files that is
            accessible through the <see cref="P:Jam.Shell.JamBaseShellListView.SelectedFiles"/> property. It resets the 
            collection, the next time the user calls the getter, it will be refilled.
            It is used e.g. if an item gets renamed.
            <see cref="M:Jam.Shell.ShellListBaseItem.Rename(System.String)"/>
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnMouseDown(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseDown event.
            </summary>
            <param name="e">A System.Windows.Forms.MouseEventArgs that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrides the OnMouseUp event, to handle e.g. double clicks and right clicks on files or folders
            and the selection of files or folders, when the CheckBoxes are switched on.
            </summary>
            <param name="e">Provides data for the OnMouseUp event.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnColumnClick(System.Windows.Forms.ColumnClickEventArgs)">
            <summary>
            Sort the column, which is clicked.
            </summary>
            <param name="e">Provides data for the OnColumnClick event.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.UpdateColumnBitmaps">
            <summary>
            Updates the sort icon in the column of the <see cref="T:Jam.Shell.ShellListView"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.Sort">
             <summary>
             Sorts the items of the list view. Uses a custom sort order if an <see cref="T:System.Collections.IComparer"/> is assigned to property <see cref="P:System.Windows.Forms.ListView.ListViewItemSorter"/>.
             If no custom sortorder is supplied the default sorting handles sorting by columns and is only useful in <see cref="F:Jam.Shell.ViewState.Details"/>.
             In this case <see cref="P:Jam.Shell.JamBaseShellListView.SortColumn"/> must be non-negative.
             </summary>
             <example>
             This example sets a custom ListViewItemSorter on a FileList that handles the sorting when the <see cref="P:Jam.Shell.JamBaseShellListView.ViewState"/> is something else than <see cref="F:Jam.Shell.ViewState.Details"/>.
             <code>
             private class CustomItemComparer : System.Collections.IComparer
             {
                private FileList m_FileList;
                public CustomItemComparer(FileList pFileList)
                {
                    m_FileList = pFileList;
                }
            
                public int Compare(object x, object y)
                {
                    if (m_FileList.ViewState == ViewState.Details)
                        return m_FileList.Compare(x, y);
                    else
                    {
                        FileListItem item1 = (FileListItem) x;
                        FileListItem item2 = (FileListItem) y;
                        if (item1 == null || item2 == null) return 0;
                        return String.Compare(item1.FullPath, item2.FullPath, StringComparison.OrdinalIgnoreCase);
                    } 
                }
             }
             
             void TestForm_Load(object sender, EventArgs e)
             {
                 CustomItemComparer comparer = new CustomItemComparer(fileList1);
                 fileList1.ListViewItemSorter = comparer; //assigning already sorts           
             }
             </code>
             </example>
             <seealso cref="P:System.Windows.Forms.ListView.ListViewItemSorter"/>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.EndInit">
            <summary>
            Signals the object that initialization is complete.
            After this method is called, <see cref="F:Jam.Shell.JamBaseShellListView.m_Initialized"/> is true to indicate
            the state of the control.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.SelectPidl(Jam.Shell.ItemIdList)">
            <summary>
            Selects the ListItem that corresponds to the given ItemIdList.
            </summary>
            <param name="pPidl">An ItemIdList relative to the current folder.</param>
            <returns>True if the item could be found and selected, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.SelectAllItemsInternal">
            <summary>Selects all items.</summary>
            <remarks>For performance reason selection is done via the SetListViewItemState.</remarks>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.SelectPidl(Jam.Shell.ItemIdList,System.Boolean)">
            <summary>
            Selects the ListItem that corresponds to the given ItemIdList.
            </summary>
            <param name="pPidl">An ItemIdList relative to the current folder.</param>
            <param name="pEnsureVisible">if set to <c>true</c> the visibility of the item is ensured.</param>
            <returns>
            True if the item could be found and selected, false otherwise.
            </returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.ItemOfPidl(Jam.Shell.ItemIdList)">
            <summary>
            Returns the ListItem for the given ItemIdList
            </summary>
            <param name="p_ItemIdList">An ItemIdList relative to the current folder.</param>
            <returns>The ListItem that correponds to the given ITemIdList, null if no matching item could be found.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.FindItemIdList(Jam.Shell.ItemIdList,System.Boolean)">
            <summary>Searches for the first list item with the given ItemIdList.</summary>
            <exception cref="T:System.ArgumentNullException">Thrown when one or more required arguments are null.</exception>
            <exception cref="T:System.ArgumentException">Thrown when one or more arguments have unsupported or have illegal values.</exception>
            <param name="pItemIdList">An absolute or relative ItemIdList to search. </param>
            <param name="pRelative">True if the ItemIdList is relative. False if the item's AbsoluteItemIdList is checked.</param>
            <returns>The first list item representing the passed ItemIdList. Null if no list item was found.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.FindPath(System.String,System.Boolean)">
            <summary>Returns the ListItem for the given path.</summary>
            <param name="pPath">The path or name to search for.</param>
            <param name="pCaptionOnly">true if the item's name should be searched for. False to look for the whole path.</param>
            <returns>The ListItem that correponds to the given name or path, null if no matching item could be found.</returns>
            <remarks>If pCaptionOnly the item's text is checked. If pCaptionOnly is false the FullPath of the item is checked. This will not work for items that do not have a physical path.</remarks>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.PrepareMultiObjects">
            <summary>
            Prepares the selected items in the list for being used with the m_ShellBrowser, an instance of <see cref="P:Jam.Shell.JamBaseShellListView.ShellBrowser"/>.
            </summary>
            <returns><b>true</b>if one or more items have been successfully prepared; otherwise <b>false</b></returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.RenameItemSelectedHandler(System.Object,System.EventArgs)">
            <summary>
            Handles the click on the "Rename" context menu item of the Shell context menu and the F2 key press of the ShellFileList.
            It sets the selected item in edit mode.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.FindContextMenuPosition">
            <summary>
            finds the position where to display the context menu based 
            upon the currently selected items and their positions
            </summary>
            <returns>The upperleft point+(20;20) of the ListView if nothing is selected, a point otherwise</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.DisplayBackgroundContextMenu(System.Drawing.Point)">
            <summary>
            Shows the  <see cref="P:Jam.Shell.SystemListView.BackgroundContextMenu"/> if it is non-null.
            </summary>
            <param name="pLocation">The location to display the contextmenu</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.DisplayContextMenu">
            <summary>
            Shows the shell context menu for the currently selected items
            <seealso cref="P:Jam.Shell.JamBaseShellListView.ShowContextMenu"/>
            </summary>
            <returns>The verb of the command that was executed, e.g. "open", "properties", "copy", etc.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.DisplayContextMenu(System.Drawing.Point)">
            <summary>
            Shows the shell context menu for the currently selected items
            </summary>
            <param name="p">The Position (relative to the control) at which the context menu should be shown.</param>
            <returns>The verb of the command that was executed, e.g. "open", "properties", "copy", etc.</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnBeforeInvokeCommand(Jam.Shell.BeforeShellCommandEventArgs)">
            <summary>Is called before the command is called.</summary>
            <param name="e">The eventargs holding the verb and affected elements.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnAfterInvokeCommand(Jam.Shell.ShellCommandEventArgs)">
            <summary>Is called after the command has been called.</summary>
            <param name="e">Contains the command and the items the command was applied upon.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.GetSelectedItemIdLists">
            <summary>Gets the items the command will be executed upon.</summary>
            <returns>
            Return a <see cref="T:Jam.Shell.JamItemIdListCollection" />
             containing absolute <see cref="T:Jam.Shell.ItemIdList" />
            s representing the items.
            </returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.InvokeCommandOnSelected(Jam.Shell.ShellCommand)">
            <summary>
            Invokes the given command on the selected items.
            See <see cref="T:Jam.Shell.ShellCommand"/> class for a list of possible commands.
            </summary>
            <param name="pCommand">A command verb, like <see cref="F:Jam.Shell.ShellCommand.Open"/>, <see cref="F:Jam.Shell.ShellCommand.Properties"/>, 
            <see cref="F:Jam.Shell.ShellCommand.Delete"/>, or any other command of installed shell extensions that may be specified as a string.</param>
            <returns>true if the command was invoked successfully, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.LogError(System.String)">
            <summary>
            Error method that displays an error messagebox if the 
            property <see cref="P:Jam.Shell.JamBaseShellListView.ShowErrorMessages"/> is set.
            The message is always written to the debug output stream
            </summary>
            <param name="message">The errormessage</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.LogError(System.String,System.Exception)">
            <summary>
            Error method that displays an error messagebox if the 
            property <see cref="P:Jam.Shell.JamBaseShellListView.ShowErrorMessages"/> is set. 
            The message is always written to the debug output stream
            </summary>
            <param name="message">The errormessage</param>
            <param name="exception">Exception a possible exception that is logged as well, may be null</param>
        </member>
        <member name="E:Jam.Shell.JamBaseShellListView.Initialized">
            <summary>
            This event is fired after the initialization of the component.
            </summary>
            <seealso cref="P:Jam.Shell.JamBaseShellListView.IsInitialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>o
        </member>
        <member name="E:Jam.Shell.JamBaseShellListView.CreatedColumns">
            <summary>
            This event is fired after the columns were created.
            </summary>
            <remarks>You can use this event to control the columns that are shown in the list. If however you remove the <see cref="F:Jam.Shell.SHCOLUMNID.ShellColumnName"/> column it will be reinserted again.
            </remarks>
            <example>
            This example adds custom columns in the <see cref="E:Jam.Shell.JamBaseShellListView.CreatedColumns"/> event.
            <code source ="CodeExamplesWinforms.cs" region = "CreatingCustomColumns" lang="C#"/>
            </example>
            <example> 
            This example re-initializes the columns displayed for <see cref="F:Jam.Shell.ShellFolder.MyMusic"/> in the <see cref="E:Jam.Shell.JamBaseShellListView.CreatedColumns"/> event.
            <code source ="CodeExamplesWinforms.cs" region = "AddRemoveShellColumns" lang="C#" />
            </example>
        </member>
        <member name="E:Jam.Shell.JamBaseShellListView.OperationPerformed">
            <summary>
            This event is fired after a <see cref="T:Jam.Shell.JamBaseShellListView"/> executed a shell operation like copying.
            </summary>
        </member>
        <member name="E:Jam.Shell.JamBaseShellListView.BeforeShellColumnChanged">
            <summary>
            This event is fired when a column is selected/deselected from the context menu of the list header.
            </summary>
        </member>
        <member name="E:Jam.Shell.JamBaseShellListView.BeforeShellDrop">
            <summary>
            This event is fired before a ListView that inherits from <see cref="T:Jam.Shell.JamBaseShellListView"/> executes a shell drop.
            </summary>
            <remarks>
            <example>
            This example shows, how you can rename dropped files automatically.
            <code>
            using Jam.Shell;
            using System.IO;
            
            private PathCollection m_DroppedFiles;
            
            private void shellListView1_BeforeShellDrop(object sender, BeforeShellDropEventArgs e)
            {
                // maybe clear if old dropped files are present
                if (m_DroppedFiles != null)
                    m_DroppedFiles.Clear();
                
                /* 
                // If you don`t want the ShellDrop to be executed, just set the flag to false
                if (...)
                {
                    e.ExecuteShellDrop = false;
                    return;
                } 
                */
            
                /* - possibility to watch what is dropped
                for (int i = 0; i &lt; e.Files.Count; i++)
                {
                    MessageBox.Show(e.Files[i]);
                }*/
            
                // save the dropped files
                // here you could filter the files that should later be renamed
                m_DroppedFiles = e.Files;
            }
            
            private void shellListView1_OperationPerformed(object sender, OperationEventArgs e)
            {
                if (e.Operation == ShellOperation.Drop)
                {
                    // fill a new PathCollection, because the AffectedObjects will change during the rename process
                    PathCollection localDroppedFiles = new PathCollection(e.AffectedObjects);
                
                    // use a temporary ShellBrowser instance
                    using (ShellBrowser sb = new ShellBrowser())
                    {
                        // set the ShellBrowser folder to the drop destination
                        sb.Folder = e.Destination;
                        
                        foreach (string objectPath in localDroppedFiles)
                        {                    
                            // if the affected object can be found in our list,  rename it
                            if (m_DroppedFiles != null &amp;&amp; m_DroppedFiles.Contains(objectPath))
                            {
                                // set the objectname to the filename of the  dropped file
                                sb.ObjectName = Path.GetFileName(objectPath);
                                
                                // delete it from the list 
                                m_DroppedFiles.Delete(m_DroppedFiles.IndexOf(objectPath));
                                
                                // rename
                                sb.RenameObject("MyNewFileName.txt");
                                
                                // show the new name
                                //MessageBox.Show(sb.ObjectName);
                            }
                        }
                    }
                }
            }
            </code>
            </example>
            </remarks>
        </member>
        <member name="E:Jam.Shell.JamBaseShellListView.BeforeShellCommand">
            <summary>
            This event is fired when a shell command is to be executed, ie. via the context menu
            It is possible to permit the execution of the shell command by modifying the BeforeShellCommandEventArgs
            </summary>
            <example>
            Shows the analogue usage of the <see cref="E:Jam.Shell.ShellBrowserBase.BeforeShellCommand"/> event.
            <code source ="CodeExamplesWinforms.cs" region = "BeforeShellCommand" lang="C#"/>
            </example>
        </member>
        <member name="E:Jam.Shell.JamBaseShellListView.ShowOptionChanged">
            <summary>
            This event is fired after an display option changed.
            </summary>
        </member>
        <member name="E:Jam.Shell.JamBaseShellListView.CheckStateChanged">
            <summary>
            This event is fired when the state of a checkbox was changed by the user or if it was changed internally via checkstate synchronization of other controls.
            </summary>
            <remarks>In contrast to <see cref="E:Jam.Shell.JamBaseShellListView.ItemChecked"/> this event will be raised if the checkstate was changed by the user, or if it was changed indirectly, by synchronization from other controls.</remarks>
        </member>
        <member name="E:Jam.Shell.JamBaseShellListView.ItemChecked">
            <summary>Occurs when the checked state of an item was changed by the user.</summary>
            <remarks>In contrast to <see cref="E:Jam.Shell.JamBaseShellListView.CheckStateChanged"/> only changes applied by the user will fire the event.</remarks>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnItemShowToolTip(Jam.Shell.SystemListView.ShowToolTipEventArgs)">
            <summary>This method is extended to show tool tip texts of the particular shell objects.</summary>
            <param name="eventArgs">An <see cref="T:Jam.Shell.SystemListView.ShowToolTipEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnCreateControl">
            <summary>
            Raises the <see cref="M:System.Windows.Forms.Control.CreateControl" /> method.
            </summary>
            <remarks>We are using this event to initialize the control.</remarks>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnHandleCreated(System.EventArgs)">
            <summary>
            Handles the OnHandleCreated event and e.g. initializes the image list
            </summary>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnResize(System.EventArgs)">
            <summary>
            Raises the OnResize event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="P:Jam.Shell.JamBaseShellListView.IsEditing">
            <summary>Gets a value indicating whether this object is currently in edit-mode.</summary>
            <value>True if this object is editing, false if not.</value>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnBeforeLabelEdit(System.Windows.Forms.LabelEditEventArgs)">
            <summary>
            Override the OnBeforeLabelEdit event, to prepare renaming a file or folder in the <see cref="T:Jam.Shell.ShellListView"/>.
            </summary>
            <param name="e">Provides data for the OnBeforeLabelEdit event.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnAfterLabelEdit(System.Windows.Forms.LabelEditEventArgs)">
            <summary>
            Override the OnAfterLabelEdit event, to rename files or folders in the file system, when the have been renamed in the <see cref="T:Jam.Shell.ShellListView"/>.
            </summary>
            <param name="e">Provides data for the OnAfterLabelEdit event.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.SelectedListChange(System.Object,System.EventArgs)">
            <summary>
            Handler for the Change event of the SelectedFiles list.
            Selects all objects which names are included in the SelectedFiles list.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.ItemSelectionChange(System.Object,System.Windows.Forms.ListViewItemSelectionChangedEventArgs)">
            <summary>
            This member handles the <see cref="E:System.Windows.Forms.ListView.ItemSelectionChanged"/> event.
            </summary>
            <param name="source">the source that created the event</param>
            <param name="e">The parameter contains the event data for the ListViewItemSelection changed.
            If it is null, we do not clear the SelectedFiles Datastructure, since the method was called 
            directly from <see cref="M:Jam.Shell.JamBaseShellListView.SelectedListChange(System.Object,System.EventArgs)"/>.
            </param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)"/>
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)"/> and adds drag images and cursors.
            </summary>
            <param name="e"></param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)"/> and adds drag images and cursors.
            </summary>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnDragLeave(System.EventArgs)">
            <summary>This member overrides <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)"/> and resets the
            DropTargetHelper.</summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.BaseOnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            Calls the original inherited OnDragDrop method.
            </summary>
            <param name="drgevent">The <see cref="T:System.Windows.Forms.DragEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)"/> and resets the drag effect.
            </summary>
            <param name="drgevent"></param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnCreateColumns">
            <summary>
            Fires an event after the columns have been created
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnBeforeShellDrop(Jam.Shell.BeforeShellDropEventArgs)">
            <summary>
            Calls the BeforeShellDrop event if it is assigned.
            </summary>
            <param name="p_EventArgs">event arguments</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnShowOptionChanged">
            <summary>
            Calls the ShowOptionChanged event if it is assigned.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnOperation(Jam.Shell.ShellOperation,System.Collections.Specialized.StringCollection,System.String)">
            <summary>Helper function for <see cref="M:Jam.Shell.JamBaseShellListView.OnOperation(Jam.Shell.ShellOperation,Jam.Shell.PathCollection,System.String)"/>
            to avoid type conversion.</summary>
            <param name="p_Operation">Contains the type of operation, which has been performed.</param>
            <param name="p_Paths">The p_Paths contains the file or folder names, that are affected.</param>
            <param name="p_Destination">Contains the destination, e.g. where files or folders have been
            pasted to.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnOperation(Jam.Shell.ShellOperation,Jam.Shell.PathCollection,System.String)">
            <summary>
            Fires an event if an operation was performed on the <see cref="T:Jam.Shell.JamBaseShellListView"/>.
            </summary>
            <param name="p_Operation">Contains the type of operation, which has been performed.</param>
            <param name="p_Paths">The p_Paths contains the file or folder names, that are affected.</param>
            <param name="p_Destination">Contains the destination, e.g. where files or folders have been pasted to.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnCheckStateChanged(Jam.Shell.ShellListBaseItem,Jam.Shell.CheckState)">
            <summary>
            Fires an event if the <see cref="T:Jam.Shell.CheckState"/> of an item has changed.
            <seealso cref="M:Jam.Shell.ShellListBaseItem.InvertCheckState"/>
            </summary>
            <param name="item">The item, where the <see cref="T:Jam.Shell.CheckState"/> has been changed.</param>
            <param name="oldCheckState">Contains the <see cref="T:Jam.Shell.CheckState"/>, which the item had before it was changed.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnItemChecked(Jam.Shell.ShellListBaseItem)">
            <summary>Calls raising of the OnItemCheckedEvent.</summary>
            <param name="pItem">The item that has been checked or unchecked.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnBeforeShellColumnChanged(Jam.Shell.BeforeShellColumnChangedCancelArgs)">
            <summary>
            Calls the BeforeShellColumnChanged event if it is assigned.
            </summary>
            <param name="eventArgs">event arguments</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnColumnWidthChanged(System.Windows.Forms.ColumnWidthChangedEventArgs)">
            <summary>
            Tracks column widths. Raises the System.Windows.Forms.ListView.ColumnWidthChanged event.
            </summary>
            <param name="e">A System.Windows.Forms.ColumnWidthChangedEventArgs that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.JamBaseShellListView.OnColumnWidthChanging(System.Windows.Forms.ColumnWidthChangingEventArgs)">
            <summary>
            Prevents changes at designtime.
            Raises the <see cref="E:System.Windows.Forms.ListView.ColumnWidthChanging" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.ColumnWidthChangingEventArgs" />  that
            contains the event data.</param>
        </member>
        <member name="F:Jam.Shell.SpecialFolderViewCache.m_ColumnPropertiesForSpecialFolderDict">
            <summary>
            Contains <see cref="T:Jam.Shell.ColumnProperties"/> objects for a specific ShellFolder.
            </summary>
        </member>
        <member name="T:Jam.Shell.ColumnProperties">
            <summary>
            A helper class that holds column specific properties.
            </summary>
        </member>
        <member name="M:Jam.Shell.ColumnProperties.#ctor(Jam.Shell.SHCOLUMNID)">
            <summary>
            Creates a new ColumnProperties object.
            </summary>
        </member>
        <member name="P:Jam.Shell.ColumnProperties.IsInitialized">
            <summary>
            Get/Sets whether the columns were already initialized.
            </summary>
        </member>
        <member name="P:Jam.Shell.ColumnProperties.MaxLocalColumnIndex">
            <summary>
            Gets/Sets the max column index of the currently used columns.
            </summary>
        </member>
        <member name="T:Jam.Shell.SystemListView">
            <summary>
            This class provides the SystemStyles of Vista and other things common to the ShellListView and ShellFileList
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemListView.m_UseSystemStyles">
            <summary>
            If false the component won't use the vista styles.
            <see cref="P:Jam.Shell.SystemListView.UseSystemStyles"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemListView.m_UseSystemFont">
            <summary>
            If true the component will use the default system font.
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemListView.m_BackgroundContextMenu">
            <summary>
            The ContextMenuStrip that the component displays if no item is below the cursor on right mouse button click.
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemListView.m_ShellDragDrop">
            <summary>Activates/deactivates the internal drag drop handling of the component.</summary>
        </member>
        <member name="F:Jam.Shell.SystemListView.m_headerRect">
            <summary>
            The area occupied by the ListView header.
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemListView.#ctor">
            <summary>
            Constructs a SystemListView
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemListView.PerformSubItemHitTest(Jam.Shell.LVHITTESTINFO@)">
            <summary>
            Determines on what subitem the mouse points to
            </summary>
            <param name="lvHitTestInfo"></param>
        </member>
        <member name="M:Jam.Shell.SystemListView.OnItemShowToolTip(Jam.Shell.SystemListView.ShowToolTipEventArgs)">
            <summary>Raises the item hover event.</summary>
            <param name="eventArgs">A <see cref="T:Jam.Shell.SystemListView.ShowToolTipEventArgs"/> instance holding event data.</param>
        </member>
        <member name="M:Jam.Shell.SystemListView.OnNotifyMessage(System.Windows.Forms.Message)">
            <summary>
            This method is called if a notification event is performed on the message
            pump <see cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)"/>
            </summary>
            <param name="m"></param>
        </member>
        <member name="P:Jam.Shell.SystemListView.HeaderRectangle">
            <summary>
            Returns the area occupied by the ListView header.
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemListView.OnHeaderRightClick">
            <summary>
            Raises the HeaderRightClick-Event
            </summary>
        </member>
        <member name="T:Jam.Shell.SystemListView.ShowToolTipEventHandler">
            <summary>
            <see cref="E:Jam.Shell.SystemListView.ItemShowToolTip"/> event
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.SystemListView.EnableSystemStyles">
            <summary>
            Sets system specific behaviour,
            i.e. FullRowSelect in Vista and upwards.
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemListView.PreserveSystemStyle">
            <summary>
            This method preserves the Windows Vista lightblue selection line if <see cref="P:Jam.Shell.SystemListView.UseSystemStyles"/> is on. 
            The Setting is lost if e.g. a column is clicked to sort things.
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemListView.OnHandleCreated(System.EventArgs)">
            <summary>
            Preserves the system styles of the ListView if the window handle has been recreated.
            </summary>
            <param name="e">An System.EventArgs that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.SystemListView.SetColumnBitmap(System.Int32,System.Windows.Forms.SortOrder)">
            <summary>
            Set the sort icon among the current sort order in the passed column.
            </summary>
            <param name="pColIndex">Contains the index of the column, where the sort icon should be added.</param>
            <param name="pSortOrder">Contains information about the sort order, to get the correct sort icon from the operating system.</param>
        </member>
        <member name="M:Jam.Shell.SystemListView.GetColumnOrder">
            <summary>
            Retrieve the order in which columns appear.
            </summary>
            <returns>Current display order of column indices</returns>
        </member>
        <member name="M:Jam.Shell.SystemListView.SetColumnOrder(System.Int32[])">
            <summary>
            Sets the order in which columns appear.
            </summary>
            <param name="newOrder">The new display order of the column indices.</param>
            <returns>True if setting the ColumnOrder was successful.</returns>
        </member>
        <member name="M:Jam.Shell.SystemListView.GetSubItemBounds(System.Windows.Forms.ListViewItem,System.Int32)">
            <summary>
            Retrieve the bounds of a ListViewSubItem
            </summary>
            <param name="pItem">The Item containing the SubItem</param>
            <param name="pSubItem">Index of the SubItem</param>
            <returns>Subitem's bounds as a rectangle</returns>
        </member>
        <member name="E:Jam.Shell.SystemListView.ItemShowToolTip">
            <summary>
            This event occurs if the user moved the mouse over a listview item so a tooltip can appear,
            this event also occurs if no <see cref="P:System.Windows.Forms.ListViewItem.ToolTipText"/> is set, it can be added
            dynamically.
            </summary>
        </member>
        <member name="T:Jam.Shell.SystemListView.HeaderRightClickHandler">
            <summary>
            Delegate for the HeaderRightClick event.
            </summary>
            <param name="sender">The sender of the event.</param>
        </member>
        <member name="E:Jam.Shell.SystemListView.HeaderRightClick">
            <summary>
            The event is triggered when the user right clicks on the column headers.
            </summary>
        </member>
        <member name="E:Jam.Shell.SystemListView.BeforeInvokeCommandOnSelected">
            <summary>
            Assign this event to be able to control the behaviour of the control
            when the user double-clicks on an item to start the default action
            </summary>
            <seealso cref="E:Jam.Shell.JamBaseShellListView.BeforeShellCommand"/>
        </member>
        <member name="M:Jam.Shell.SystemListView.OnBeforeInvokeCommandOnSelected(Jam.Shell.InvokeCommandEventArgs)">
            <summary>Calls the BeforeInvokeCommandOnSelected event if it is assigned.</summary>
            <param name="p_EventArgs">event arguments.</param>
            <returns>True, if the command has already been handled.</returns>
        </member>
        <member name="P:Jam.Shell.SystemListView.CreateParams">
            <summary>
            Overwriting the CreateParams property to set the WS_VISIBLE flag; bug #8960
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemListView.HideSelection">
            <summary>
            Gets or sets a value indicating whether the selected item in the control
            remains highlighted when the control loses focus.
            </summary>
            <returns>true if the selected item does not appear highlighted when the control loses
            focus; false if the selected item still appears highlighted when the control
            loses focus. The default is false for the SystemListView and controls that extend it.
            </returns>
        </member>
        <member name="P:Jam.Shell.SystemListView.BackgroundContextMenu">
            <summary>
            Gets or sets the ContextMenuStrip that is displayed if no item of the 
            listview is under the cursor if the user clicks the right mouse button.
            If this value is null, no ContextMenu is shown.
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemListView.ShellDragDrop">
            <summary>Activates/deactivates the internal drag drop handling of the component.</summary>
            <value>true if the component should handle drag and drop exchange with the Shell, false if not.</value>
        </member>
        <member name="P:Jam.Shell.SystemListView.UseSystemStyles">
            <summary>
            Use this property to turn on or off the usage of the system specific design, i.e. enable Vista visual styles of the explorer components.
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemListView.UseSystemFont">
            <summary>
            Set this property to true if you want the component to utilize the default system font.
            It is also set to true if the <see cref="P:Jam.Shell.SystemListView.UseSystemStyles"/> property is set.
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemListView.SetFont(System.Drawing.Font)">
            <summary>
            Sets the font without adjusting other properties.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="T:Jam.Shell.SystemListView.ShowToolTipEventArgs">
            <summary>
            Provides data about the ItemShowToolTip event.
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemListView.ShowToolTipEventArgs.#ctor(System.Windows.Forms.ListViewItem,System.Int32)">
            <summary>
            Standard constructor
            </summary>
            <param name="listViewItem">The listview item.</param>
            <param name="subItemIndex">The subitem index.</param>
        </member>
        <member name="P:Jam.Shell.SystemListView.ShowToolTipEventArgs.Item">
            <summary>
            The zero based index of a Listview item.
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemListView.ShowToolTipEventArgs.SubItemIndex">
            <summary>
            Index to the list view sub items
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellListBaseItem">
            <summary>
            Base class for list items used in derived classes. An instance usually represents an item of the windows shell namespace.
            </summary>
            <seealso cref="T:Jam.Shell.ShellListItem"/>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.#ctor(System.String)">
            <summary>
            The default constructor.
            </summary>
            <param name="p_Text">The text caption passed to the base class <see cref="T:System.Windows.Forms.ListViewItem"/> constructor.</param>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.m_ShellListView">
            <summary>
            Holds the ListView of this ListItem as JamBaseShellListView typed variable.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.m_RelativeItemIdList">
            <summary>
            ItemIdList of this item relative to the folder p_Path ItemIdList.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.m_AbsoluteItemIdList">
            <summary> Absolute ItemIdList of this item. </summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.m_QueuedCompleteDetailsWorkItem">
            <summary>Holds an already queued workitem to complete the item details, to avoid queuing more than 1 workitem per item.</summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.m_ItemState">
            <summary>Stores the state of the item. <see cref="P:Jam.Shell.ShellListBaseItem.DetailsCompleted"/> and <see cref="P:Jam.Shell.ShellListBaseItem.Cut"/></summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.m_OverlayImage">
            <summary>
            Used to store the value of the <see cref="P:Jam.Shell.ShellListBaseItem.OverlayImage"/> OverlayImage property, the index of the overlay item in the system image list of this item.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.m_VariantColumnTexts">
            <summary> This list holds the column texts of the item. It`s filled in FillSubitems. </summary>
            <remarks> Vista or later only. </remarks>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.ItemIdListWorkItem">
            <summary>Holds a WorkItem running for this instance.</summary>
            <value>A workitem, typically resolving the ItemIdList associated with this instance.</value>
        </member>
        <member name="T:Jam.Shell.ShellListBaseItem.ItemState">
            <summary>
            Flags that reflect the state of the ShellListBaseItem
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.ItemState.DetailsCompleted">
            <summary>The ImageIndex and <see cref="P:Jam.Shell.ShellListBaseItem.OverlayImage"/> index are valid, if this flag is set</summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.ItemState.ColumnInfoAvailable">
            <summary>The subitems have been filled with information</summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.ItemState.Cut">
            <summary>Whether the item's image is shown ghosted</summary>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.ShellListView">
            <summary>
            The same instance as <see cref="T:System.Windows.Forms.ListView"/> but typed as <see cref="T:Jam.Shell.JamBaseShellListView"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.DetailsCompleted">
            <summary>
            Returns true if item details have already been loaded.
            </summary>
            <value>true if details completed, false if not.</value>
            <seealso cref="M:Jam.Shell.ShellListView.CompleteDetails(Jam.Shell.ShellListItem)"/>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.QueuedCompleteDetailsWorkItem">
            <summary>Holds an already queued workitem to complete the item details, to avoid queuing more than 1 workitem per item.</summary>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.TooltipWorkItem">
            <summary>Cache for the TooltipWorkItem to make sure only one is running at a time.</summary>
            <value>The tooltip work item.</value>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.FullPath">
            <summary>
            Use to get the full path of this item.
            </summary>
            <returns>The full file system path of this item. An empty string if this item is not a file system object.</returns>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.AbsoluteItemIdList">
            <summary>
            Lazy loads and caches the ItemIdList corresponding to the complete path of the ListItem.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.Checked">
            <summary>
            This property calls <see cref="P:Jam.Shell.ShellListBaseItem.CheckState"/> and
            returns true only if the item is CheckState.Checked 
            and false if in CheckState.Grayed or CheckState.UnChecked.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.CheckState">
            <summary>
            If the <see cref="P:Jam.Shell.JamBaseShellListView.CheckBoxes"/> property of the <see cref="P:Jam.Shell.ShellListBaseItem.ShellListView"/> is true
            then this property can be used to get or set the check state.
            If the value that is set changes the item's checkstate, and a <see cref="T:Jam.Shell.ShellControlConnector"/> is
            assigned to the <see cref="P:Jam.Shell.ShellListBaseItem.ShellListView"/> the item is contained in, the <see cref="P:Jam.Shell.ShellControlConnector.SelectionList"/>
            will be updated accordingly.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.ColumnInfoAvailable">
            <summary>
            Returns true if the columns have been added as subitems
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.VariantColumnTexts">
            <summary> This array holds the column texts of the item. It`s filled in FillSubitems. </summary>
            <remarks> Vista or later only. 
            It`s internal here, because it`s currently just used and useful for the ShellList Items but will be used for the FileList soon.
            As we already implemented code into the BaseItem (for future usage in the ShellList and FileList), we need the array here.
            </remarks>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.Cut">
            <summary>
            Defines if the item's image should be shown ghosted or not.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.Jam#Shell#IDropTarget#IsDropTarget">
            <summary>
            if this property is set to true, then the item is formatted as a highlighted drop target.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.OverlayImage">
            <summary>
            The index of the overlay image in the system image list that should be shown in front of the normal icon.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListBaseItem.RelativeItemIdList">
            <summary>
            Get the relative PIDL of the current item.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.Reload(Jam.Shell.ItemIdList)">
            <summary>Reloads the item. If an ItemIdList is passed it is refreshed and used as new absolute ItemIdList for the item.</summary>
            <param name="pItemIdList">An absolute ItemIdList that is used as new absolute ItemIdList of the Item or null if only the details of the Item shall be reloaded</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.DetailsCompletedReset">
            <summary>
            Resets the <see cref="P:Jam.Shell.ShellListBaseItem.DetailsCompleted"/> statusflag. So the next time the
            <see cref="M:Jam.Shell.ShellListBaseItem.CompleteDetails"/> function is called, information on the item is retrieved again
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.PrepareSubitems(Jam.Shell.JamBaseShellListView)">
            <summary>
            Adds as many subitems as needed to fill the shell contents later.
            </summary>
            <param name="shellListView">The shellListView of this item.</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.GetVariantValue(Jam.Shell.SHCOLUMNID,System.Boolean)">
            <summary>Gets the value for the specified column as variant.</summary>
            <param name="pColumnId">Identifier for the column.</param>
            <param name="pForceLoading">true to force loading if the value has not yet been cached.</param>
            <returns>The variant value.</returns>
            <remarks>
            <para>The base version will not return null except for the Name column if pForceLoading is false. Only derived classes have cached values that can be returned without loading the value from the system.</para>
            <para>Only for Vista and later.</para>
            </remarks>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.RemoveSubItem(System.Int32)">
            <summary>
            Removes the subitem at the passed postion.
            </summary>
            <param name="pPosition">The position of the subitem to remove.</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.Rename(System.String)">
            <summary>
            Renames the item.
            </summary>
            <param name="p_NewName">The new item name.</param>
            <returns>True if the renaming was successful.</returns>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.AfterRename(Jam.Shell.ShellBrowser,System.String,System.String)">
            <summary>
            Refreshes the item`s ItemIdLists, text and executes the PathWasRenamed methods
            </summary>
            <param name="sb">The ShellBrowser that is set to the new Path of the item.</param>
            <param name="newName">The new name of the item.</param>
            <param name="oldPath">The old name of the item.</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.RefreshGhostedState">
            <summary>
            Refreshes the ghosted state of the item, e.g. after a
            <see cref="M:Jam.Shell.ShellListView.SmartRefresh"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.RefreshOverlayImageIndex">
            <summary>
            Refreshes the overlay image index of the item.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.InvertCheckState">
            <summary>
            This method inverts the <see cref="P:Jam.Shell.ShellListBaseItem.CheckState"/> of the <see cref="T:Jam.Shell.ShellListItem"/> 
            instance. If the Item was checked it's state will be set to unchecked.
            If it was Grayed or UnChecked it will be Checked afterwards.
            If the Item is not associated (contained) in a <see cref="P:Jam.Shell.ShellListBaseItem.ShellListView"/> or
            the <see cref="P:Jam.Shell.ShellListBaseItem.ShellListView"/> has no <see cref="T:Jam.Shell.ShellControlConnector"/> assigned,
            this method does nothing and returns immediately.
            Furthermore the ListView needs to have the <see cref="P:Jam.Shell.JamBaseShellListView.CheckBoxes"/> property
            enabled.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.RefreshCheckState">
            <summary>
            Refreshes the value of the <see cref="P:Jam.Shell.ShellListBaseItem.CheckState"/> CheckSate property by starting an asynchronous operation.
            Calling this method has no effect if the item is not part of a list, or has no ShellControlConnector assigned.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.SetCheckState(Jam.Shell.CheckState)">
            <summary>
            This method should be used internally to update the <see cref="P:System.Windows.Forms.ListViewItem.StateImageIndex"/>
            of the item without side effects. (Using the public <see cref="P:Jam.Shell.ShellListBaseItem.CheckState"/> property 
            will cause the <see cref="P:Jam.Shell.ShellControlConnector.SelectionList"/> to be modified).
            </summary>
            <param name="value">The new checkstate of the item.</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.InvokeSetThumbnailImage(System.Windows.Forms.ImageList,System.Drawing.Bitmap,Jam.Shell.ShellBrowser)">
            <summary>
            Invokes <see cref="M:Jam.Shell.ShellListBaseItem.SetThumbnailBitmap(System.Windows.Forms.ImageList,System.Drawing.Bitmap,Jam.Shell.ShellBrowser)"/> from the gui thread, this
            adds the bitmap to the imagecollection of the imagelist, sets the
            image index of this item accordingly.
            Queues another work-item to obtain a real thumbnail later on
            </summary>
            <param name="imageList">a thumbnail imagelist</param>
            <param name="bitmap">the surrogate bitmap that is initially set (obtained earlier from GetIconAsBitmap)</param>
            <param name="shellBrowser"></param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.SetThumbnailBitmap(System.Windows.Forms.ImageList,System.Drawing.Bitmap,Jam.Shell.ShellBrowser)">
            <summary>
            Adds the bitmap to the imagecollection of the imagelist, sets the
            image index of this item accordingly.
            Queues another work-item to obtain a real thumbnail later on
            </summary>
            <param name="imageList">The imagelist to use.</param>
            <param name="bitmap">The surrogate bitmap that is initially set.</param>
            <param name="shellBrowser">The <see cref="T:Jam.Shell.ShellBrowser"/> instance to use to query the real thumbnail asynchronously.</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.GetThumbnailCallback(System.Drawing.Image,System.Drawing.Bitmap,System.Object)">
            <summary>
            This method is called when the thumbnail image is rendered completely
            </summary>
            <param name="pThumbnail">The bitmap of the thumbnail image</param>
            <param name="pBitmapSource">The source the image was created from. It must not be disposed before the Image is released.</param>
            <param name="pState">The ShellListItem for that the thumbnail image had been rendered</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.Invalidate">
            <summary>
            Triggers a repainting of the image of the item.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.SetImageIndex(System.Int32)">
            <summary>
            This method sets the image index (<see cref="P:System.Windows.Forms.ListViewItem.ImageIndex"/>). It is used in conjunction with
            <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])"/>.
            </summary>
            <param name="imageIndex"></param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.SetOverlayIndex(System.Int32)">
            <summary>
            This method sets the overlay image index (<see cref="P:System.Windows.Forms.ListViewItem.ImageIndex"/>) it is used in conjunction with
            <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])"/>.
            </summary>
            <param name="imageIndex"></param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.SetCut(System.Boolean)">
            <summary>
            This method sets the <see cref="P:Jam.Shell.ShellListBaseItem.Cut"/> property it is used in conjunction with
            <see cref="M:System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])"/>.
            </summary>
            <param name="cut">if true the item is shown ghosted</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.InvokeSetImageIndex(System.Int32)">
            <summary>Sets the ImageIndex property through BeginInvoke</summary>
            <param name="imageIndex">The image index to set</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.InvokeSetOverlayIndex(System.Int32)">
            <summary>Sets the OverlayImage index property through BeginInvoke</summary>
            <param name="imageIndex">The image index to set</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.InvokeSetCut(System.Boolean)">
            <summary>Sets <see cref="P:Jam.Shell.ShellListBaseItem.Cut"/> property through BeginInvoke</summary>
            <param name="cut">whether the items is shown as 'cut' or not.</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.CompleteDetails">
            <summary>
            Completes the details of the ShellListBaseItem, given that it's <see cref="T:System.Windows.Forms.ListView"/> property is set,
            ie. the item has been added to the listview. Consider calling <see cref="M:Jam.Shell.ShellListBaseItem.CompleteDetails(Jam.Shell.JamBaseShellListView)"/>
            if the Item has not yet been added to the ListView.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.CompleteDetails(Jam.Shell.JamBaseShellListView)">
            <summary>
            Completes the details of the ShellListBaseItem 
            </summary>
            <param name="listView">The listview that is used to gather information from</param>
        </member>
        <member name="T:Jam.Shell.ShellListBaseItem.Details">
            <summary>
            Details information that is used to set 
            item properties from the gui thread
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.Details.ImageIndex">
            <summary>
            Image index of the element
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.Details.OverlayIndex">
            <summary>Image index of the overlay.</summary>
        </member>
        <member name="F:Jam.Shell.ShellListBaseItem.Details.Ghosted">
            <summary>
            Whether the item is shown ghosted or not
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.InvokeSetDetails(System.Windows.Forms.ListView,Jam.Shell.ShellListBaseItem.Details)">
            <summary>
            Invokes the <see cref="M:Jam.Shell.ShellListBaseItem.SetDetails(System.Windows.Forms.ListView,Jam.Shell.ShellListBaseItem.Details)"/> method from within the GUI thread
            </summary>
            <param name="listView">listview</param>
            <param name="details">the details to set</param>
        </member>
        <member name="M:Jam.Shell.ShellListBaseItem.SetDetails(System.Windows.Forms.ListView,Jam.Shell.ShellListBaseItem.Details)">
            <summary>
            Always called from the gui thread
            </summary>
            <param name="listView"></param>
            <param name="details"></param>
        </member>
        <member name="T:Jam.Shell.RefreshLevel">
            <summary>Possible values for refresh operations for controls connected through a <see cref="T:Jam.Shell.ShellControlConnector"/>.</summary>
            <seealso cref="T:Jam.Shell.ShellControlConnector"/>
        </member>
        <member name="F:Jam.Shell.RefreshLevel.Full">
            <summary>Indicates that the callee should perform a full refresh of its contents.
            This will usually be an entire reload of the displyed items.</summary>
        </member>
        <member name="F:Jam.Shell.RefreshLevel.Smart">
            <summary>Indicates that the callee should perform a quick refresh of its contents.
            It is tolerable that changes in metadata are not detected. Removed and deleted items hsould be detected.
            The runtime of this method should be significantly faster thatn the one of the <see cref="M:Jam.Shell.ShellControlConnector.Refresh(Jam.Shell.RefreshLevel)"/> method.
            </summary>
        </member>
        <member name="F:Jam.Shell.RefreshLevel.Checkboxes">
            <summary>
            Just update the CheckBoxes.
            </summary>
        </member>
        <member name="T:Jam.Shell.ViewState">
            <summary>
            ViewState enumeration for ListView superseeds System.Windows.Forms.View
            </summary>
        </member>
        <member name="F:Jam.Shell.ViewState.Details">
            <summary>
            Details view.
            </summary>
        </member>
        <member name="F:Jam.Shell.ViewState.LargeIcons">
            <summary>
            LargeIcon view, typically 32x32
            </summary>
        </member>
        <member name="F:Jam.Shell.ViewState.SmallIcons">
            <summary>
            SmallIcon view, typically 16x16
            </summary>
        </member>
        <member name="F:Jam.Shell.ViewState.List">
            <summary>
            List view
            </summary>
        </member>
        <member name="F:Jam.Shell.ViewState.Tile">
            <summary>
            Tile view
            </summary>
        </member>
        <member name="F:Jam.Shell.ViewState.ExtraLargeIcons">
            <summary>
            ExtraLargeIcon view, typically 256x256
            </summary>
        </member>
        <member name="F:Jam.Shell.ViewState.Thumbnails">
            <summary>
            Thumbnails view, size is defined by <see cref="P:Jam.Shell.JamBaseShellListView.ThumbnailSize"/>, typically 96x96
            </summary>
        </member>
        <member name="F:Jam.Shell.ViewState.LargerIcons">
            <summary>
            LargerIcons view, typically 48x48
            </summary>
        </member>
        <member name="T:Jam.Shell.BeforeShellColumnChangedCancelArgs">
            <summary>
            Cancellable EventArgs for BeforeShellColumnChanged event.
            The event is cancellable by usage of inherited eventArgs.Cancel property.
            </summary>
        </member>
        <member name="P:Jam.Shell.BeforeShellColumnChangedCancelArgs.Checked">
            <summary>
            Whether the column was checked or not.
            </summary>
        </member>
        <member name="P:Jam.Shell.BeforeShellColumnChangedCancelArgs.ShellColumnId">
            <summary>
            The ShellColumnId that was selected or deselected.
            </summary>
        </member>
        <member name="M:Jam.Shell.BeforeShellColumnChangedCancelArgs.#ctor(Jam.Shell.SHCOLUMNID,System.Boolean)">
            <summary>
            Creates a new instance of BeforeShellColumnChangedCancelArgs
            </summary>
            <param name="shellColumnId">The ShellColumnId that was selected.</param>
            <param name="colWasChecked">Whether the ShellColumnId was checked or unchecked</param>
        </member>
        <member name="T:Jam.Shell.CheckStateChangedEventArgs">
            <summary>
            The CheckStateChangedEventArgs contains data for the <see cref="E:Jam.Shell.JamBaseShellListView.CheckStateChanged"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.CheckStateChangedEventArgs.#ctor(Jam.Shell.ShellListBaseItem,Jam.Shell.CheckState)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.CheckStateChangedEventArgs"/> class.
            <seealso cref="T:Jam.Shell.ItemCheckStateChangedEventArgs`1"/>
            </summary>
            <param name="item"><see cref="T:Jam.Shell.ShellListBaseItem"/> object, which contains information about the item, where the <see cref="T:Jam.Shell.CheckState"/> has changed.</param>
            <param name="oldCheckState">Contains the <see cref="T:Jam.Shell.CheckState"/>, which the item had before it was changed.</param>
        </member>
        <member name="T:Jam.Shell.ItemCheckStateChangedEventArgs`1">
            <summary>
            The baseclass for <see cref="T:Jam.Shell.NodeCheckStateChangedEventArgs"/> and
            <see cref="T:Jam.Shell.CheckStateChangedEventArgs"/>.
            </summary>
            <typeparam name="T">Item type the checkstate event is issued, e.g. <see cref="T:Jam.Shell.ShellListItem"/>, <see cref="T:Jam.Shell.ShellTreeNode"/></typeparam>
        </member>
        <member name="M:Jam.Shell.ItemCheckStateChangedEventArgs`1.#ctor(`0,Jam.Shell.CheckState)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ItemCheckStateChangedEventArgs`1"/> class.
            </summary>
            <param name="item">object, which contains information about the item, where the <see cref="T:Jam.Shell.CheckState"/> has changed.</param>
            <param name="oldCheckState">Contains the <see cref="T:Jam.Shell.CheckState"/>, which the item had before it was changed.</param>
        </member>
        <member name="P:Jam.Shell.ItemCheckStateChangedEventArgs`1.Item">
            <summary>
            object, which contains information about the item, where the <see cref="T:Jam.Shell.CheckState"/> has changed.
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemCheckStateChangedEventArgs`1.OldCheckState">
            <summary>
            Contains the <see cref="T:Jam.Shell.CheckState"/>, which the item had before it was changed.
            </summary>
        </member>
        <member name="T:Jam.Shell.VisualStyleRendererWithAlternative">
            <summary>
            Uses a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer"/> to draw an element if Visual Styles are enabled or draws an alternative otherwise.
            </summary>
        </member>
        <member name="M:Jam.Shell.VisualStyleRendererWithAlternative.#ctor(System.String,System.Int32,System.Int32)">
            <summary>
            Constructor for creating a <c>VisualStyleRendererWithAlternative</c>.
            </summary>
            <param name="pClassName">The theme class name.</param>
            <param name="pPart">The Part ID</param>
            <param name="pState">The state</param>
        </member>
        <member name="M:Jam.Shell.VisualStyleRendererWithAlternative.DrawAlternativeBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle)">
            <summary>
            Draws the alternative background.
            </summary>
            <param name="pDeviceContext">The device context.</param>
            <param name="pBounds">The bounds.</param>
        </member>
        <member name="M:Jam.Shell.VisualStyleRendererWithAlternative.DrawBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle)">
            <summary>
            Draws the background.
            </summary>
            <param name="pDeviceContext">The device context.</param>
            <param name="pBounds">The bounds.</param>
        </member>
        <member name="M:Jam.Shell.VisualStyleRendererWithAlternative.DrawParentBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle,System.Windows.Forms.Control)">
            <summary>
            Draws the parent background of a control.
            </summary>
            <param name="pDeviceContext">The device context.</param>
            <param name="pBounds">The bounds.</param>
            <param name="pChildControl">The child control.</param>
        </member>
        <member name="P:Jam.Shell.VisualStyleRendererWithAlternative.ForceAlternative">
            <summary>
            Gets or sets if drawing of alternative should be forced.
            </summary>
        </member>
        <member name="T:Jam.Shell.BrushAlternativeRenderer">
            <summary>
            Uses a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer"/> to draw an element if Visual Styles are enabled or draws an alternative using a <see cref="P:Jam.Shell.BrushAlternativeRenderer.Brush"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.BrushAlternativeRenderer.#ctor(System.String,System.Int32,System.Int32,System.Drawing.Brush)">
            <summary>
            Constructor for creating a <c>BrushAlternativeRenderer</c> instance.
            </summary>
            <param name="pClassName">The theme class name.</param>
            <param name="pPart">The Part ID</param>
            <param name="pState">The state</param>
            <param name="pBrush">The brush to use.</param>
        </member>
        <member name="M:Jam.Shell.BrushAlternativeRenderer.DrawAlternativeBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="pDeviceContext"><inheritdoc/></param>
            <param name="pBounds"><inheritdoc/></param>
        </member>
        <member name="P:Jam.Shell.BrushAlternativeRenderer.Brush">
            <summary>
            Gets or sets the <see cref="T:System.Drawing.Brush"/> to use.
            </summary>
        </member>
        <member name="T:Jam.Shell.FontIconAlternativeRenderer">
            <summary>
            Uses a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer"/> to draw an element if Visual Styles are enabled or draws an alternative font icon.
            </summary>
        </member>
        <member name="M:Jam.Shell.FontIconAlternativeRenderer.#ctor(System.String,System.Int32,System.Int32,System.String,System.Drawing.Color)">
            <summary>
            Constructor for creating a <c>FontIconAlternativeRenderer</c> instance.
            </summary>
            <param name="pClassName">The theme class name.</param>
            <param name="pPart">The Part ID</param>
            <param name="pState">The state</param>
            <param name="pFontIcon">The alternative icon to use.</param>
            <param name="pFontColor">The color of the alternative icon.</param>
        </member>
        <member name="M:Jam.Shell.FontIconAlternativeRenderer.DrawAlternativeBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="pDeviceContext"><inheritdoc/></param>
            <param name="pBounds"><inheritdoc/></param>
        </member>
        <member name="P:Jam.Shell.FontIconAlternativeRenderer.Font">
            <summary>
            Gets or sets the font used to draw the icon.
            </summary>
        </member>
        <member name="T:Jam.Shell.ComboButtonAlternativeRenderer">
            <summary>
            Uses a <see cref="T:System.Windows.Forms.VisualStyles.VisualStyleRenderer"/> to draw an element if Visual Styles are enabled or draws an alternative combo button.
            </summary>
        </member>
        <member name="M:Jam.Shell.ComboButtonAlternativeRenderer.#ctor(System.String,System.Int32,System.Int32,System.Windows.Forms.ButtonState)">
            <summary>
            Constructor for creating a <c>ButtonAlternativeRenderer</c> instance.
            </summary>
            <param name="pClassName">The theme class name.</param>
            <param name="pPart">The Part ID</param>
            <param name="pState">The state</param>
            <param name="pButtonState">The button state to use.</param>
        </member>
        <member name="M:Jam.Shell.ComboButtonAlternativeRenderer.DrawAlternativeBackground(System.Drawing.IDeviceContext,System.Drawing.Rectangle)">
            <summary>
            <inheritdoc/>
            </summary>
            <param name="pDeviceContext"><inheritdoc/></param>
            <param name="pBounds"><inheritdoc/></param>
        </member>
        <member name="P:Jam.Shell.ComboButtonAlternativeRenderer.ButtonState">
            <summary>
            Gets or sets the <see cref="T:System.Windows.Forms.ButtonState"/>.
            </summary>
        </member>
        <member name="T:Jam.Shell.IJamShellColumnCollection">
            <summary>
            Interface representing a ColumnCollection. This interface is returned by <see cref="P:Jam.Shell.JamBaseShellListView.Columns"/> 
            </summary>
            <example> 
            This example re-initializes the columns displayed for <see cref="F:Jam.Shell.ShellFolder.MyMusic"/> in the <see cref="E:Jam.Shell.JamBaseShellListView.CreatedColumns"/> event.
            <code source ="CodeExamplesWinforms.cs" region = "AddRemoveShellColumns" lang="C#" />
            </example>
            <example>
            This example adds custom columns in the <see cref="E:Jam.Shell.JamBaseShellListView.CreatedColumns"/> event.
            <code source ="CodeExamplesWinforms.cs" region = "CreatingCustomColumns" lang="C#"/>
            </example>
        </member>
        <member name="M:Jam.Shell.IJamShellColumnCollection.Show(Jam.Shell.SHCOLUMNID)">
            <summary>
            Shows the shell column identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID"/> at its default shell position.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> identifying the shell column to be shown.</param>
            <returns>The <see cref="T:Jam.Shell.JamShellColumnHeader"/> that was added.</returns>
            <example> 
            This example re-initializes the columns displayed for <see cref="F:Jam.Shell.ShellFolder.MyMusic"/> in the <see cref="E:Jam.Shell.JamBaseShellListView.CreatedColumns"/> event.
            <code source ="CodeExamplesWinforms.cs" region = "AddRemoveShellColumns" lang="C#" />
            </example>
        </member>
        <member name="M:Jam.Shell.IJamShellColumnCollection.Add(Jam.Shell.SHCOLUMNID)">
            <summary>
            Adds the shell column identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID"/>.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> identifying the shell column to be added.</param>
            <returns>The <see cref="T:Jam.Shell.JamShellColumnHeader"/> that was added.</returns>
            <example> 
            This example re-initializes the columns displayed for <see cref="F:Jam.Shell.ShellFolder.MyMusic"/> in the <see cref="E:Jam.Shell.JamBaseShellListView.CreatedColumns"/> event.
            <code source ="CodeExamplesWinforms.cs" region = "AddRemoveShellColumns" lang="C#" />
            </example>
        </member>
        <member name="M:Jam.Shell.IJamShellColumnCollection.Insert(System.Int32,Jam.Shell.SHCOLUMNID)">
            <summary>
            Inserts the shell column identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID"/> at the passed position.
            </summary>
            <param name="pIndex">The position to insert the column at.</param>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> identifying the shell column to be shown.</param>
            <returns>The <see cref="T:Jam.Shell.JamShellColumnHeader"/> that was added.</returns>
        </member>
        <member name="M:Jam.Shell.IJamShellColumnCollection.Add(System.Windows.Forms.ColumnHeader)">
            <summary>
            Adds the specified ColumnHeader to the collection. Please use <see cref="M:Jam.Shell.IJamShellColumnCollection.Add(Jam.Shell.JamShellColumnHeader)"/>  instead.
            </summary>
            <param name="pHeader">The ColumnHeader to add. </param>
            <returns>The position the column was added at.</returns>
        </member>
        <member name="M:Jam.Shell.IJamShellColumnCollection.Add(Jam.Shell.JamShellColumnHeader)">
            <summary>
            Adds the specified <see cref="T:Jam.Shell.JamShellColumnHeader"/> to the collection. 
            </summary>
            <param name="pHeader">The <see cref="T:Jam.Shell.JamShellColumnHeader"/> to add.</param>
            <returns>The position the column was added at.</returns>
            <example>
            This example adds custom columns in the <see cref="E:Jam.Shell.JamBaseShellListView.CreatedColumns"/> event.
            <code source ="CodeExamplesWinforms.cs" region = "CreatingCustomColumns" lang="C#"/>
            </example>
        </member>
        <member name="M:Jam.Shell.IJamShellColumnCollection.Remove(Jam.Shell.JamShellColumnHeader)">
            <summary>
            Removes the specified ColumnHeader from the collection.
            </summary>
            <param name="pHeader">The ColumnHeader to remove.</param>
        </member>
        <member name="M:Jam.Shell.IJamShellColumnCollection.Remove(Jam.Shell.SHCOLUMNID)">
            <summary>
            Removes the shell column identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID"/>.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> identifying the shell column.</param>
        </member>
        <member name="M:Jam.Shell.IJamShellColumnCollection.Clear">
            <summary>
            Clears this instance.
            </summary>
            <example>This example re-initializes the columns displayed for <see cref="F:Jam.Shell.ShellFolder.MyMusic"/> in the <see cref="E:Jam.Shell.JamBaseShellListView.CreatedColumns"/> event.
            <code source ="CodeExamplesWinforms.cs" region = "AddRemoveShellColumns" lang="C#"/>
            </example>
        </member>
        <member name="P:Jam.Shell.IJamShellColumnCollection.Item(System.Int32)">
            <summary>
            Gets the <see cref="T:Jam.Shell.JamShellColumnHeader"/> at the specified index.
            </summary>
            <value>
            The <see cref="T:Jam.Shell.JamShellColumnHeader"/>.
            </value>
            <param name="index">The index.</param>
            <returns>The <see cref="T:Jam.Shell.JamShellColumnHeader"/> at the specified index, an <see cref="T:System.ArgumentOutOfRangeException"/> if the index does not exist.</returns>
        </member>
        <member name="P:Jam.Shell.IJamShellColumnCollection.Item(Jam.Shell.SHCOLUMNID)">
            <summary>
            Gets the <see cref="T:Jam.Shell.JamShellColumnHeader"/> identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID"/>
            </summary>
            <value>
            The <see cref="T:Jam.Shell.JamShellColumnHeader"/>.
            </value>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> identifying the shell column.</param>
            <returns>The <see cref="T:Jam.Shell.JamShellColumnHeader"/> with the specified SHCOLUMNID. Null if the SHCOLUMNId does not exist.</returns>
            <example><code source ="CodeExamplesWinforms.cs" region = "AccessingColumns" lang="C#"/></example>
        </member>
        <member name="M:Jam.Shell.IJamShellColumnCollection.GetColumnByShellIndex(System.Int32)">
            <summary>
            Gets the <see cref="T:Jam.Shell.JamShellColumnHeader"/> identified by the passed shell index.
            </summary>
            <param name="pShellIndex">The shell index of the column.</param>
            <returns>The <see cref="T:Jam.Shell.JamShellColumnHeader"/> with the specified shell index.</returns>
            <example><code source ="CodeExamplesWinforms.cs" region = "AccessingColumns" lang="C#"/></example>
        </member>
        <member name="T:Jam.Shell.JamShellColumnCollection">
            <summary>
            The ColumnCollection class used internally in <see cref="T:Jam.Shell.JamBaseShellListView"/>s and subtypes. The instance can be accessed via its interface <see cref="T:Jam.Shell.IJamShellColumnCollection"/>
            </summary>
            <seealso cref="T:Jam.Shell.IJamShellColumnCollection"/>
            <seealso cref="P:Jam.Shell.JamBaseShellListView.Columns"/>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.#ctor(Jam.Shell.JamBaseShellListView)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.JamShellColumnCollection"/> class.
            </summary>
            <param name="owner">The owner.</param>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.Add(System.Windows.Forms.ColumnHeader)">
            <summary>
            Adds an existing System.Windows.Forms.ColumnHeader to the collection.
            </summary>
            <param name="pValue">The System.Windows.Forms.ColumnHeader to add to the collection.</param>
            <returns>The zero-based index into the collection where the item was added.</returns>
            <remarks>ColumnHeaders that are not of type JamShellColumnHeader are cloned to the correct type.</remarks>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.Add(Jam.Shell.JamShellColumnHeader)">
            <summary>
            Adds an existing JamShellColumnHeader to the collection.
            </summary>
            <param name="pValue">The JamShellColumnHeader to add to the collection. </param>
            <returns>The zero-based index into the collection where the item was added.</returns>
        </member>
        <member name="P:Jam.Shell.JamShellColumnCollection.Item(System.Int32)">
            <summary>
            Gets the JamColumnHeader at the specified index within the collection.
            </summary>
            <param name="pIndex">The index of the column header to retrieve from the collection.</param>
            <returns>A JamShellColumnHeader representing the column header located at the specified index.</returns>
        </member>
        <member name="P:Jam.Shell.JamShellColumnCollection.Item(System.String)">
            <summary>
            Gets the column header with the specified key from the collection.
            </summary>
            <param name="pKey">The key of the column header to retrieve from the collection.</param>
            <returns>A JamShellColumnHeader representing the column header with the specified key.</returns>
        </member>
        <member name="P:Jam.Shell.JamShellColumnCollection.Item(Jam.Shell.SHCOLUMNID)">
            <summary>
            Gets the <see cref="T:Jam.Shell.JamShellColumnHeader"/> with the specified <see cref="T:Jam.Shell.SHCOLUMNID"/>.
            </summary>
            <value>
            The <see cref="T:Jam.Shell.JamShellColumnHeader"/>.
            </value>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>A JamShellColumnHeader representing the column header with the specified <see cref="T:Jam.Shell.SHCOLUMNID"/>.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.Clear">
            <summary>
            Removes all column headers from the collection.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.RemoveAt(System.Int32)">
            <summary>
            Removes the ColumnHeader located at the specified index.
            </summary>
            <param name="pIndex">Index of the ColumnHeader in the collection to be removed.</param>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.Show(Jam.Shell.SHCOLUMNID,System.Int32)">
            <summary>
            Shows the specified shell column at the position passed.
            </summary>
            <param name="pShellColumnId">The shell column to be displayed.</param>
            <param name="pPos">The position to show it at.</param>
            <returns>A <see cref="T:Jam.Shell.JamShellColumnHeader"/> for the newly created header. Returns null, if the passed SHCOLUMNID is not available.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.Show(Jam.Shell.SHCOLUMNID)">
            <summary>
            Shows the shell column identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID" /> at its default shell position.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> identifying the shell column to be shown.</param>
            <returns>The column header.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.Add(Jam.Shell.SHCOLUMNID)">
            <summary>
            Adds the shell column identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID" />.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID" /> identifying the shell column to be added.</param>
            <returns>The column header.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.AddHeader(System.Int32)">
            <summary>
            Adds the header for the passed shell index. Doesn't load contents.
            </summary>
            <param name="pShellIndex">The shell index.</param>
            <returns>The added <see cref="T:Jam.Shell.JamShellColumnHeader"/>.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.AddHeader(System.Int32,System.Int32)">
            <summary>
            Adds the header at the specified position. Doesn't load contents.
            </summary>
            <param name="pPosition">The position to add the column at.</param>
            <param name="pShellIndex">The shell index of the column.</param>
            <returns>The added <see cref="T:Jam.Shell.JamShellColumnHeader"/>.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.AddHeader(Jam.Shell.SHCOLUMNID)">
            <summary>
            Adds the header for the passed SHCOLUMNID.
            </summary>
            <param name="pShellColumnId">A SHCOLUMNID representing the column.</param>
            <returns>The added <see cref="T:Jam.Shell.JamShellColumnHeader"/>.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.AddHeader(System.Int32,Jam.Shell.SHCOLUMNID)">
            <summary>
            Adds the header at the specified position.
            </summary>
            <param name="pPosition">The position.</param>
            <param name="pShellColumnId">A SHCOLUMNID representing the column.</param>
            <returns>The added <see cref="T:Jam.Shell.JamShellColumnHeader"/>.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.GetColumnByShellIndex(System.Int32)">
            <summary>
            Gets the <see cref="T:Jam.Shell.JamShellColumnHeader" /> identified by the passed shell index.
            </summary>
            <param name="pShellIndex">The shell index of the column.</param>
            <returns>
            The <see cref="T:Jam.Shell.JamShellColumnHeader" /> with the specified shell index.
            </returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.GetColumnBySHColumnID(Jam.Shell.SHCOLUMNID)">
            <summary>
            Gets the column specified by the passed <see cref="T:Jam.Shell.SHCOLUMNID"/>.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>true if the there is a column displaying the passed <see cref="T:Jam.Shell.SHCOLUMNID"/>.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.HasCustomColumns">
            <summary>
            Returns true if the list contains custom columns.
            </summary>
            <returns>true if there are custom columns, false if all colums are ShellColumns or there are no columns at all.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.IsCustomColumn(System.Int32)">
            <summary>
            Determines whether the column specified by the passed index is a custom column, i.e. no ShellColumn, but one that contains user defined data.
            </summary>
            <param name="pIndex">Index of the column.</param>
            <returns>True if the column exists and is a custom column, false otherwise. Passing values exeeding the range of existing columns returns false.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.Insert(System.Int32,Jam.Shell.SHCOLUMNID)">
            <summary>
            Inserts the shell column identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID"/> at the passed position.
            </summary>
            <param name="pIndex">The position to insert the column at.</param>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID" /> identifying the shell column to be shown.</param>
            <returns>The <see cref="T:Jam.Shell.JamShellColumnHeader"/> that was inserted.</returns>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.Remove(Jam.Shell.JamShellColumnHeader)">
            <summary>
            Removes the specified ColumnHeader from the collection.
            </summary>
            <param name="pHeader">The ColumnHeader to remove.</param>
        </member>
        <member name="M:Jam.Shell.JamShellColumnCollection.Remove(Jam.Shell.SHCOLUMNID)">
            <summary>
            Removes the shell column identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID" />.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID" /> identifying the shell column.</param>
        </member>
        <member name="T:Jam.Shell.JamShellColumnHeader">
            <summary>
            Represents a single column header in a <see cref="T:Jam.Shell.JamBaseShellListView"/> control.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamShellColumnHeader.DefaultColumnWidth">
            <summary>
            The default column width.
            </summary>
        </member>
        <member name="P:Jam.Shell.JamShellColumnHeader.ShellIndex">
            <summary>
            Gets or sets the ShellIndex of the column and  loads the ColumnHeader for the ShellIndex if the ColumnHeader is alreay part of a JamShellColumnCollection. 
            Contents of the column are not loaded or refreshed however. 
            </summary>
            <value>
            The ShellIndex of the column; 0 is always the column containing the name of an item.
            </value>
            <remarks>The ShellIndex is an integer that identifies the column. 
            It's meaning is relative to the <see cref="P:Jam.Shell.ShellListView.SpecialFolder"/> the List currently displays.
            </remarks>
        </member>
        <member name="P:Jam.Shell.JamShellColumnHeader.ShellColumnId">
            <summary>
            Gets or sets the ShellColumnId and loads the ColumnHeader for the ShellColumnId if the ColumnHeader is alreay part of a JamShellColumnCollection. 
            Contents of the column are not loaded or refreshed however. 
            </summary>
            <value>
            A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.
            </value>
        </member>
        <member name="P:Jam.Shell.JamShellColumnHeader.Visible">
            <summary>
            Gets or sets a value indicating whether the column is currently visible.
            </summary>
            <value>
              <c>true</c> if the col is visible <c>false</c> otherwise.
            </value>
            <remarks>If visible is false the column might either not be available or currently being hidden.</remarks>
        </member>
        <member name="P:Jam.Shell.JamShellColumnHeader.FixedPosition">
            <summary>
            Gets or sets a value indicating whether the column should have a fixed position rather than being moved by other shell columns.
            </summary>
            <value>
              <c>true</c> if the column cannot be moved to the right by other ShellColumns, false otherwise. <c>false</c>.
            </value>
        </member>
        <member name="M:Jam.Shell.JamShellColumnHeader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.JamShellColumnHeader"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamShellColumnHeader.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.JamShellColumnHeader"/> class.
            </summary>
            <param name="text">The text.</param>
        </member>
        <member name="M:Jam.Shell.JamShellColumnHeader.#ctor(System.Windows.Forms.ColumnHeader)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.JamShellColumnHeader"/> class.
            </summary>
            <param name="pCloneFrom">A ColumnHeader that should be cloned.</param>
        </member>
        <member name="M:Jam.Shell.JamShellColumnHeader.LoadShellIndex(Jam.Shell.ShellBrowser,System.Int32,System.Int32)">
            <summary>
            Loads the passed ShellIndex into the column, i.e. it's caption and width, not its contents.
            It is assumed that the Column is already contained in a Collection.
            </summary>
            <param name="pShellBrowser">A valid ShellBrowser instance. This is needed to retreive the correct</param>
            <param name="pShellIndex">The ShellIndex representing the column to get the column information from.</param>
            <param name="pWidth">The wanted width of the column. Only used if > 0.</param>
        </member>
        <member name="M:Jam.Shell.JamShellColumnHeader.IsCustomColumn">
            <summary>
            Determines whether this column is a custom column instead of a shell column. 
            </summary>
            <returns>true if the column is a custom column, false if it is a shell column.</returns>
        </member>
        <member name="T:Jam.Shell.PathEdit">
            <summary>
            The PathEdit is a simple component that allows the user to enter a path or to browse for it. 
            The user can open a browse dialog by pressing the button on the right. Use the Path property 
            to set a default path or the get the path that the user has finally chosen. 
            Use The FolderMode property to define if the user should enter / browse for a path to a file 
            or a folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.PathEdit.cPropertyPath">
            <summary>
            Constant for the INotifyPropertyChanged interface
            </summary>
        </member>
        <member name="M:Jam.Shell.PathEdit.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.PathEdit"/> class.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.DialogTitle">
            <summary>
            Change the window title of the browse dialog, that will be opened if the user pressed the browse button on the right.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.FileFilter">
            <summary>
            Edit your own filter options for the opendialog.
            Example: Image Files(*.BMP;*.JPG;*.GIF)|*.BMP;*.JPG;*.GIF|All files (*.*)|*.*
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.FolderMode">
            <summary>
            Use this property to select if the dialog for browsing for a file, or for a folder should be displayed.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.IsValidPath">
            <summary>
            Check if the selected file or folder is existing on your system at the moment.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.Path">
            <summary>
            Use this property to get or set the path in the edit field.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.DefaultExt">
            <summary>
            Gets or sets the default file name extension.
            Example: "txt"
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.Focused">
            <summary>
            Gets a value indicating whether the TextBox control has input focus.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.TextBox">
            <summary>
            Gives access to the embedded TextBox.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.ToolTip">
            <summary>
            Sets the ToolTip text for the embedded TextBox.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.ContextMenuStrip">
            <summary>
            Get or set the contextmenu strip of the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.Text">
            <summary>
            Get or set the text visible in the editor.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.Button">
            <summary>
            Gives access to the embedded Button.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.FolderBrowserDialog">
            <summary>
            Returns a reference to a FolderBrowserDialog.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.FileBrowserDialog">
            <summary>
            Returns a reference to an OpenFileDialog
            </summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.FileNames">
            <summary>
            Contains the selected files from the FileBrowserDialog.
            </summary>        
        </member>
        <member name="P:Jam.Shell.PathEdit.ShellAutoCompletionMode">
            <summary>
            This property controls the availability of the shells autocompletion mode,
            if set to FileSystem, Url or both, the PathEdit control provides autocompletion
            mode with a via a drop down box.
            If disabled the default behavior is used. 
            Both, FileSystem and Url can be specified at once.
            <see cref="F:Jam.Shell.ShellAutoComplete.FileSystem"/> is enabled by default.
            <see cref="F:Jam.Shell.ShellAutoComplete.Url"/> needs to be used to also provide autocompletion for UNC-Paths.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathEdit.OnHandleCreatedForEditField(System.Object,System.EventArgs)">
            <summary>
            This event is triggered after the handle of the EditField control was created.
            It sends the autocompletion mode
            </summary>
            <param name="sender">sender of the event</param>
            <param name="e">the event arguments when this Event occurs</param>
        </member>
        <member name="M:Jam.Shell.PathEdit.BrowseForFolder">
            <summary>
            Internal method, which handles the browsing for folders.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathEdit.BrowseForFile">
            <summary>
            Internal method, which handles the browsing for files.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathEdit.Focus">
            <summary>
            Sets input focus to the TextBox control.
            </summary>
            <returns>If TextBox control has focus it returns true, otherwise false.</returns>
        </member>
        <member name="M:Jam.Shell.PathEdit.OnCreateControl">
            <summary>Raises the CreateControl event.</summary>
        </member>
        <member name="M:Jam.Shell.PathEdit.OnResize(System.EventArgs)">
            <summary>
            Handles the resizing of PathEdit component.
            </summary>
            <param name="e">Contains general event data.</param>
        </member>
        <member name="M:Jam.Shell.PathEdit.OnFontChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.FontChanged" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="E:Jam.Shell.PathEdit.BeforeShowDialog">
            <summary>
            Occurs before a dialog for file/folder selection is shown after the button of the PathEdit control has been clicked.
            </summary>
        </member>
        <member name="E:Jam.Shell.PathEdit.Change">
            <summary>
            Occurs when the Text in the TextBox changes.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathEdit.OnChange">
            <summary>
            Fires the Change event, when the text in the TextBox changes.
            </summary>
        </member>
        <member name="E:Jam.Shell.PathEdit.ButtonClick">
            <summary>
            This event occurs if the button of the PathEdit control has been clicked.
            </summary>
        </member>
        <member name="E:Jam.Shell.PathEdit.EditFieldClick">
            <summary>
            This event occurs if the user clicked on the editfield.
            </summary>
        </member>
        <member name="E:Jam.Shell.PathEdit.EditFieldKeyDown">
            <summary>
            Occurs when a key is pressed while the edit field has focus
            </summary>
        </member>
        <member name="E:Jam.Shell.PathEdit.EditFieldKeyUp">
            <summary>
            Occurs when a key is released while the edit field has focus
            </summary>
        </member>
        <member name="E:Jam.Shell.PathEdit.EditFieldKeyPress">
            <summary>
            Occurs when a key is pressed while the edit field has focus
            </summary>
        </member>
        <member name="E:Jam.Shell.PathEdit.EditFieldEnter">
            <summary>
            Occurs when the edit field is entered and gains focus
            </summary>
        </member>
        <member name="E:Jam.Shell.PathEdit.EditFieldLeave">
            <summary>
            Occurs when the edit field is left and lost focus
            </summary>
        </member>
        <member name="E:Jam.Shell.PathEdit.PropertyChanged">
            <summary>
            This event is issued if the TextField in the PathEdit changed.
            It is available here to be able to add a DataBinding to the <see cref="P:Jam.Shell.PathEdit.Path"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathEdit.OnPropertyChanged(System.String)">
            <summary>
            This method invokes the PropertyChanged event.
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="M:Jam.Shell.PathEdit.BeginInit">
            <summary>Signals the object that initialization is starting.</summary>
        </member>
        <member name="M:Jam.Shell.PathEdit.EndInit">
            <summary>Signals the object that initialization is complete.</summary>
        </member>
        <member name="P:Jam.Shell.PathEdit.IsInitializing">
            <summary>
            The value this property is true between the calls BeginInit() and EndInit() 
            of the <see cref="T:System.ComponentModel.ISupportInitialize"/> interface.
            </summary>
        </member>
        <member name="T:Jam.Shell.LoadPreviewEventArgs">
            <summary>
            The event arguments for ShellFilePreview.LoadPreview.
            Set the <see cref="P:Jam.Shell.LoadPreviewEventArgs.PreviewHandlerGuid"/>  if you want to use a custom Preview Handler or provide your own Preview Handler implementation in <see cref="P:Jam.Shell.LoadPreviewEventArgs.CustomPreviewHandler"/>
            </summary>
            <seealso cref="E:Jam.Shell.ShellFilePreview.LoadPreview"/>
        </member>
        <member name="P:Jam.Shell.LoadPreviewEventArgs.Path">
            <summary>
            Contains the path of the file or folder that is being loaded.
            </summary>
        </member>
        <member name="P:Jam.Shell.LoadPreviewEventArgs.LoadThumbnail">
            <summary>
            Set this property to true if the thumbnail of the file should be shown instead of the preview handler.
            Sets the previewHandlerGuid to Guid.Empty.
            </summary>
        </member>
        <member name="P:Jam.Shell.LoadPreviewEventArgs.PreviewHandlerGuid">
            <summary>
            Set a valid PreviewHandler Guid to use a custom preview handler.
            If null the PreviewHandler is determined automatically.
            If set to Guid.Empty the file is not previewed. Depending on LoadThumbnail its' thumbnail is loaded.
            </summary>
        </member>
        <member name="P:Jam.Shell.LoadPreviewEventArgs.CustomPreviewHandler">
             <summary>
             Set your own IShellPreviewHandler implementation to custom preview files.
             </summary>
             <value>
             An object implementing <see cref="T:Jam.Shell.IShellPreviewHandler"/>
             </value>
             <example>
             The following example loads cs files into a textbox.
             <code>
             class CustomPreviewHandler : IShellPreviewHandler
             {
              private TextBox m_TextBox;
            
              public bool Load(ShellFilePreview parent, string p_Path, ItemIdList p_AbsolutePidl)
              {
                m_TextBox = new TextBox();
                m_TextBox.Dock = DockStyle.Fill;
                m_TextBox.Parent = parent;
                m_TextBox.WordWrap = false;
                m_TextBox.ScrollBars = ScrollBars.Both;
                m_TextBox.Multiline = true;
                m_TextBox.Text = System.IO.File.ReadAllText(p_Path);
                parent.Controls.Add(m_TextBox);
                return true;
              }
            
              public void Show()
              {
              }
              
              public void Unload()
              {
                m_TextBox.Dispose();
              }
            
              public void Resize()
              {
               //nothing to do.
              }
             }
             
             private void shellFilePreview1_LoadPreview(object sender, LoadPreviewEventArgs e)
             {
              string file = e.Path;
              if (String.IsNullOrEmpty(file))
              {
                return;
              }
              if (".cs".Equals(System.IO.Path.GetExtension(file), StringComparison.OrdinalIgnoreCase))
              {
                e.CustomPreviewHandler = new CustomPreviewHandler();
              }
              else if (e.PreviewHandlerGuid == null)
              {
                //add actions to take if no registered PreviewHandler is available.
              }
             }
             </code>
             </example>
        </member>
        <member name="T:Jam.Shell.ShellFilePreview">
            <summary>
            Use this component to display a preview of a file. Depending on the installed PreviewHandlers not all files types support a preview.
            If no preview is registered, a thumbnail of the file is shown.
            You may either use the <see cref="P:Jam.Shell.ShellFilePreview.Path"/> property to set a path to a file to load the preview or you may synchronize it to a <see cref="T:Jam.Shell.ShellListView"/> or <see cref="T:Jam.Shell.ShellTreeView"/> 
            component using the <see cref="P:Jam.Shell.ShellFilePreview.ShellControlConnector"/> property.
            </summary>
            <remarks>The component is using the Preview Handlers registered in the system to display the files, so that normally the same files that Windows Explorer can preview should be supported.
            There are occasional problems concerning the bitness of the application using the ShellFilePreview vs. the bitness of the PreviewHandler registered for a filetype. 
            With the <see cref="E:Jam.Shell.ShellFilePreview.LoadPreview"/> event it is also possible to use existing PreviewHandlers to display other file extensions.
            If you want to preview Microsoft Outlook .msg files and only the header is displayed, make sure to have Visual Styles enabled for your application. Call "Application.EnableVisualStyles()"
            or change your application manifest accordingly.
            </remarks>
            
        </member>
        <member name="F:Jam.Shell.ShellFilePreview.WebPreviewHandler">
            <summary>The GUID of the WebPreviewHandler class. </summary>
        </member>
        <member name="F:Jam.Shell.ShellFilePreview.m_DisplayMsg">
            <summary>
            Message that is drawn on the control to indicate the status
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellFilePreview.DisplayMsg">
            <summary>Gets or sets a message that is displayed in the component if no preview is currently being displayed.</summary>
            <value>A string that serves as caption if no preview is displayed.</value>
        </member>
        <member name="P:Jam.Shell.ShellFilePreview.PreviewNotPossibleMessage">
            <summary>Gets or sets a message to be displayed if loading the preview failed.</summary>
            <value>A message to be displayed if loading the preview failed. If not set, the system default is retrieved.</value>
        </member>
        <member name="P:Jam.Shell.ShellFilePreview.NoPreviewAvailableMessage">
            <summary>Gets or sets a message to be displayed if the item to be previewed is not supported.</summary>
            <value>A message to be displayed if the item to be previewed is not supported. If not set, the system default is retrieved.</value>
        </member>
        <member name="P:Jam.Shell.ShellFilePreview.SelectFileMessage">
            <summary>Gets or sets a message to be displayed when no item is active.</summary>
            <value>A message to be displayed when no no item is active. If not set, the system default is retrieved.</value>
        </member>
        <member name="F:Jam.Shell.ShellFilePreview.m_ItemIdList">
            <summary>
            The absolute ItemIdList of the selected file.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFilePreview.m_CanLoadItemIdListAsThumbnail">
            <summary>
            Temporary storage for LoadPreviewEventArgs.LoadThumbnail
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellFilePreview.ItemIdList">
            <summary>
            Gets or sets the absolute ItemIdList that is previewed. 
            </summary>
            <remarks>As compared to the <see cref="P:Jam.Shell.ShellFilePreview.Path"/> property there are files that do not have a physical path but still have an ItemIdList (like files on attached devices). 
            If the ShellFilePreview shall be synchronized with other ShellBrowser components this is most easily done using the <see cref="P:Jam.Shell.ShellFilePreview.ShellControlConnector"/> property.
            However currently synchronization to a <see cref="T:Jam.Shell.FileList"/> is not supported. In this case you can use this property to do a manual synchronization.
            </remarks>
            <value>An <see cref="P:Jam.Shell.ShellFilePreview.ItemIdList"/></value>
            <example>
            The following example uses the property to synchronize with a FileList
            <code>
            if (fileList1.SelectedItems.Count > 0)
            {
                shellFilePreview1.ItemIdList = ((FileListItem) fileList1.SelectedItems[0]).AbsoluteItemIdList;
            }
            </code>
            </example>
        </member>
        <member name="P:Jam.Shell.ShellFilePreview.Path">
            <summary>
            Gets or sets the path of the file that is displayed. 
            </summary>
            <value>
            An absolute path.
            </value>
            <exception cref="T:System.IO.FileNotFoundException"> is thrown if the file does not exist.</exception>
            <remarks>If the ShellFilePreview should be synchronized to a <see cref="T:Jam.Shell.ShellListView"/> or a <see cref="T:Jam.Shell.ShellSystemList"/> it is easier to assign the <see cref="P:Jam.Shell.ShellFilePreview.ShellControlConnector"/> property.
            property to both components. 
            </remarks>
            <seealso cref="P:Jam.Shell.ShellFilePreview.ItemIdList"/>
        </member>
        <member name="P:Jam.Shell.ShellFilePreview.AutomaticRefresh">
            <summary>
            Controls whether the component automatically reloads the preview when the file is changed. "
            </summary>
            <value>
              <c>true</c> if previews are refreshed automatically otherwise, <c>false</c>.
            </value>
        </member>
        <member name="F:Jam.Shell.ShellFilePreview.m_CurrentPreviewHandler">
            <summary>
            The PreviewHandler that was last retreived
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.#ctor">
            <summary>
            Initialialises a new instance of the ShellFilePreview class.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.Dispose(System.Boolean)">
            <summary>
            Disposal method for the object that also cleans up resources that are used.
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.OnEnabledChanged(System.EventArgs)">
            <summary>
            While disabled the control only stored the current filename. 
            On enabling a FullRefresh is triggered.
            </summary>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.OnResize(System.EventArgs)">
            <summary>
            Passes the resize event to the current PreviewHandler 
            </summary>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.OnHandleDestroyed(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HandleDestroyed"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.OnPaint(System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the error message text on the ShellFilePreview control.
            </summary>
            <param name="e">Contains event information.</param>
        </member>
        <member name="E:Jam.Shell.ShellFilePreview.LoadPreview">
            <summary>
            Event is thrown when a file is previewed. It can be implemented to set a custom preview control.
            </summary>
            <example> 
            This example shows how to use the HTML preview handler for files with the extensions CSM:
            <code>
            private void shellFilePreview1_LoadPreview(object sender, LoadPreviewEventArgs e)
            {
              if (string.IsNullOrEmpty(e.Path))
                return;
              if (".cms".Equals(Path.GetExtension(e.Path), StringComparison.OrdinalIgnoreCase))
                e.PreviewHandlerGuid = new Guid("F8B8412B-DEA3-4130-B36C-5E8BE73106AC");
            }
            </code>
            </example>
            <example>
            To provide a custom Previewhandler see example at <see cref="P:Jam.Shell.LoadPreviewEventArgs.CustomPreviewHandler"/>
            
            <code>
            </code>
            </example>
        </member>
        <member name="E:Jam.Shell.ShellFilePreview.AfterPreviewLoaded">
            <summary>Event that occurs after the preview has been loaded.</summary>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.OnLoadPreview(Jam.Shell.LoadPreviewEventArgs)">
            <summary>
            Calls the <see cref="E:Jam.Shell.ShellFilePreview.LoadPreview"/> event.
            </summary>
            <param name="eventArgs">A <see cref="T:Jam.Shell.LoadPreviewEventArgs"/> instance containing information about the file that is about to be previewed.</param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.OnAfterPreviewLoaded(Jam.Shell.AfterLoadedPreviewEventArgs)">
            <summary>Calls the <see cref="E:Jam.Shell.ShellFilePreview.AfterPreviewLoaded"/> event.</summary>
            <param name="eventArgs">A <see cref="T:Jam.Shell.AfterLoadedPreviewEventArgs"/> instance containing information about the file that has been loaded.</param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.PreviewHandlerGuidForType(System.String)">
            <summary>
            Searches the registry for a registered PreviewHandler for the fileextension that is passed.
            </summary>
            <param name="ext">The file extension (must be lowercase, including the beginning "."</param>
            <returns>The Guid of the ComObject that can handle files ending in the extension that is passed</returns>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.Open(Jam.Shell.ItemIdList)">
            <summary>
            Opens the path that is passed with the matching preview handler.
            </summary>
            <param name="fileItemIdList">ItemIdList of the file to be previewed</param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.Clear">
            <summary>
            Clears the preview
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.Refresh(Jam.Shell.RefreshLevel)">
            <summary>
            Refreshes the control.
            </summary>
            <param name="pLevel">Ignored. A <see cref="M:Jam.Shell.ShellFilePreview.FullRefresh"/> is always triggered.</param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>
            Refreshes the control.
            </summary>
            <param name="pLevel">Ignored. A <see cref="M:Jam.Shell.ShellFilePreview.FullRefresh"/> is always triggered.</param>
            <param name="pItemIdList">Ignored. The currently displayed File is reloaded.</param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.FullRefresh">
            <summary>
            Forces the reload of the current file.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.SmartRefresh">
            <summary>
            Forces the reload of the current file. There is no difference compared to <see cref="M:Jam.Shell.ShellFilePreview.FullRefresh"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Called by <see cref="T:Jam.Shell.ShellControlConnector"/> when the current folder has changed.
            </summary>
            <param name="p_ItemIdList">Not supported.</param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            Called by <see cref="T:Jam.Shell.ShellControlConnector"/> when the selected file has changed.
            </summary>
            <param name="p_ItemIdList"><see cref="P:Jam.Shell.ShellFilePreview.ItemIdList"/> of the newly selected file or null.</param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.GoUp">
            <summary>
            Not supported.
            </summary>
            <returns>false: not supported.</returns>
        </member>
        <member name="P:Jam.Shell.ShellFilePreview.ShellControlConnector">
            <summary>
            ShellControlConnector for this class. Set this property to the same <see cref="T:Jam.Shell.ShellControlConnector"/> instance of a <see cref="T:Jam.Shell.ShellListView"/>, <see cref="T:Jam.Shell.ShellTreeView"/> or <see cref="T:Jam.Shell.ShellSystemList"/>
            to keep the <see cref="T:Jam.Shell.ShellFilePreview"/> in sync with these components. It will then always preview the selected file.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellFilePreview.Initialized">
            <summary>
            Occurs when initialization of the component is completed.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellFilePreview.IsInitialized">
            <summary>
            Indicates whether the component is initialized.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellFilePreview.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.GetSynchronizationContext">
            <summary>
            PreviewHost must provide its SynchronizationContext to be used by async events.
            </summary>
            <returns>
            The SynchronizationContext valid for the thread the HostControl was created in, e.g.
            SynchronizationContext.Current or DispatcherSynchronizationContext.Current.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.GetDisplayRect">
            <summary>Gets display rectangle.</summary>
            <returns>The display rectangle.</returns>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.GetWindowHandle">
            <summary>Gets window handle.</summary>
            <returns>The window handle.</returns>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.OnCommonPreviewHandlerLoaded(Jam.Shell.IShellPreviewHandler,Jam.Shell.ItemIdList,System.Boolean,System.Exception)">
            <summary>
            Controls implementing this interface must implement this eventhandler, which is called after
            the preview has been loaded.
            </summary>
            <param name="sender">The sender.</param>
            <param name="pItemIdList">The ItemIdList that has been loaded.</param>
            <param name="succeeded">true if loading was a success, false if it failed.</param>
            <param name="loadException">The exception that happened during loading or null if there
            wasn't any.</param>
        </member>
        <member name="M:Jam.Shell.ShellFilePreview.PrintRegisteredPreviewHandlers">
            <summary>
            For debugging purposes: prints the registered PreviewHandlers to Debug Log
            </summary>
        </member>
        <member name="T:Jam.Shell.FileEnumerator">
            <summary>
            A class that allows to enumerate all selected files of a <see cref="T:Jam.Shell.PathSelectionList"/> recursively.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileEnumerator.#ctor(Jam.Shell.PathCollection)">
            <summary>
            Initializes a new instance of the <b><see cref="T:Jam.Shell.FileEnumerator"/></b> class.
            </summary>
            <param name="aPathCollection">A PathSelectionList or a PathCollection can be passed here.</param>
        </member>
        <member name="M:Jam.Shell.FileEnumerator.GetEnumerator">
            <summary>
            Enumerate all files of the paths in the PathCollection.
            </summary>
            <returns>Returns the path of the selected files.</returns>
        </member>
        <member name="M:Jam.Shell.FileEnumerator.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an Enumerator to use the PathSelectionList in a foreach statement.
            </summary>
            <returns>Returns all files for the selected paths.</returns>
        </member>
        <member name="T:Jam.Shell.CheckState">
            <summary>
            Available system image list sizes
            </summary>
        </member>
        <member name="F:Jam.Shell.CheckState.Disabled">
            <summary>
            Checkboxes are disabled.
            </summary>
        </member>
        <member name="F:Jam.Shell.CheckState.None">
            <summary>
            Checking this item is not possible.
            </summary>
        </member>
        <member name="F:Jam.Shell.CheckState.Checked">
            <summary>
            This item is full checked.
            </summary>
        </member>
        <member name="F:Jam.Shell.CheckState.UnChecked">
            <summary>
            This item is not checked.
            </summary>
        </member>
        <member name="F:Jam.Shell.CheckState.Grayed">
            <summary>
            This item is partly checked.
            </summary>
        </member>
        <member name="T:Jam.Shell.BaseSelectionList">
            <summary>
            Base class for the PathSelectionList.
            </summary>
        </member>
        <member name="F:Jam.Shell.BaseSelectionList.m_Size">
            <summary>
            the current size.
            </summary>
        </member>
        <member name="F:Jam.Shell.BaseSelectionList.m_FileCount">
            <summary>
            the current file count.
            </summary>
        </member>
        <member name="F:Jam.Shell.BaseSelectionList.m_FolderCount">
            <summary>
            the current folder count.
            </summary>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.BaseSelectionList"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Jam.Shell.BaseSelectionList"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.Dispose(System.Boolean)">
            <summary>
            Releases managed ressources.
            </summary>
            <param name="disposing">true if called </param>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.AbortSizeCalculation">
            <summary>
            Aborts the calculation of the selected files size.
            </summary>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.CalculateAndUpdateSize(System.String,System.Boolean)">
            <summary>
            Calculates the count and size for the given folder and updates the properties.
            </summary>
            <param name="p_Path">Path for that the size should be determined.</param>
            <param name="p_Subtract">true, if count and size should be subtracted from the current data.</param>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.GetListItem(System.Int32)">
            <summary>
            Returns an item of the list at the passed index.
            </summary>
            <param name="pIndex">Contains the index of the entry which should be returned.</param>
            <returns>The string at the passed index.</returns>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.PathSelected(System.String,System.Boolean@)">
            <summary>
            Abstract definiton of the method PathSelected in the base class.
            </summary>
            <param name="pPath">Passed Path, which should be checked.</param>
            <param name="pIsSubItemOf">Out parameter, which indicates if the path is part of a selected folder.</param>
            <returns>Returns the CheckState of the path.</returns>        
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.CompletePathSelected(System.String)">
            <summary>
            Ensures that the smallest complete selected path is added.
            </summary>
            <param name="p_Path">Path of a file or folder, which was added to the selection list.</param>
            <returns>Returns the smallest complete selected path, which is selected.</returns>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.AddPathToSelection(System.String)">
            <summary>
            Adds a path to the list of selected paths.
            </summary>
            <param name="p_Path">Path, which should be added.</param>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.RemovePathFromSelection(System.String)">
            <summary>
            Use this procedure to remove an item from the selection list.
            </summary>
            <param name="p_Path">Full qualified path, which should be rmoved from the selection</param>
        </member>
        <member name="M:Jam.Shell.BaseSelectionList.Clear">
            <summary>
            Removes all elements from the list
            </summary>
        </member>
        <member name="P:Jam.Shell.BaseSelectionList.Size">
            <summary>
            Get the total size of the selected items.
            </summary>
            <remarks>This property will only return valid results if <see cref="P:Jam.Shell.BaseSelectionList.CalculateSelectedFiles"/> is set to <c>true</c>.</remarks>
            <seealso cref="P:Jam.Shell.BaseSelectionList.CalculateSelectedFiles"/>
        </member>
        <member name="P:Jam.Shell.BaseSelectionList.FileCount">
            <summary>
            Get the total number of selected files.
            </summary>
            <remarks>This property will only return valid results if <see cref="P:Jam.Shell.BaseSelectionList.CalculateSelectedFiles"/> is set to <c>true</c>.</remarks>
            <seealso cref="P:Jam.Shell.BaseSelectionList.CalculateSelectedFiles"/>
        </member>
        <member name="P:Jam.Shell.BaseSelectionList.FolderCount">
            <summary>
            Get the total number of selected folders.
            </summary>
            <remarks>This property will only return valid results if <see cref="P:Jam.Shell.BaseSelectionList.CalculateSelectedFiles"/> is set to <c>true</c>.</remarks>
            <seealso cref="P:Jam.Shell.BaseSelectionList.CalculateSelectedFiles"/>
        </member>
        <member name="P:Jam.Shell.BaseSelectionList.CalculateSelectedFiles">
            <summary>
            Use CalculateSelectedFiles to control whether the size and count of the selected files should be calculated or not.
            </summary>
            <seealso cref="P:Jam.Shell.BaseSelectionList.Size"/>
            <seealso cref="P:Jam.Shell.BaseSelectionList.FileCount"/>
            <seealso cref="P:Jam.Shell.BaseSelectionList.FolderCount"/>
        </member>
        <member name="T:Jam.Shell.PathSelectionList">
            <summary>
            This class is used as a property  of the JamShellLink component for managing the list of selected paths that the user selects with shell controls that have the CheckBoxes property set to True. You can modify the list using the AddPathToSelection and RemovePathFromSelection method. You can save or load the list using the SaveToIniFile and LoadFromIniFile methods.
            </summary>
        </member>
        <member name="F:Jam.Shell.PathSelectionList.m_CurrentCalculations">
            <summary>
            Counts the current calculations.
            </summary>
        </member>
        <member name="F:Jam.Shell.PathSelectionList.m_CurrentlyUpdating">
            <summary>
            Indicates whether the list is being updated at the moment.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.FormatSelectionPath(System.String@)">
            <summary>
            Unifies the given path and checks if it exists.
            </summary>
            <param name="p_Path">The path that should be unified an checked.</param>
            <returns>true, if the path exists, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.IsItemFullSelected(System.String)">
            <summary>
            Determines if an item is in the selection list directly, or if one of its parent folders is in the selection list.
            </summary>
            <param name="p_Path">path, which should be checked about the CheckState</param>
            <returns>True if an item is in the selection list directly, or if one of its parent folders is in the selection list; false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.GetCheckState(System.String,System.Boolean@)">
            <summary>
            For internal use: Check if item is in the selection.
            </summary>
            <param name="p_Path">Contains the path which should be checked.</param>
            <param name="bIsSubItemOf">Indicates, if the path is a subitem of a selected folder.</param>
            <returns>Returns the CheckState of the given path.</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.RemoveSubFolders(System.String)">
            <summary>
            Remove subfolders of the path from the current selection.
            </summary>
            <param name="p_Path">Contains the parent path from which the subfolders should be removed.</param>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.CalculateAndUpdateSize(System.String,System.Boolean)">
            <summary>
            Calculates the count and size for the given folder and updates the properties.
            </summary>
            <param name="p_Path">Path for that the size should be determined.</param>
            <param name="p_Subtract">true, if count and size should be subtracted from the current data.</param>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.GetFolderSizeCallback(System.String,System.Int64,System.Int32,System.Int32,System.Object)">
            <summary>
            This callback method is called once the asynchronous calculation of a folder size is finished.
            </summary>
            <param name="p_Path">The path for that the folder size.</param>
            <param name="p_Size">The size of the folder in Bytes.</param>
            <param name="p_FileCount">The number of files in this path.</param>
            <param name="p_FolderCount">The number of folders in this path.</param>
            <param name="p_State">A user supplied state object, in this case a bool value that indicates if the folder size should be subtracted from the existing values, instead of adding them.</param>
            <see cref="M:Jam.Shell.WinFormsPathCollection.GetFolderSize(System.String,Jam.Shell.WinFormsPathCollection.GetFolderSizeCallbackDelegate,System.Object)"/>
            <see cref="M:Jam.Shell.PathSelectionList.CalculateAndUpdateSize(System.String,System.Boolean)"/>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.OnCompletedSizeCalculation">
            <summary>
            Raises the <see cref="E:Jam.Shell.PathSelectionList.CompletedSizeCalculation"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.AddAllExclude(System.String,System.String)">
            <summary>
            Adds all folders of a given path except the folder passed in p_ExcludeFolder.
            </summary>
            <param name="p_Path">Contains the parent folder.</param>
            <param name="p_ExcludeFolder">Contains the path which should be excluded from selection.</param>
            <returns>p_Path without the excluded folder</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.CompleteChildPathSelected(System.String)">
            <summary>
            Checks if a folder path is completly selected.
            </summary>
            <param name="sFQPath">The folder path, which should be checked.</param>
            <returns>Returns true, if the folder path is completly selected.</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.PathSelected(System.String,System.Boolean@)">
            <summary>
            For internal use: Check if item is in the selection.
            </summary>
            <param name="pPath">Passed Path, which should be checked.</param>
            <param name="pIsSubItemOf">Out parameter, which indicates if the path is part of a selected folder.</param>
            <returns>Returns the CheckState of the path.</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.IsPathSelected(System.String)">
            <summary>
            This function returns for the given path, if it is fully, partially or not part of the list of selected files.
            </summary>
            <param name="aPath">the path</param>
            <returns>Returns the selection state of the given path.</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.IsLinkedPath(System.String)">
            <summary>
            Check if the passed path is a link.
            </summary>
            <param name="sFQPath">Full qualified path, which should be checked.</param>
            <returns>Returns true when the passed path is a link and false if not.</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.PathWasRenamed(System.String,System.String)">
            <summary>
            Searches the path in the selected files and if found, 
            replaces it by the new name within the collection.
            </summary>
            <param name="pOldPath">The full file system path of the path before it was renamed.</param>
            <param name="pNewPath">The full file path of the new name.</param>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.BeginUpdate">
            <summary>
            Prevent that the SelectionListChanged event is fired until EndUpdate is called. Every call of BeginUpdate() increments an UpdateCounter variable.
            </summary>
            <seealso cref="M:Jam.Shell.PathSelectionList.EndUpdate"/>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.BoolToSelectionState(System.Boolean)">
            <summary>
            Returns a Checkstate for a given Boolean.
            </summary>
            <param name="p_Value">Boolean value.</param>
            <returns>Checkstate.Checked if p_value is true. If not, Checkstate.Unchecked is returned.</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.EndUpdate">
            <summary>
            Every call of EndUpdate() decrements the UpdateCounter variable. When the UpdateCounter is 0, then the SelectionListChanged event is fired.
            </summary>
            <seealso cref="M:Jam.Shell.PathSelectionList.BeginUpdate"/>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.AddPathToSelection(System.String)">
            <summary>
            Adds a path to the list of selected paths.
            </summary>
            <param name="p_Path">Path, which should be added.</param>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.DeleteEntry(System.Int32)">
            <summary>
            Overloaded method DeleteEntry, which deletes an entry at the passed position with default recalculating size and filecount.
            </summary>
            <param name="pIndex">Index, which list entry should be deleted.</param>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.DeleteEntry(System.Int32,System.Boolean)">
            <summary>
            Deletes an entry at the passed position with recalculating size and filecount, when CalculateSizeAndCount is true.
            </summary>
            <param name="pIndex">Index, which list entry should be deleted.</param>
            <param name="pCalculateSizeAndCount">Can be used to prevent the recalculating size and filecount</param>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.RemovePathFromSelection(System.String)">
            <summary>
            Use this procedure to remove an item from the selection list.
            </summary>
            <param name="pPath">Full qualified path, which should be rmoved from the selection</param>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.CompletePathSelected(System.String)">
            <summary>
            Ensures that the smallest complete selected path is added.
            </summary>
            <param name="p_Path">Path of a file or folder, which was added to the selection list.</param>
            <returns>Returns the smallest complete selected path, which is selected.</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.CompletePathSelectedExclude(System.String,System.String)">
            <summary>
            Checks the parent folder of a folder is full selected.
            </summary>
            <param name="pFolder">The parent folder of the currently checked folder.</param>
            <param name="pExFolder">The currently checked folder.</param>
            <returns>Returns the smallest complete selected path.</returns>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.ResetCounters">
            <summary>
             Resets File- and FolderCount
            </summary>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.OnSelectionChanged">
            <summary>
            Fires the SelectionChanged event.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathSelectionList.IsLocalPathSelected">
            <summary>
            Returns true, if files on local drives are selected.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathSelectionList.IsUNCPathSelected">
            <summary>
            Returns true, if files on UNC paths are selected.
            </summary>
        </member>
        <member name="E:Jam.Shell.PathSelectionList.CompletedSizeCalculation">
            <summary>
            This event is triggered whenever the calculation of the folder size is finished for a folder.
            </summary>
            <seealso cref="P:Jam.Shell.BaseSelectionList.CalculateSelectedFiles"/>
            <seealso cref="P:Jam.Shell.BaseSelectionList.FileCount"/>
            <seealso cref="P:Jam.Shell.BaseSelectionList.Size"/>
        </member>
        <member name="E:Jam.Shell.PathSelectionList.SelectionChanged">
            <summary>
            This event is triggered whenever the selection list is changed.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathSelectionList.GetFileEnumerator">
            <summary>
            Returns an Enumerator to use the PathSelectionList in a foreach statement.
            </summary>
            <remarks>
            The Enumerator will only return files in the list, not directories or drives.
            If the <see cref="T:Jam.Shell.PathSelectionList"/> contains a Drive or a large directory using GetFileEnumerator might be slow, because all Files contained in the Directories are iterated.
            As compared to GetFileEnumerator iterating the <see cref="T:Jam.Shell.PathSelectionList"/> directly will return a unified list consisting of folders and files. 
            <para>&#160;</para>
            If folder "c:\Windows" is added to a <see cref="T:Jam.Shell.PathSelectionList"/> GetFileEnumerator will return all files in Windows and its subdirectories. 
            Iterating it directly will return "c:\Windows\*". 
            </remarks>
            <example>
            <code>
            IEnumerator&lt;string&gt; fileEnum =
                shellControlConnector1.SelectionList.GetFileEnumerator();
            while (fileEnum.MoveNext())
            {
                //do something with fileEnum.Current;
            }
            or
            foreach (string file in selectionList.getFileEnumerator() {
                //do something with file
            }
            </code>
            </example>
            <returns>Returns all files for the selected paths.</returns>
        </member>
        <member name="T:Jam.Shell.ShellChangeNotifier">
            <summary>
            Use this component to get information about changes in the file system (copy, move or delete operations) and other changes relevant for shell operations. The Directory property decides which part of the shell namespace will be watched for changes.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellChangeNotifier"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.Dispose(System.Boolean)">
            <summary>
            Remove reference to the ChangeNotifierCallBackForm
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.</param>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.Start">
            <summary>
            Starts monitoring the paths in the Directories property
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.Stop">
            <summary>
            Stops monitoring the paths in the Directories property
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.Clear">
            <summary>
            Removes all directories from the <see cref="P:Jam.Shell.ShellChangeNotifier.Directories"/> property and so watches the entire file system again.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.Jam#Shell#IShellChangeNotifier#OnChange(Jam.Shell.NotificationEvents,System.String,System.String)">
            <summary>
            Fires the OnChange event, when something happened in the monitored directories.
            </summary>
            <param name="pEvent">Provides data for the OnChange event.</param>
            <param name="pPath1">Contains information like a path, where something happened, or the name of a file before it has been renamed.</param>
            <param name="pPath2">Contains information like the name of a file after it has been renamed.</param>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.Jam#Shell#IShellChangeNotifier#OnChangePIDL(Jam.Shell.NotificationEvents,Jam.Shell.ItemIdList,Jam.Shell.ItemIdList)">
            <summary>
            Fires the OnChange event, when something happened in the monitored directories.
            </summary>
            <param name="pEvent">Provides data for the OnChange event.</param>
            <param name="pItemIdList1">Contains information like the ItemIdList of a path, where something happened, or the name of a file before it has been renamed.</param>
            <param name="pItemIdList2">Contains information like the name of a file after it has been renamed.</param>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.Restart">
            <summary>
            Restarts the change notifier if it is already started
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.WatchAllDrives">
            <summary>Adds all drives to the watchlist.</summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.SendChangeNotify(Jam.Shell.NotificationEvents,System.String)">
            <summary>
            Sends a shell change notification to the system that informs other processes about a achange.
            </summary>
            <param name="p_Event">The event shat should be send.</param>
            <param name="p_Path">The path that is affected by the change.</param>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.SendChangeNotify(Jam.Shell.NotificationEvents,System.String,System.String)">
            <summary>
            Sends a shell change notification to the system that informs other processes about a achange.
            </summary>
            <param name="p_Event">The event shat should be send.</param>
            <param name="p_Path1">The first path that is affected by the change.</param>
            <param name="p_Path2">The second path that is affected by the change.</param>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.BeginInit">
            <summary>Signals the object that initialization is starting.</summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.EndInit">
            <summary>Signals the object that initialization is complete.</summary>
        </member>
        <member name="P:Jam.Shell.ShellChangeNotifier.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellChangeNotifier.PIDL">
            <summary>
            Allows th set a Shell ItemIdList that should be monitored. Intended for internal use only.
            If this property is set, the default is "My Computer" as an empty string, is then not monitored.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellChangeNotifier.Enabled">
            <summary>
            Set to true to enable listening to change notifications.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.BeginUpdate">
            <summary>Begins an update of a ShellChangeNotifier configuration. </summary>
            <remarks>Normally any change (e.g. adding a directory) will trigger the re-registration of directories for notification events in the system. 
                     If more changes should happen at once (e.g. adding a list of directories), call BeginUpdate before, and EndUpdate after all operations are finished. 
            </remarks>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.EndUpdate">
            <summary>Ends an update.</summary>
            <remarks>Normally any change (e.g. adding a directory) will trigger the re-registration of directories for notification events in the system. 
                     If more changes should happen at once (e.g. adding a list of directories), call BeginUpdate before, and EndUpdate after all operations are finished.
            </remarks>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.IsUpdating">
            <summary>Gets a value indicating if <see cref="M:Jam.Shell.ShellChangeNotifier.BeginUpdate"/> has been called without a matching <see cref="M:Jam.Shell.ShellChangeNotifier.EndUpdate"/>.</summary>
            <returns>True if updating, false if not.</returns>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.Pause">
            <summary>Pauses the ShellChangeNotifier instance. Incoming notifications will be skipped.</summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.Resume">
            <summary>Resumes this ShellChangeNotifer instance.</summary>
        </member>
        <member name="M:Jam.Shell.ShellChangeNotifier.IsPaused">
            <summary>Query if this ShellChangeNotifier is currently paused.</summary>
            <returns>True if paused, false if not.</returns>
        </member>
        <member name="P:Jam.Shell.ShellChangeNotifier.Recursive">
            <summary>
            Set to true, if change notifications for subfolders are desired as well.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellChangeNotifier.EventFilter">
            <summary>
            Allows to define which shell change events should be reported.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellChangeNotifier.Directories">
            <summary>
            The directories to receive change notifications for. Leave empty to receive change notifications for the whole file system.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellChangeNotifier.AllDrivesWatched">
            <summary>
            Returns true if the instance was started with no explicit directories or pidl to watch. In this case all drives are watched recursively for changes.
            </summary>
            <value><c>true</c> if all drives are watched for changes recursively otherwise, <c>false</c>.</value>
        </member>
        <member name="E:Jam.Shell.ShellChangeNotifier.ChangePIDL">
            <summary>
            This event is fired when a change event for the given ItemIdList list of the given paths in the <see cref="P:Jam.Shell.ShellChangeNotifier.Directories"/> property occured.
            </summary>
            <seealso cref="E:Jam.Shell.ShellChangeNotifier.Change"/>
        </member>
        <member name="E:Jam.Shell.ShellChangeNotifier.Change">
            <summary>
            This event is fired when a change event was fired from the system for one of the monitored paths in the <see cref="P:Jam.Shell.ShellChangeNotifier.Directories"/> property.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellComboItem">
            <summary>
            This class keeps information about the items displayed in the ShellComboBox.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboItem.m_Indent">
            <summary>
            The indent, ie. the hierarchy level of an element (proportional to its depth in the directory tree, 0 = root).
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboItem.m_Persistent">
            <summary>
            Persistent items have this flags set. Those Items are visible all the time 
            and need not to be removed if e.g. a folder change event occurs
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboItem.Indent">
            <summary>
            The indent of the item when displayed according to the depth in the folder hierarchy
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboItem.IsPersistent">
            <summary>
            Persistent items have this flags set. Those Items are visible all the time 
            and need not to be removed if e.g. a folder change event occurs
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellComboItem.#ctor(Jam.Shell.ItemIdList,System.String,System.Int32)">
            <summary>
            Sets up a non persistent ShellComboItem.
            You need to construct a ShellComboItem with <see cref="M:Jam.Shell.ShellComboItem.#ctor(Jam.Shell.ItemIdList,System.String,System.Int32,System.Boolean)"/> 
            to explicitly create persistent items
            </summary>
            <param name="p_PIDL">Its ItemIdList</param>
            <param name="p_Caption">the caption displayed in the dropdown-menu</param>
            <param name="p_Indent">The Indentation of the item if displayed in the tree structure</param>
        </member>
        <member name="M:Jam.Shell.ShellComboItem.#ctor(Jam.Shell.ItemIdList,System.String,System.Int32,System.Boolean)">
            <summary>
            Sets up a ShellComboItem.
            </summary>
            <param name="p_PIDL">Its ItemIdList</param>
            <param name="p_Caption">the caption displayed in the dropdown-menu</param>
            <param name="p_Indent">The Indentation of the item if displayed in the tree structure</param>
            <param name="p_Persistent">true if the the Item is persistent</param>
        </member>
        <member name="M:Jam.Shell.ShellComboItem.DrawItem(System.Windows.Forms.Control,System.Windows.Forms.DrawItemEventArgs,System.Boolean)">
            <summary>
            Draws the item within the combobox
            </summary>
            <param name="pDisplayControl">the control that is displaying the item</param>
            <param name="pEvtArgs">The EventArgs of the DrawItem Event</param>
            <param name="pShowFullPath">if true the fullpath of the item is shown if its in the ComboBoxEditField</param>
        </member>
        <member name="M:Jam.Shell.ShellComboItem.CompareTo(Jam.Shell.ShellComboItem)">
            <summary>
            The method compares to ShellItems whith each other. 
            <seealso cref="M:Jam.Shell.ShellItem.CompareTo(Jam.Shell.ShellItem)"/>
            <seealso cref="M:Jam.Shell.ItemIdList.CompareTo(Jam.Shell.ItemIdList)"/>
            </summary>
            <param name="other">The other item to compare with.</param>
            <returns>See the <see cref="M:Jam.Shell.ShellItem.CompareTo(Jam.Shell.ShellItem)"/> method.</returns>
        </member>
        <member name="T:Jam.Shell.CustomEditComboBox">
            <summary>
            This class provides an editable TextBox which may be extended, e.g. by the 
            ShellApi, that is laid over the display field of the ComboBox control.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomEditComboBox.m_ShellAutoCompletionMode">
            <summary>
            shell autocompletion mode.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomEditComboBox.m_UseSystemStyles">
            <summary>
            If false the component won't use the vista styles.
            <see cref="P:Jam.Shell.CustomEditComboBox.UseSystemStyles"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomEditComboBox.m_UseSystemFont">
            <summary>
            If true the component will use the default system font.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomEditComboBox.m_OverlayTextBox">
            <summary>
            The textbox attribute keeps a reference to a textbox in case the user wants to 
            enter a string to search for folders, it is placed above the ShellCombobox.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomEditComboBox.m_Initializing">
            <summary>
            flag indicating whether the component is initializing
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomEditComboBox.ShellAutoCompletionMode">
            <summary>
            This property controls the availability of the shells autocompletion mode,
            if set to FileSystem, Url or both, the ComboBox provides a TextField the 
            user can type to. If disabled the default combobox behavior without editing
            functionality is used. Both, FileSystem and Url can be specified at once and 
            are enabled by default.
            ShellAutoComplete.Url needs to be used to also provide autocompletion for UNC-Paths.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.SetAutoCompletionMode">
            <summary>
            Sets the auto completion mode.
            </summary>
            <returns>True if successful.</returns>
        </member>
        <member name="P:Jam.Shell.CustomEditComboBox.OverlayTextBox">
            <summary>
            Provides access to the TextBox field of the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomEditComboBox.UseSystemStyles">
            <summary>
            Use this property to turn on or off the usage of the system specific design, i.e. enable Vista visual styles of the explorer components.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomEditComboBox.UseSystemFont">
            <summary>
            Set this property to true if you want the component to utilize the default system font.
            It is also set to true if the <see cref="P:Jam.Shell.CustomEditComboBox.UseSystemStyles"/> property is set.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.SetFont(System.Drawing.Font)">
            <summary>
            Sets the font without adjusting other properties.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.#ctor">
            <summary>
            Default Constructor, registers to the ComboBox Initialized event.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.OnCreateControl">
            <summary>
            Recalculates the ItemHeight.
            Raises the <see cref="M:System.Windows.Forms.Control.CreateControl" /> method.
            
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.OnOverlayResize(System.Object,System.EventArgs)">
            <summary>This method is called from the OverlayTextBox.Resize Event. It calls the
            AdjusTextBoxSize method.</summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.OnSizeChanged(System.EventArgs)">
            <summary>
            This event is triggered after the size of the combobox changed. Fixes bug #4397.
            </summary>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.ActivateSelectedItem(System.String)">
            <summary>
            Abstract method that is implemented in <see cref="M:Jam.Shell.ShellComboBox.ActivateSelectedItem(System.String)"/>
            </summary>
            <param name="path">The item path.</param>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.OnHandleCreated(System.EventArgs)">
            <summary>
            This event is triggered after the handle of the control was created.
            </summary>
            <param name="e">the event arguments when this Event occurs</param>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.AdjustTextBoxSize">
            <summary>
            Adjusts the size of the edit field so that it is inside the combo box.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.OverlayTextBox_KeyUp(System.Object,System.Windows.Forms.KeyEventArgs)">
            <summary>
            This method catches the KeyUp event of the OverlayTextBox and
            currently handles the Enter-Key.
            </summary>
            <param name="sender">Sender of the event.</param>
            <param name="e">The arguments of the key event.</param>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.EnableSystemStyles">
            <summary>
            Sets system specific behaviour,
            i.e. FullRowSelect in Vista and upwards.
            </summary>
        </member>
        <member name="E:Jam.Shell.CustomEditComboBox.Initialized">
            <summary>
            Occurs when initialization of the component is completed.
            </summary>
            <seealso cref="P:Jam.Shell.CustomEditComboBox.IsInitialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="P:Jam.Shell.CustomEditComboBox.IsInitialized">
            <summary>
            Gets a value indicating whether the component is initialized.
            </summary>
            <seealso cref="E:Jam.Shell.CustomEditComboBox.Initialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomEditComboBox.EndInit">
            <summary>
            Signals the object that initialization is complete.
            
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomEditComboBox.Font">
            <summary>
            Gets or sets the font of the text displayed by the control and adapts <see cref="P:Jam.Shell.CustomEditComboBox.UseSystemFont"/> is set to false.
            </summary>
            <returns>The <see cref="T:System.Drawing.Font" /> to apply to the text displayed by the control.</returns>
            <PermissionSet>
            <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
            <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
            <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence" />
            <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true" />
            </PermissionSet>
        </member>
        <member name="T:Jam.Shell.CustomFolderComboBox">
            <summary>
            The CustomFolderComboBox is a simple component that allows to display folders and drives 
            in a combo box with its associated icons. It is kept with basic functionality to allow for 
            further extension by the programmer.
            See <see cref="T:Jam.Shell.ShellComboBox"/> for an advanced component which derives from the CustomFolderComboBox.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFolderComboBox.m_ShowFullPath">
            <summary>
            if set to true the fullpath is shown in the ComboBox
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFolderComboBox.ShowFullPath">
            <summary>
            If set to true, the full path of the selected item is shown in the combobox
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFolderComboBox.#ctor">
            <summary>
            Default constructor of the CustomFolderComboBox base-class
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFolderComboBox.CustomFolderComboDrawItemHandler(System.Object,System.Windows.Forms.DrawItemEventArgs)">
            <summary>
            This is the event handler registered to <see cref="M:Jam.Shell.ShellComboItem.DrawItem(System.Windows.Forms.Control,System.Windows.Forms.DrawItemEventArgs,System.Boolean)"/> it displays the items
            as files or folders
            </summary>
            <param name="sender">sender of the event</param>
            <param name="p_DrawItemEvent">event data</param>
        </member>
        <member name="M:Jam.Shell.CustomFolderComboBox.UpdateOverlayTextBox">
            <summary>
            Updates the Text of the OverlayTextBox by either setting the items caption
            or the items path depending on the ShowFullPath property
            </summary>
        </member>
        <member name="E:Jam.Shell.CustomFolderComboBox.ShowOptionChangedEvent">
            <summary>
            Register to this event to get informed about an optionchange of the Show{...} properties.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFolderComboBox.OnShowOptionChanged(System.Object,System.Boolean)">
            <summary>
            This method needs to be called if a a ShowOption changed.
            </summary>
            <param name="p_Sender">Sender of the event.</param>
            <param name="p_NeedFullRefresh">pass true if the component needs a full refresh, false if a call to <see cref="M:System.Windows.Forms.Control.Invalidate"/> is sufficient.</param>
        </member>
        <member name="T:Jam.Shell.ShowOptionEventArgs">
            <summary>
            OptionEventArgs is a simple possibility to indicate whether a FullRefresh is
            needed after Options have changed.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShowOptionEventArgs.NeedFullRefresh">
            <summary>
            Returns true if a component fullrefresh is needed.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShowOptionEventArgs.#ctor">
            <summary>
            Construct the OptionEvent, default to FullRefresh
            </summary>
        </member>
        <member name="M:Jam.Shell.ShowOptionEventArgs.#ctor(System.Boolean)">
            <summary>
            Construct the OptionEvent
            </summary>
            <param name="p_NeedFullRefresh">If set to true, a full refresh will performed, if false the component is invalidated.</param>
        </member>
        <member name="T:Jam.Shell.ShellComboBox">
            <summary>
            The ShellComboBox is a simple component that allows to display folders and drives 
            in a combo box with its associated icons. It is perfectly analogous to the windows explorer 
            file selection dropdown list and provides an editable field as well.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_DropDownWidthAutoAdjust">
            <summary>
            Whether the width of the dropdown box should be adjusted. <see cref="P:Jam.Shell.ShellComboBox.DropDownWidthAutoAdjust"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_CurrentFolderIdList">
            <summary>
            The currently selected ItemIdList, null if nothing is selected.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_ShellBrowser">
            <summary>
            A <see cref="P:Jam.Shell.ShellComboBox.ShellBrowser"/> instance that is used to navigate through the files.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_ShellControlConnector">
            <summary>
            this variable holds a reference to an attached ShellControlConnector which is
            the mediator between different ShellBrowser components and keeps the views in sync
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_ShowDrives">
            <summary>
            whether to include "Drives" in the ComboBox.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_ShowDesktopContent">
            <summary>
            whether to include the content of the desktop.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_ShowMyDocuments">
            <summary>
            whether to include "My Documents" folder in the ComboBox.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_ShowNethood">
            <summary><see cref="P:Jam.Shell.ShellComboBox.ShowNethood"/></summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_ShowNetwork">
            <summary><see cref="P:Jam.Shell.ShellComboBox.ShowNetwork"/></summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_ShowRecycleBin">
            <summary><see cref="P:Jam.Shell.ShellComboBox.ShowRecycleBin"/></summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_FileSystemOnly">
            <summary>
            if set to true virtual objects not havin a filesystem path will not be shown.
            <seealso pref="FileSystemOnly"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_NoFillOnStartup">
            <summary>
            if set to true the componet won't fill itself by scanning the filesystem on startup.
            <seealso pref="NoFullOnStartup"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.DropDownWidthAutoAdjust">
            <summary>
            Gets or sets a value indicating whether the combobox should adjust the width of the dropdown menu.
            The default value is true (In contrast to the default <see cref="T:System.Windows.Forms.ComboBox"/>
            which does not support this)
            </summary>
            <value>Whether this is a dropdown with auto adjustment of the width.</value>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.Items">
            <summary>
            Gets an object representing the content of the <see cref="T:Jam.Shell.CustomFolderComboBox"/>
            </summary>
            This Property is here to prevent the designer from serializing.
        </member>
        <member name="P:Jam.Shell.ShellComboBox.ShowDrives">
            <summary>
            If set to true, the ShellComboBox includes the Drives installed in the System.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.ShowDesktopContent">
            <summary>
            If set to true, the ShellComboBox includes the first level of content of the Desktop folder.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.ShowMyDocuments">
            <summary>
            If set to true, the ShellComboBox includes the files in the first level of the "My Documents" folder.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.ShowNethood">
            <summary>
            If set to true, the Nethood is shown in the ShellCombo.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.ShowNetwork">
            <summary>
            If set to true, the Network is shown in the ShellCombo.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.ShowRecycleBin">
            <summary>
            If set to true, the ShellCombo will show the Recycle Bin icon.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.FileSystemOnly">
            <summary>
            If this option is set to true, the ShellCombo will only show items of the filesystem and exclude virtual file items.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.NoFillOnStartup">
            <summary>
            If set to true the ShellCombo will not scan the filesystem and fill on startup, this is useful if the path to show is known only on runtime.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.ShellBrowser">
            <summary>
            A <see cref="P:Jam.Shell.ShellComboBox.ShellBrowser"/> instance that is used to navigate through the files.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.DrawMode">
            <summary>
            DrawMode must always be OwnerDrawFixed for the ShellCombo to work.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_DropDownStyle">
            <summary>
            The dropdown style of the component
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.DropDownStyle">
            <summary>
            If DropDownStyle is DropDown, the shell autocompletion mode is enabled.
            If it is DropDownList, the shell autocompletion is disabled, ie. no edit field is provided.
            The default value is <see cref="F:System.Windows.Forms.ComboBoxStyle.DropDown"/>. ComboBoxStyle.Simple is not supported and ignored.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.AutomaticRefresh">
            <summary>
            Enables the automatic refreshes of the control, e.g. when a file is added or deleted in the current directory.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.#ctor">
            <summary>
            Default constructor of the ShellComboBox
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.BeginInit">
            <summary>Signals the object that initialization is starting.</summary>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.EndInit">
            <summary>Signals the object that initialization is complete.</summary>
        </member>
        <member name="T:Jam.Shell.ShellComboBox.ListKind">
            <summary>
            The enumeration is used by <see cref="M:Jam.Shell.ShellComboBox.AddShellFolder(Jam.Shell.ShellBrowser,Jam.Shell.ShellFolder,Jam.Shell.ShellComboBox.ListKind,System.Boolean)"/> methods.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.ListKind.FolderItems">
            <summary>add folders</summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.ListKind.SpecialItems">
            <summary>add special items</summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.ListKind.FileItems">
            <summary>add file items</summary>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.ListKind.AllItems">
            <summary>add all items</summary>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.ActivateSelectedItem(System.String)">
            <summary>
            This method is called from the TextBoxKeyUp event, it checks 
            what kind of item the user selected, if it is a folder, the 
            component changes to that folder and issues a <see cref="M:Jam.Shell.ShellComboBox.FolderChanged(Jam.Shell.ItemIdList)"/> event
            otherwise it tries to shellexecute the item.
            </summary>
            <param name="path">The item path.</param>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.FindItemWithText(System.String)">
            <summary>
            Iterates over the items and checks if the caption of an item equals the given string.
            </summary>
            <param name="pItemText">All item captions are compared to this string.</param>
            <returns>The index of the item if it can be found, -1 if not.</returns>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.RemoveNonPersistentItems">
            <summary>
            Removes Items from the ShellComboItems list that are not persistent.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.RefreshPersistent">
            <summary>
            This method also refreshes the persistent items - it is used if properties that are normally
            set at designtime are modified at runtime, e.g. IncludeRemoveableDrives is switched on,
            since those Items are persistent items, they are not refreshed by default 
            <seealso cref="P:Jam.Shell.ShellComboBox.ShowMyDocuments"/>
            <seealso cref="P:Jam.Shell.ShellComboBox.ShowDrives"/>
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.GetPersistentItems(System.Collections.Generic.List{Jam.Shell.ItemIdList})">
            <summary>
            This method is extended by <see cref="M:Jam.Shell.ShellComboBox.RefreshPersistent"/>
            to support more Special Folders to be displayed.
            </summary>
            <param name="p_PIDLList">a list of ItemIdLists, that can be appended.</param>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.AddPersistentRootItemDesktop">
            <summary>
            This adds the persistent root item for the virtual folder "Desktop"
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.AddShellFolder(Jam.Shell.ShellBrowser,Jam.Shell.ShellFolder,Jam.Shell.ShellComboBox.ListKind,System.Boolean)">
            <summary>
            This method adds a list of persistent objects from a folder to the CustomFolderBox.
            </summary>
            <param name="p_ShellBrowser">The ShellBrowser instance to use.</param>
            <param name="p_ShellFolder">The ShellFolder to add.</param>
            <param name="p_Filter">Whether to filter special/nonspecial items.</param>
            <param name="p_Persistent">Whether the added items shall belong to the persistent items.</param>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.ShellComboBoxOptionChanged(System.Object,Jam.Shell.ShowOptionEventArgs)">
            <summary>
            This method is registered to the event delegate <see cref="E:Jam.Shell.CustomFolderComboBox.ShowOptionChangedEvent"/> 
            and handles the FullRefresh, respectively a component invalidation.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="p_Args">Event arguments.</param>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.OnDropDown(System.EventArgs)">
            <summary>
            Refreshes the non-persistent items in the control (ie. if changes on the desktop occurred)
            </summary>
            <param name="e">Event arguments</param>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.Refresh(Jam.Shell.RefreshLevel)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should be refreshed. This value can be null.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.FullRefresh">
            <summary>
            Rescans the folders and refreshes the components' entire display 
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.SmartRefresh">
            <summary>
            The SmartRefresh only refreshes the non persistent items but its 
            functionality equals a <see cref="M:Jam.Shell.ShellComboBox.FullRefresh"/> for the ShellCombo.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.AddDesktopContent">
            <summary>
            Adds the Desktop content if <see cref="P:Jam.Shell.ShellComboBox.ShowDesktopContent"/> is true
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Change the current folder to the one given in parameter
            throws <see cref="T:System.ArgumentNullException"/> if the argument was null
            </summary>
            <param name="p_ItemIdList">the folder to change to</param>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.AddIdListToCombo(Jam.Shell.ItemIdList)">
            <summary>
            Adds the folders of the given ItemIdList as non-persistent items to the combobox.
            </summary>
            <param name="p_ItemIdList">the ItemIdList to add</param>
            <returns>The index to the last item of the p_ItemIdList within the ShellCombo</returns>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.AddIdListToCombo(Jam.Shell.ItemIdList,System.Boolean)">
            <summary>
            Adds the folders of the given ItemIdList as (non)persistent items to the combobox.
            </summary>
            <param name="p_ItemIdList">the ItemIdList to add</param>
            <param name="p_Persistent">whether the added items are persistent</param>
            <returns>The index to the last item of the p_ItemIdList within the ShellCombo</returns>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            This method does nothing because ShellCombo does not display files.
            </summary>
            <param name="p_ItemIdList">An ItemIdList</param>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.GoUp">
            <summary>
            Go up one level in the tree,
            does nothing if the SelectedNode is null of if the SelectedNode has no Parent (is root)
            </summary>
            <returns>true, if the operation could be performed, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.OverlayTextBoxClicked(System.Object,System.EventArgs)">
            <summary>
            If the OverlayTextBox is clicked, it's text is selected.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The eventArgs.</param>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.OverlayTextBoxEntered(System.Object,System.EventArgs)">
            <summary>
            If the OverlayTextBox is clicked, it's text is selected.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">The eventArgs.</param>
        </member>
        <member name="F:Jam.Shell.ShellComboBox.m_InSelectedIndexEvent">
            <summary>
            An internal flag that indicates whether a selectedindex changed event 
            has occured, it prevents event loops.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellComboBox.CustomFolderComboSelectedIndexChanged(System.Object,System.EventArgs)">
            <summary>
            The event handler for the <see cref="E:System.Windows.Forms.ComboBox.SelectedIndexChanged"/> event.
            it notifies the ShellControlConnector about the selection change if 
            it has been registered.
            </summary>
            <param name="sender">the sender of the event</param>
            <param name="eventArgs">its arguments</param>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.CurrentFolderIdList">
            <summary>
            Get or set the ItemIdList of the currently selected folder,
            returns null if nothing is selected, may not be explicitly set to null.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.ShellControlConnector">
            <summary>
            Connects this control to a ShellControlConnector component, which allows to synchronize several shell controls.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellComboBox.SelectedPath">
            <summary>
            Use this property to get or set the currently selected path the ShellCombo is displaying.
            The path may be empty if the user selected an object that does not belong to the filesystem (i.e. Network). If you'd like to also handle these virtual file items, consider using the <see cref="P:Jam.Shell.ShellComboBox.CurrentFolderIdList"/> property instead.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellOperation">
            <summary>
            Enumeration of possible operations that may happen for a shell control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Copy">
            <summary>
            Objects have been copied.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Move">
            <summary>
            Objects have been moved.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Drag">
            <summary>
            Objects have been dragged from the control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Drop">
            <summary>
            Objects have been dropped on the control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Cut">
            <summary>
            Objects have been cut in the control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Paste">
            <summary>
            Objects have been pasted to the control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Delete">
            <summary>
            Objects have been deleted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Remove">
            <summary>
            Objects have been remvoed from the control, e.g. they have been moved or cut and pasted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Add">
            <summary>
            Objects have been added to the control, e.g. because they have been pasted or dropped.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellOperation.Rename">
            <summary>
            An object has been renamed in the control.
            </summary>
        </member>
        <member name="T:Jam.Shell.OperationEventArgs">
            <summary>
            Provides data for the <see cref="P:Jam.Shell.OperationEventArgs.Operation"/> event.
            </summary>
            <seealso cref="T:Jam.Shell.ShellListView"/>
            <seealso cref="T:Jam.Shell.ShellTreeView"/>
        </member>
        <member name="P:Jam.Shell.OperationEventArgs.ShellControl">
            <summary>
            The control that was affected
            </summary>
        </member>
        <member name="P:Jam.Shell.OperationEventArgs.Operation">
            <summary>
            The opration that was performed.
            </summary>
        </member>
        <member name="P:Jam.Shell.OperationEventArgs.AffectedObjects">
            <summary>
            The paths of the files or folders that were affected by the performed operation.
            </summary>
        </member>
        <member name="P:Jam.Shell.OperationEventArgs.Destination">
            <summary>
            In case of operations like copy or move this property contains the destination path. This property is null for other operations, to which it does not have a meaning.
            </summary>
        </member>
        <member name="T:Jam.Shell.IShellControl">
            <summary>
            Interface that all shell controls implement.
            </summary>
            <seealso cref="T:Jam.Shell.ShellListView"/>
            <seealso cref="T:Jam.Shell.ShellTreeView"/>
        </member>
        <member name="M:Jam.Shell.IShellControl.Refresh(Jam.Shell.RefreshLevel)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.IShellControl.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>This method indicates that the control should perform a refresh of its contents. </summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should be refreshed. This value can be null.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.IShellControl.FullRefresh">
            <summary>
            Triggers a full refresh for all connected controls.
            </summary>
            <seealso cref="M:Jam.Shell.ShellListView.FullRefresh"/>
            <seealso cref="M:Jam.Shell.ShellTreeView.FullRefresh"/>
        </member>
        <member name="M:Jam.Shell.IShellControl.SmartRefresh">
            <summary>
            Triggers a smart refresh for all connected controls.
            </summary>
            <seealso cref="M:Jam.Shell.ShellListView.SmartRefresh"/>
            <seealso cref="M:Jam.Shell.ShellTreeView.SmartRefresh"/>
        </member>
        <member name="M:Jam.Shell.IShellControl.GoUp">
            <summary>
            Move in all connected controls from the current to the parent folder.
            </summary>
            <returns>Returns, if the change of the folder was successfull.</returns>
            <seealso cref="M:Jam.Shell.ShellListView.GoUp"/>
            <seealso cref="M:Jam.Shell.ShellTreeView.GoUp"/>
        </member>
        <member name="P:Jam.Shell.IShellControl.ShellControlConnector">
            <summary>
            Provides read/write access to a <see cref="P:Jam.Shell.IShellControl.ShellControlConnector"/> instance.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellControlConnector">
            <summary>
            This component is able to synchronize several of the visual shell components (e.g. <see cref="T:Jam.Shell.ShellTreeView"/>, <see cref="T:Jam.Shell.ShellListView"/>). Just drop a ShellControlConnector component to this form and assign the ShellControlConnector property of all shell components to the ShellControlConnector component. You can refresh all connected shell controls by using the FullRefresh() method. If you want to use CheckBoxes in a <see cref="T:Jam.Shell.ShellTreeView"/> or <see cref="T:Jam.Shell.ShellListView"/>, that must be connected to a ShellControlConnector. The ShellControlConnector will synchronize the selected files and folder in the different shell controls.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.#ctor">
            <summary>
            The constructor for the ShellControlConnector class,
            it internally registers an EventHandler to its SelectionList change event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.OnFolderChanged">
            <summary>
            Triggers the FolderChanged event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.OnFileChanged">
            <summary>
            Fire the OnFileChanged event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.RegisterShellControl(Jam.Shell.IShellControlConnectorTarget)">
            <summary>
            Registers a control with the ShellControlConnector
            </summary>
            <param name="aControl">A shell control that implements the <see cref="T:Jam.Shell.IShellControlConnectorTarget"/> interface</param>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.DeregisterShellControl(Jam.Shell.IShellControlConnectorTarget)">
            <summary>
            Deregisters a control with the ShellControlConnector
            </summary>
            <param name="aControl">A shell control that implements the <see cref="T:Jam.Shell.IShellControlConnectorTarget"/> interface</param>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.SmartRefreshControls(Jam.Shell.IShellControl)">
            <summary>
            Calls the <see cref="M:Jam.Shell.IShellControl.SmartRefresh"/> SmartRefresh() method for all connected controls
            </summary>
            <param name="p_CallingControl">The calling control, which gets omitted when calling SmartRefesh() for all controls. Use null to apply the operation on all connected controls.</param>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.Refresh(Jam.Shell.IShellControl,Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>Refreshes the information displayed in all controls connected with this ShellControlConnector except the passed control, which usually will be the caller.</summary>
            <param name="pSenderControl">The control that sent the command. It won't be notified again.</param>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should be refreshed. This value can be null.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.Refresh(Jam.Shell.RefreshLevel)">
            <summary>Refreshes the information displayed in all controls connected with this ShellControlConnector.</summary>
            <param name="pLevel"> The level of refresh that should be performed. </param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.FullRefreshControls(Jam.Shell.IShellControl)">
            <summary>
            Calls the <see cref="M:Jam.Shell.IShellControl.FullRefresh"/> FullRefresh() method for all connected controls.
            </summary>
            <param name="p_CallingControl">The calling control, which gets omitted when calling FullRefesh() for all controls. Use null to apply the operation on all connected controls.</param>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.PathChanged(Jam.Shell.IShellControlConnectorTarget,Jam.Shell.ItemIdList)">
            <summary>
            This public method is used by the connected controls for synchronization. Usually this method should not be called by the user directly.
            </summary>
            <param name="p_Sender">Contains the sender, which triggered the change of the folder.</param>
            <param name="p_ItemIdList">Contains information about the folder.</param>
            <seealso cref="M:Jam.Shell.IShellControlConnectorTarget.FolderChanged(Jam.Shell.ItemIdList)"/>
        </member>
        <member name="P:Jam.Shell.ShellControlConnector.ConsiderRootedAtProperty">
            <summary>
            If this property is set to true the <see cref="T:Jam.Shell.ShellControlConnector"/> will take the 
            <see cref="P:Jam.Shell.ShellTreeView.RootedAt"/> or <see cref="P:Jam.Shell.ShellTreeView.RootedAtFileSystemFolder"/> property 
            of a connected <see cref="T:Jam.Shell.ShellTreeView"/> control into account. 
            For example if RootedAt is set to "c:\" then the ShellControlConnector will filter out
            any folder change event that would point connected controls like the <see cref="T:Jam.Shell.ShellListView"/> to 
            a folder that is not reachable by traversing the directory tree from the root given in the 
            <see cref="P:Jam.Shell.ShellTreeView.RootedAt"/> directory.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.CheckRootFolder(Jam.Shell.ShellFolder,Jam.Shell.ItemIdList)">
            <summary>
            Checks whether the folder is accessible
            </summary>
            <param name="p_RootedAt"></param>
            <param name="p_ItemIdList"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.CheckRootFolder(System.String,Jam.Shell.ItemIdList)">
            <summary>
            Check whether the folder path is a root path of that the item id list represents.
            </summary>
            <param name="p_FolderPath"></param>
            <param name="p_ItemIdList"></param>
            <returns>true, if the folder path is a root path</returns>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.InformConnectedControls(Jam.Shell.IShellControlConnectorTarget,Jam.Shell.ItemIdList)">
            <summary>
            Informs the connected controls about a path change, the method allows 
            the p_Sender parameter being null, which results in notifying all connected
            controls about the path change.
            </summary>
            <param name="p_Sender">The p_Sender is excluded from the FolderChanged event if != null.</param>
            <param name="p_ItemIdList">The ItemIdList of the new path.</param>
        </member>
        <member name="F:Jam.Shell.ShellControlConnector.m_HistoryItems">
            <summary>
            A list of <see cref="T:Jam.Shell.ShellItem"/>s with the history of items viewed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellControlConnector.m_HistoryCursor">
            <summary>
            The cursor pointing at the index of the currently selected item
            in the history list.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellControlConnector.HistoryCursor">
            <summary>
            This property contains the index of the current item in the history list
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.MoveInHistory(System.Int32)">
            <summary>
            Move the pointer in the History by delta items.
            If delta is positive, move forward.
            Move backward if delta is negative.
            </summary>
            <param name="delta">The steps to move the history cursor.</param>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.IsMovePossible(System.Int32)">
            <summary>
            Checks if a move by delta steps in the history is possible.
            </summary>
            <param name="delta">Move by steps if delta is negative move backward, else forward</param>
            <returns>True, if the cursor can be moved, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.GetHistoryElement(System.Int32)">
            <summary>
            Retrieve the history element at the index given.
            </summary>
            <param name="p_Index">The index of the element to get.</param>
            <returns>A <see cref="T:Jam.Shell.ShellItem"/> or null if the index is not within range.</returns>
        </member>
        <member name="P:Jam.Shell.ShellControlConnector.HistoryCount">
            <summary>
            Get the count of the items available in the history.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.GetHistoryEnumerable">
            <summary>
            Use this method to enumerate all <see cref="T:Jam.Shell.ShellItem"/> instances
            that are available in the History.
            </summary>
            <returns>An enumerator to the <see cref="T:Jam.Shell.ShellItem"/></returns>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.GetCaptionForHistoryElement(System.Int32)">
            <summary>
            Retrieve the caption of a history element at the index given.
            </summary>
            <param name="p_Index">The index of the element to get the caption from.</param>
            <returns>The caption of a ShellItem or null if the index is not within range.</returns>
        </member>
        <member name="M:Jam.Shell.ShellControlConnector.SelectedFileChanged(Jam.Shell.IShellControlConnectorTarget,Jam.Shell.ItemIdList)">
            <summary>
            This public method is used by the connected controls for synchronization. Usually this method should not be called by the user directly.
            </summary>
            <param name="p_Sender">Contains the sender, which triggered the change of the file.</param>
            <param name="p_ItemIdList">Contains information about the file.</param>
        </member>
        <member name="P:Jam.Shell.ShellControlConnector.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellControlConnector.Enabled">
            <summary>
            Enabled returns true, if the messages should be passed through, false if the messages should be ignored.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellControlConnector.ShowParentfolderItem">
            <summary>
            true, if appropriate controls may display a parent folder item or may go to the parent folder.
            false, if controls should prevent changing to the parent folder.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellControlConnector.SelectionList">
            <summary>
            If the Checkboxes property of a control connected to a ShellControlConnector is enabled,
            this property contains the checked items. 
            </summary>
            <seealso cref="T:Jam.Shell.PathSelectionList"/>
        </member>
        <member name="E:Jam.Shell.ShellControlConnector.FolderChanged">
            <summary>
            EventHandler for the FolderChanged event, which is triggered when the path has changed in one of the connected controls.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellControlConnector.FileChanged">
            <summary>
            EventHandler for the FolderChanged event, which is triggered when the selected files has changed in one of the connected controls.
            </summary>
        </member>
        <member name="T:Jam.Shell.DriveListItem">
            <summary>
            Class contains infos about any items within the Lists
            </summary>
        </member>
        <member name="M:Jam.Shell.DriveListItem.#ctor">
            <summary>
            Constructor for creating a <c>DriveListItem</c>.
            </summary>
        </member>
        <member name="M:Jam.Shell.DriveListItem.#ctor(System.String)">
            <summary>
            Constructor for creating a <c>DriveListItem</c>.
            </summary>
            <param name="pPath">The path of the item.</param>
        </member>
        <member name="P:Jam.Shell.DriveListItem.Path">
            <summary>
            Get or set the path of the item.
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveListItem.TotalBytes">
            <summary>
            Gets the total diskspace.
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveListItem.AvailableBytes">
            <summary>
            Gets the available diskspace.
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveListItem.AvailablePercent">
            <summary>
            Gets the percentual availability of disk space of the current item
            </summary>
        </member>
        <member name="M:Jam.Shell.DriveListItem.AcquireImageIndecesViaThreadPool">
            <summary>
            For the DriveListItem this method simply calls <see cref="M:Jam.Shell.DriveListItem.CompleteDetails(Jam.Shell.JamBaseShellListView)"/>
            </summary>
        </member>
        <member name="M:Jam.Shell.DriveListItem.Refresh">
            <summary>
            Refreshes the information.
            </summary>
        </member>
        <member name="M:Jam.Shell.DriveListItem.CompleteDetails(Jam.Shell.JamBaseShellListView)">
            <summary>
            Sets the missing item information, namely available and total disk space and available percent (asynchronous).
            </summary>
            <param name="pListView">The <see cref="T:Jam.Shell.DriveList"/> the item belongs to.</param>
        </member>
        <member name="M:Jam.Shell.DriveListItem.FillSubitems">
            <summary>
            Fills the columns for the item.
            </summary>
        </member>
        <member name="M:Jam.Shell.DriveListItem.FillSubitems(System.Int32)">
            <summary>
            Fills the columns of the item.
            </summary>
            <param name="pIndex"></param>
        </member>
        <member name="T:Jam.Shell.DriveList">
            <summary>
            Use the DriveList to display available drives in the host.
            Items that are contained in the list are of type <see cref="T:Jam.Shell.DriveListItem"/>. This applies to the <see cref="P:Jam.Shell.CustomFileList`1.Items"/> and the <see cref="P:Jam.Shell.CustomFileList`1.SelectedItems"/> properties.
            </summary>
        </member>
        <member name="M:Jam.Shell.DriveList.#ctor">
            <summary>
            Standard constructor for the drivelist
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.ViewState">
            <summary>
            Returns the ViewState that is always Details for the ShellDriveList.
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.View">
            <summary>
            Returns the ViewState that is always Details for the ShellDriveList.
            </summary>
            <remarks>Obsolete - use ViewState instead.</remarks>
        </member>
        <member name="P:Jam.Shell.DriveList.WarnLevelPercent">
            <summary>If the free space on the drive is below this value, the bar will be drawn in yellow.</summary>
            <remarks>The default value is 2 percent. Set this property to 0 if you do not want the color to be changed.</remarks>
            <seealso cref="P:Jam.Shell.DriveList.ErrorLevelPercent"/>
        </member>
        <member name="P:Jam.Shell.DriveList.ErrorLevelPercent">
            <summary>If the free space on the drive is below this value, the bar will be drawn in red.</summary>
            <remarks>The default value is 8 percent. Set this property to 0 if you do not want the color to be changed.</remarks>
            <seealso cref="P:Jam.Shell.DriveList.WarnLevelPercent"/>
        </member>
        <member name="P:Jam.Shell.DriveList.AllowDrag">
            <summary>
            Overwrites the <see cref="P:Jam.Shell.JamBaseShellListView.AllowDrag"/> property because the DriveList does not support Drag/Drop.
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.AllowDrop">
            <summary>
            Overwrites the <see cref="P:Jam.Shell.JamBaseShellListView.AllowDrop"/> property because the DriveList does not support Drag/Drop.
            </summary>
        </member>
        <member name="M:Jam.Shell.DriveList.FullRefresh">
            <summary>
            Refreshes the view by clearing all items and re-adding all drives again
            </summary>
        </member>
        <member name="M:Jam.Shell.DriveList.SmartRefresh">
            <summary>
            Refreshes the displayed information.
            </summary>
        </member>
        <member name="M:Jam.Shell.DriveList.CompleteDetails(Jam.Shell.DriveListItem)">
            <summary>
            Completes item details of a drivelist item.
            </summary>
            <param name="pItem">The item</param>
        </member>
        <member name="M:Jam.Shell.DriveList.InitColumns">
            <summary>
            Initializes the columns.
            </summary>
        </member>
        <member name="M:Jam.Shell.DriveList.Add(System.String)">
            <summary>
            Adds the specified path if it is not already included in the list.
            </summary>
            <param name="pPath">The path to add to the <see cref="T:Jam.Shell.DriveList"/></param>
            <returns>The <see cref="T:Jam.Shell.DriveListItem"/> that was added or the duplicate already contained in the list.</returns>
        </member>
        <member name="M:Jam.Shell.DriveList.DisplayHeaderContextMenu(System.Object)">
            <summary>
            Handles the HeaderRightClick event. Not implemented so far.
            </summary>
            <param name="sender">The sender of the event.</param>
        </member>
        <member name="M:Jam.Shell.DriveList.Compare(System.Object,System.Object)">
            <summary>Comparison method for ListView items of the <see cref="T:Jam.Shell.DriveList"/>.</summary>
            <param name="x">First DriveListItem</param>
            <param name="y">Second DriveListItem</param>
            <returns>Negative if 'x' is less than 'y', 0 if they are equal, or positive if it is greater.</returns>
        </member>
        <member name="P:Jam.Shell.DriveList.ColumnNameText">
            <summary>
            The text in the "name" column header, if this value is null, a
            localized windows system string is used per default 
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.ColumnSizeText">
            <summary>
            The text in the "size" column header, if this value is null, a
            localized windows system string is used per default 
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.ColumnFreeText">
            <summary>
            The text in the "free" column header, if this value is null, a
            localized windows system string is used per default 
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.ColumnFreePercentageText">
            <summary>
            The text in the "% free" column header, if this value is null, a
            localized windows system string is used per default
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.PercentBorderColor">
            <summary>
            The border color of the percentage bar
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.PercentBarWarningColor">
            <summary>
            The bar color if the percentage is below warning level.
            </summary>
            <seealso cref="P:Jam.Shell.DriveList.WarnLevelPercent"/>
        </member>
        <member name="P:Jam.Shell.DriveList.PercentBarErrorColor">
            <summary>
            The bar color if the percentage is below error level.
            </summary>
            <seealso cref="P:Jam.Shell.DriveList.ErrorLevelPercent"/>
        </member>
        <member name="P:Jam.Shell.DriveList.PercentFillColor">
            <summary>
            The fill color of the free disk space percentage bar
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.PercentBarColor">
            <summary>
            The fill color of the occupied disk space percentage bar
            </summary>
        </member>
        <member name="P:Jam.Shell.DriveList.PercentTextColor">
            <summary>
            The text color of the percentage bar
            </summary>
        </member>
        <member name="M:Jam.Shell.DriveList.ShellChangeNotifier_Change(System.Object,Jam.Shell.ChangeNotificationEventArgs)">
            <summary>
            This method is called if a drive is added or removed. If so, the DriveList is refreshed.
            </summary>
            <param name="sender">The event sender</param>
            <param name="e">The ChangeNotification arguments</param>
        </member>
        <member name="M:Jam.Shell.DriveList.OnDoubleClick(System.EventArgs)">
            <summary>
            This event occurs if the user double-clicked onto an item
            </summary>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.DriveList.OnSelectedIndexChanged(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ListView.SelectedIndexChanged"/> event.
            </summary>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.DriveList.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)">
            <summary>
            Overrides the <see cref="M:Jam.Shell.DriveList.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)"/>.
            </summary>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.DriveList.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)">
            <summary>
            Handles drawing of the sub item
            </summary>
            <param name="e">Contains event information.</param>
        </member>
        <member name="T:Jam.Shell.CustomFileListItem">
            <summary>
            The baseclass for list items in the <see cref="T:Jam.Shell.CustomFileList`1"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileListItem.m_Path">
            <summary>
            The absolute path of the item.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileListItem.GetItemPidls">
            <summary>
            Retrieves the relative and absolute ItemIdLists of the given path.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileListItem.SetAbsoluteItemIdList(Jam.Shell.ItemIdList)">
            <summary>
            Enables setting the AbsoluteItemIdList for a ListItem.
            </summary>
            <param name="absItemIdList">the absolute ItemIdList for the ListElement. If not set it will be loaded from the path when needed.</param>
        </member>
        <member name="P:Jam.Shell.CustomFileListItem.Path">
            <summary>
            Get or set the Path of the filelist item.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileListItem.IsPathBeingChecked">
            <summary>
            Gets or sets a value indicating whether the item`s path is currently being checked in the background.
            </summary>
            <value>
            <c>true</c> if the item`s path is currently being checked in the background; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jam.Shell.CustomFileListItem.FileSize">
            <summary>Gets or sets the size of the file. It's a value preloaded during the search. </summary>
            <value>The size of the file. </value>
        </member>
        <member name="M:Jam.Shell.CustomFileListItem.#ctor">
            <summary>
            Initalizes a new ListItem with an empty caption.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileListItem.#ctor(System.String)">
            <summary>
            Initializes a new ListItem with the caption given in the parameter.
            </summary>
            <param name="p_Caption">The caption of the listitem.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileListItem.AcquireImageIndecesViaThreadPool">
            <summary>
            Implement this method to complete the details from a threadpool
            </summary>
        </member>
        <member name="T:Jam.Shell.FileListItem">
            <summary>
            Class contains infos about any items within the Lists.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileListItem.FillSubitemsIfEmpty">
            <summary>
            Helper method to enhance readability.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileListItem.FillSubitems">
            <summary>
            Fills the columns of the listview with basic information such as filename/path
            </summary>
        </member>
        <member name="M:Jam.Shell.FileListItem.FillSubitems(System.Int32)">
            <summary>
            Fills the columns of the listview with basic information such as filename/path
            </summary>
            <param name="p_Index">Just the subitem at the index position should be filled.</param>
        </member>
        <member name="M:Jam.Shell.FileListItem.Rename(System.String)">
            <summary>
            Renames the item.
            </summary>
            <param name="p_NewName">The new item name.</param>
            <returns>True if the renaming was successful.</returns>
        </member>
        <member name="M:Jam.Shell.FileListItem.CompleteDetails(Jam.Shell.JamBaseShellListView)">
            <summary>
            Completes the details for a filelist item
            </summary>
            <param name="listView">The listview the items is associated with</param>
        </member>
        <member name="M:Jam.Shell.FileListItem.AcquireImageIndecesViaThreadPool">
            <summary>
            This method enqueues a work item into the system threadpool to 
            get the image indeces of the particular FileListItem.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileListItem.CompleteDetailsCallBack(System.Object)">
            <summary>
            This method is called if the user work item gets dequeued from the threadpool.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Jam.Shell.FileListItem.#ctor">
            <summary>
            Initalizes a new ShellListItem with an empty caption.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileListItem.#ctor(System.String)">
            <summary>
            Initializes a new ShellListItem with the caption given in the parameter.
            </summary>
            <param name="p_Caption">The caption of the listitem.</param>
        </member>
        <member name="P:Jam.Shell.FileListItem.Path">
            <summary>
            Get or set the Path of the filelist item.
            </summary>
            <example>
            This smaple code shows the path of the last item in a FileList:
            <code>
            FileListItem fli = (FileListItem)FileList1.Items[FileList.Items.Count-1];
            MessageBox.Show(fli.Path);
            </code>
            </example>
        </member>
        <member name="P:Jam.Shell.FileListItem.FileSize">
            <summary>
            If this item is a file this property returns its size, 0 otherwise.
            </summary>
        </member>
        <member name="P:Jam.Shell.FileListItem.FileCount">
            <summary>
            Returns "1" if the item is a file, if the item is a folder, the number of files contained in that folder
            </summary>
        </member>
        <member name="T:Jam.Shell.CustomFileList`1">
            <summary>
            The base class for file lists.
            Implement the two abstract methods <see cref="M:Jam.Shell.CustomFileList`1.CompleteDetails(`0)"/> and <see cref="M:Jam.Shell.JamBaseShellListView.InitColumns"/>
            to use this class. You can also extend your own class from <see cref="T:Jam.Shell.FileListItem"/> and pass that
            as the generic parameter or simply use the FileListItem class provided in the ShellBrowser package if 
            you do not intend to add special properties.
            </summary>
            <typeparam name="T">Needs to extend FileListItem and can specify more columns if needed.</typeparam>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_BackgroundWorker">
            <summary>
            This background worker can be used to add items to the list asynchronously.
            <seealso pref="BackgroundWorker"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_AllowDropToTheBackground">
            <summary>
            Whether the user is allowed to drop items onto the background of the component.
            <seealso pref="AllowDropToTheBackground"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_ColorCompressed">
            <summary>
            The color that should be used for a compressed file
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_ColorEncrypted">
            <summary>
            The color that should be used for an encrypted file
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_ShowOverlayIcons">
            <summary>
            Flag indicating if the overlay icons are shown.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_CheckIfExists">
            <summary>
            Flag indicating, if the existence of items should be checked.
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_AllowDuplicates">
            <summary>
            <see cref="P:Jam.Shell.CustomFileList`1.AllowDuplicates"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_UseThreadPool">
            <summary>
            <see cref="P:Jam.Shell.CustomFileList`1.UseThreadPool"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_ReadOnly">
            <summary>
            <see cref="P:Jam.Shell.CustomFileList`1.ReadOnly"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.CustomFileList`1.m_ItemsDictionary">
            <summary>
            This dictionary contains LIST_ITEM entries sorted by filename, for fast access
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.SelectedItems">
            <summary>
            Gets the items that are selected in the control.
            </summary>
            <returns>A <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1" /> that contains the items that are selected in the control. 
            If no items are currently selected, an empty <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1" /> is returned.</returns>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.Items">
            <summary>
            Gets a collection containing all items in the control.
            </summary>
            <returns>A <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1" /> that contains all the items in the <see cref="T:Jam.Shell.CustomFileList`1" /> control.</returns>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.AllowDuplicates">
            <summary>
            Whether to allow duplicates in the Filelist or not, the default is to allow them.
            If AllowDuplicates is set to false, insertion to the FileList may get significantly slower
            for large sets of files.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.ItemsDictionary">
            <summary>
            This dictionary contains LIST_ITEM entries sorted by filename, for fast access
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.BackgroundWorker">
            <summary>
            Returns the Backgroundworker that is associated with each FileList instance.
            The BackgroundWorker is the required and preferred way to asynchronously
            add items to a component from a different thread. 
            See http://msdn2.microsoft.com/en-us/library/ms171728.aspx.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.UseThreadPool">
            <summary>
            Whether to use the system threadpool to obtain information on listview items.
            If this property is false (the default value), the complete file detail information is retrieved as
            soon as the item is displayed the first time within the listview.
            Sometimes it is useful to have all file information fetched as soon as possible without loosing userinterface
            responsiveness. If set to true, the item information for all files in the listview is additionally 
            fetched from the background this further enhances performance on multicore systems.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.AllowDropToTheBackground">
            <summary>
            If this property is set to true, the user is allowed to drop items onto the background in order to add them to the displayed list of files.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.CopyMode">
            <summary>
            Copy mode allows you to control the behaviour when files or folders get dropped.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.AutoScrollDelay">
            <summary>
            The delay in milliseconds after that the control scrolls automatically during a drag and drop operation.
            A value of 0 disables the auto scroll feature.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.OwnerDraw">
            <summary>
            The value of the OwnerDraw property must always be true. This is why the Property is
            reimplemented here. The setting to false is ignored, and a debug message is shown.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.CheckBoxes">
            <summary>
            Use this property to turn on or off the checkboxes for file and folder selection. 
            The checkboxes will only work, if a <see cref="T:Jam.Shell.ShellControlConnector"/> has been 
            assigned to the ShellControlConnector property of this component. It will 
            automatically synchronize the selection state of the items in multiple shell 
            controls linked together with this ShellControlConnector.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.NoFillOnStartup">
            <summary>
            This property is always false for FileList and DriveList.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.ShowColorCompressed">
            <summary>
            If set, compressed files and folders will be shown in that particular Color, show normally otherwise (if null).
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.ShowColorEncrypted">
            <summary>
            If set, encrypted files and folders will be shown in that particular color, show normally otherwise (if null).
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.ShowOverlayIcons">
            <summary>
            If set to 'false', no overlay icons will be shown, which improves the performance of the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.CheckIfExists">
            <summary>
            If set to true, it is checked whether the files that are added to the list 
            do exist on the filesystem.
            </summary>
        </member>
        <member name="P:Jam.Shell.CustomFileList`1.ReadOnly">
            <summary>
            Prevents operations that change the file system from being executed.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.GetSelectedItemCollectionType">
            <summary>Gets the type of the selected item collection.</summary>
            <returns>The type of the selected item collection.</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.GetItemCollectionType">
            <summary>
            Gets the type of the item collection.
            </summary>
            <returns>The type of the item collection.</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.GetListViewItemSorter">
            <summary>Returns the IComparer that should be used for sorting.</summary>
            <returns>The list view item sorter.</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.ResetItemDetails">
            <summary>
            Resets all items so the next time their <see cref="M:Jam.Shell.ShellListBaseItem.CompleteDetails"/> method is 
            called, the information is retrieved again.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.GetUIObject(System.Guid)">
            <summary>
            Returns for the currently selected item a COM object that implements the requested interface.
            </summary>
            <param name="riid">IID of the interface that should be returned</param>
            <returns>The UIObject that is returned by <see cref="M:Jam.Shell.ShellBrowserBase.GetUIObject(System.Guid)"/></returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.CheckBoxHit(System.String)">
            <summary>
            This method is currently a surrogate for the implementation of the checkbox functionality
            that will follow.
            </summary>
            <param name="path">path to it</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.Reset">
            <summary>
            This has to be implemented by the inherting control.
            </summary>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)"/>.
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)"/>.
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.CompleteDetails(`0)">
            <summary>
            Completes the details of an item, like image index, sub items etc.
            </summary>
            <param name="aItem">The item to complete the details for.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.IsItemInList(System.String)">
            <summary>
            Checks whether an item with the given filename can be found in the list.
            </summary>
            <param name="p_FileName">the filename to check for</param>
            <returns>true if the filename is in the filelist</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.ReturnItemInList(System.String)">
            <summary>
            Returns the item that is associated to the filename given as a parameter.
            Uses the SortedDictionary that is maintained within the FileList to
            determine whether the p_FileName is contained as a key if the AllowDuplicates property is set to true.
            Otherwise it iterates through the list of items in O(n) to find the first entry.
            </summary>
            <param name="p_FileName">The filename to search for through the dictionary</param>
            <returns>null, if the item is not in the list otherwise a reference to the item</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.AddStrings(System.String[])">
            <summary>
            Adds a list of paths to the filelist.
            The items are initialized to be unchecked. It is assumed that the paths do not contain
            duplicates. If you want pass a filelist that may contain duplicates, use the
            <see cref="M:Jam.Shell.CustomFileList`1.AddStrings(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)"/> method.
            </summary>
            <param name="p_Paths">a list of absolute paths or filenames to add</param>
            <returns>a list of items that where added</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.AddStrings(System.String[],System.Boolean)">
            <summary>
            Adds a list of paths to the filelist. It is assumed that the paths do not contain
            duplicates. If you want pass a filelist that may contain duplicates, use the
            <see cref="M:Jam.Shell.CustomFileList`1.AddStrings(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)"/> method.
            </summary>
            <param name="p_Paths">a list of absolute paths or filenames to add</param>
            <param name="p_Checked">if true the items are added with state checked</param>
            <returns>a list of items that where added</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.AddPathToTempList(System.String,Jam.Shell.ItemIdList,System.Boolean,System.Boolean,System.Collections.Generic.List{`0})">
            <summary>Creates a new list item and adds it to the passed temporary list. </summary>
            <param name="p_Path">The path of the item.</param>
            <param name="p_ItemIdList">The absolute ItemIdList of the item. </param>
            <param name="p_Checked">The checked state of the newly created item. </param>
            <param name="p_ContainsDuplicates">
            set this to true if the list might contain duplicates (slower)
            </param>
            <param name="itemsToBeAdded">The items to be added. </param>
            <returns>A LIST_ITEM. </returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.AddStrings(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)">
            <summary>
            Adds a list of paths to the filelist. It is assumed that the paths do not contain
            duplicates. If you want to pass a filelist that may contain duplicates, use the
            <see cref="M:Jam.Shell.CustomFileList`1.AddStrings(System.Collections.Generic.IEnumerable{System.String},System.Boolean,System.Boolean)"/> method.
            </summary>
            <param name="p_Paths">a list of absolute paths or filenames to add</param>
            <param name="p_Checked">if true the items are added with state checked</param>
            <param name="p_ContainsDuplicates">set this to true if the list might contain duplicates (slower)</param>
            <returns>a list of items that where added</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.AddPidls(Jam.Shell.ItemIdList[],System.Boolean,System.Boolean)">
            <summary>
            Like addStrings, but adds items by ItemIdLists instead. Used internally to keep already retreived ItemIdLists.
            Attention: not all files have a PIDL (i.e. ItemIdList.Handle). To be able to add those files anyway, the ItemIdList.Path must contain a value.
            </summary>
            <param name="pidls">Array of absolute ItemIdLists for the elements to be added</param>
            <param name="p_Checked">if true the items are added with state checked</param>
            <param name="p_ContainsDuplicates">set this to true if the list might contain duplicates (slower)</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.Add(System.String)">
            <summary>
            Adds a path to the filelist. The item is initialized unchecked and 
            it is assumed, that it is no duplicate entry.
            </summary>
            <param name="p_Path">The path to add</param>
            <returns>The item that was added, null if CheckIfExists was enabled and the file has not been found.</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.CreateListItem(System.String,System.Boolean,System.Boolean,Jam.Shell.ItemIdList,System.Boolean@)">
            <summary>
            Creates a new ListItem
            </summary>
            <param name="p_Path">The absolute path to create a list item for.</param>
            <param name="p_Checked">The checked state of the newly created item</param>
            <param name="p_CheckDuplicates">Forces to check for a duplicate O(n), 
            even if the <see cref="P:Jam.Shell.CustomFileList`1.AllowDuplicates"/> functionality is disabled and therefore no 
            Dictionary&lt;Path,Item&gt; datastructure is available.</param>
            <param name="absoluteItemIdList">pass the absolute ItemIdList for the element if availabe. This will speed up later actions like sorting/displaying</param>
            <param name="p_PathAlreadyExisted">Is true, 
            if the p_CheckDuplicates was true and a duplicate path entry has been found.
            Is true if the property <see cref="P:Jam.Shell.CustomFileList`1.AllowDuplicates"/> is false and the fullpath
            was found in the dictionary.</param>
            <returns>The newly created ListItem, or if p_PathAlreadyExisted is true, the
            existing item instance.</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.Add(System.String,System.Boolean,System.Boolean)">
            <summary>
            Adds a file or path to the list.
            </summary>
            <param name="p_Path">The item to add.</param>
            <param name="p_Checked">Whether the item is marked or not.</param>
            <param name="p_CheckDuplicates">If true, checks for a duplicate path already contained in the list.</param>
            <returns>the item that was added, null if CheckIfExists was enabled and the file has not been found.</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.Clear">
            <summary>
            Removes all items from the FileList
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.CheckAll">
            <summary>
            Sets the Checked state of all Items to "checked" (true).
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.UnCheckAll">
            <summary>
            Sets the Checked state of all Items to "unchecked" (false).
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.GetFullPath(`0)">
            <summary>
            Get the full path of an item.
            </summary>
            <param name="p_FileListItem">the item to retrieve the full path for.</param>
            <returns>full path of the listitem</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.GetFullPath(System.Int32)">
            <summary>
            Get the fullpath of an item at the index specified.
            </summary>
            <param name="p_Index">the index </param>
            <returns>full path at index</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnDoubleClick(System.EventArgs)">
            <summary>
            Overrides the OnDoubleClick eventhandler to invoke the default command on the selected item.
            </summary>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.InvokeContextMenuCommand(System.String)">
            <summary>
            Invokes the given shell command on the selected file(s).
            </summary>
            <param name="command">The command as string that should be executed, e.g. "copy" or "open". An empty string will invoke the default command.</param> 
            <returns>true if successful. false if an error occured.</returns>
            <seealso cref="M:Jam.Shell.JamBaseShellListView.InvokeCommandOnSelected(Jam.Shell.ShellCommand)"/>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.PrepareMultiObjects(Jam.Shell.ShellBrowser)">
            <summary>Prepares the selected items in the list for being used with the m_ShellBrowser, an
            instance of <see cref="T:Jam.Shell.ShellBrowser"/>.</summary>
            <param name="pShellBrowser">The <see cref="T:Jam.Shell.ShellBrowser"/> instance collecting the objects.</param>
            <returns><b>true</b>if one or more items have been successfully prepared; otherwise
            <b>false</b></returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.Remove(System.String)">
            <summary>
            Removes an item from the list.
            </summary>
            <param name="p_Filename">the file or path of the item that is to be removed from the list</param>
            <returns>the item that has been removed, null if it has not been found in the list</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.Remove(`0)">
            <summary>
            Removes an item from the list.
            </summary>
            <param name="p_Item">The item to delete</param>
            <returns>the item that has been removed, null if the item was not in the list</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.RemoveItemFromList(Jam.Shell.ShellListBaseItem)">
            <summary>
            Removes the list element from the list
            </summary>
            <param name="item">a CustomFileListItem that should be removed.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.#ctor">
            <summary>
            The default constructor.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.Dispose(System.Boolean)">
            <summary>
            Remove reference to ShellControlConnector and implicitely remove this control from the list of known controls of the ShellControlConnector
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.</param>
        </member>
        <member name="E:Jam.Shell.CustomFileList`1.AddItem">
            <summary>
            This event is fired if a file is to be added to the listview. It is possible to prevent adding the file by setting the CanAdd flag in the <see cref="T:Jam.Shell.AddItemEventArgs"/> to false.
            </summary>
        </member>
        <member name="E:Jam.Shell.CustomFileList`1.RemoveItem">
            <summary>
            This event is issued if a file is removed from the listview. 
            </summary>
        </member>
        <member name="E:Jam.Shell.CustomFileList`1.ClearItems">
            <summary>
            This event occurs if the FileList is cleared by calling the clear() method.
            </summary>
        </member>
        <member name="E:Jam.Shell.CustomFileList`1.ItemListChanged">
            <summary>
            This event occurs if the FileList changed, ie. an item was removed, added or the list is cleared.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnItemListChanged">
            <summary>Executes the item list changed action. </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnAddItem(Jam.Shell.AddFileItemEventArgs)">
            <summary>
            Raises the <see cref="E:Jam.Shell.CustomFileList`1.AddItem" /> event.
            </summary>
            <param name="p_EventArgs">The <see cref="T:Jam.Shell.AddFileItemEventArgs"/> instance containing the event data.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnMouseEnter(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseEnter event.
            </summary>
            <param name="e">event arguments</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnMouseLeave(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseLeave event.
            </summary>
            <param name="e">event arguments</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overrides the OnKeyDown eventhandler.
            </summary>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.SelectAll">
            <summary>
            Use SelectAll to select all items in a ShellFileList.
            </summary>
            <returns>Returns true, if all files were selected.</returns>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)"/>
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)"/>
            </summary>
            <param name="drgevent">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)"/>
            </summary>
            <param name="drgevent">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)"/>
            </summary>
            <param name="drgevent">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.OnDragLeave(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)"/>
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.FullRefresh">
            <summary>
            This method removes not existing items if the property CheckIfExists is true.
            </summary>
        </member>
        <member name="M:Jam.Shell.CustomFileList`1.SmartRefresh">
            <summary>
            This method is left empty in the <see cref="T:Jam.Shell.CustomFileList`1"/> and <see cref="T:Jam.Shell.FileList"/> classes.
            </summary>
        </member>
        <member name="T:Jam.Shell.IFileMatcher">
            <summary>
            This interface is used to call a file matching mechanism from the background worker thread managed within 
            a FileSearcher instance. Furthermore it is used by the File/Folder change notification.
            </summary>
        </member>
        <member name="M:Jam.Shell.IFileMatcher.FileMatches(Jam.Shell.SearchOptions,System.String)">
            <summary>
            Check if a file matches
            </summary>
            <param name="p_SearchOptions">the search criteria</param>
            <param name="filename">the filename to match</param>
            <returns>true if the file matches</returns>
        </member>
        <member name="T:Jam.Shell.FileSearcher">
            <summary>
            The FileSearcher class wraps a search request into a class instance.
            It provides a method DoSearchWork that is to be registered to a BackgroundWorker.DoWork
            event handler.
            </summary>
        </member>
        <member name="F:Jam.Shell.FileSearcher.m_DirectoryEstimationDepth">
            <summary>
            The depth the searcher scans for subdirectories and counts them 
            before starting the actual search this value should not be greater than 3.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileSearcher.ClearQueueOfFoundFiles">
            <summary>
            Issues a Queue.Clear() operation to empty the queue of the found files.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileSearcher.#ctor(Jam.Shell.SearchOptions,System.String[],System.ComponentModel.BackgroundWorker,Jam.Shell.IFileMatcher)">
            <summary>
            Construct a FileSearcher object.
            Registers itself to the DoWork event of the BackgroundWorker passed and keeps
            a reference to asynchronously cancel the search. The FileSearcher object will
            not try to estimate the percentage, use <see cref="M:Jam.Shell.FileSearcher.#ctor(Jam.Shell.SearchOptions,System.String[],System.ComponentModel.BackgroundWorker,Jam.Shell.IFileMatcher,System.Byte)"/>
            if you want to estimate the percentage.
            </summary>
            <param name="p_SearchOptions"></param>
            <param name="p_SearchPaths"></param>
            <param name="p_SearchWorker">The BackgroundWorker object.</param>
            <param name="p_FileMatcher">An object implementing the IFileMatcher interface that is can be used to extend/tune the search criterion</param>
        </member>
        <member name="M:Jam.Shell.FileSearcher.#ctor(Jam.Shell.SearchOptions,System.String[],System.ComponentModel.BackgroundWorker,Jam.Shell.IFileMatcher,System.Byte)">
            <summary>
            Construct a FileSearcher object.
            Registers itself to the DoWork event of the BackgroundWorker passed and keeps
            a reference to asynchronously cancel the search. The FileSearcher object will
            roughly estimate the percentage until the search finishes if the recursive flag
            is set in the SearchOptions 
            </summary>
            <param name="p_SearchOptions"></param>
            <param name="p_SearchPaths"></param>
            <param name="p_SearchWorker">The BackgroundWorker object.</param>
            <param name="p_FileMatcher">An object implementing the IFileMatcher interface that is can be used to extend/tune the search criterion</param>
            <param name="p_DirectoryEstimationDepth">The depth the directory searchpath is scanned for subfolders (values 2 or 3 are good), to give an estimation of the time needed to finish the search. If this parameter is 0 no estimation is performed.</param>
        </member>
        <member name="M:Jam.Shell.FileSearcher.Start">
            <summary>
            Starts the search
            </summary>
        </member>
        <member name="M:Jam.Shell.FileSearcher.Cancel">
            <summary>
            Asynchronously cancels the search
            </summary>
        </member>
        <member name="M:Jam.Shell.FileSearcher.EstimationCountDirectories(System.String[],System.Int32)">
            <summary>
            Counts subdirectories in folders. Level should not be greater than 3.
            </summary>
            <param name="p_Paths">The folders to estimate.</param>
            <param name="p_Level">The depth to count directories.</param>
            <returns>The number of subdirs in the levels below (no deeper than level).</returns>
        </member>
        <member name="M:Jam.Shell.FileSearcher.DoSearchWork(System.Object,System.ComponentModel.DoWorkEventArgs)">
            <summary>
            This method starts to search the directory given in the searchpath.
            precondition: m_SearchPath is set to a valid and existing path!
            </summary>
        </member>
        <member name="E:Jam.Shell.FileSearcher.SearchExceptionOccurred">
            <summary>
            This event is fired everytime an exception occurs when a single item is processed during the search 
            process. It is possible to handle or ignore the exception and mark this in the <see cref="T:Jam.Shell.SearchExceptionEventArgs"/>
            If e.g. the exception if permanent and is left unhandled the search will cancel, a <see cref="E:Jam.Shell.FileList.SearchCompleted"/> event
            will immediately follow which passes the Exception in the event args again, so it can be finally handled.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileSearcher.OnSearchExceptionOccurred(Jam.Shell.SearchExceptionEventArgs)">
            <summary>
            Fires an event if an exception during a search occurred.
            </summary>
            <param name="p_EventArgs"></param>
        </member>
        <member name="P:Jam.Shell.FileSearcher.ShowErrors">
            <summary>
            Set this to true if errors should be shown during the search within a messagebox.
            </summary>
        </member>
        <member name="T:Jam.Shell.FileList">
            <summary>
            Use the Filelist if you want to search for files or folders within a specific path.
            You can also display several files residing in different folders, and allow the user to 
            use drag&amp;drop operations to manage the files.
            <para>&#160;</para>
            Items that are contained in the list are of type <see cref="T:Jam.Shell.FileListItem"/>. This applies to the <see cref="P:Jam.Shell.CustomFileList`1.Items"/> and the <see cref="P:Jam.Shell.CustomFileList`1.SelectedItems"/> properties.
            </summary>
            <remarks>
            To get the path of an item in the <c>FileList</c>, use the <see cref="P:Jam.Shell.FileListItem.Path"/> property.
            </remarks>
        </member>
        <member name="F:Jam.Shell.FileList.m_SearchOptions">
            <summary>
            Keeps a reference for the search options, that is used by the FileSearcher object
            </summary>
        </member>
        <member name="F:Jam.Shell.FileList.m_FileSearcher">
            <summary>
            The FileSearch reference encapsulates the searching capabilities of the component
            </summary>
        </member>
        <member name="F:Jam.Shell.FileList.m_InFolderColumnIndex">
            <summary>
            The index for the "In Folder" column.
            </summary>
        </member>
        <member name="F:Jam.Shell.FileList.m_CustomHeaderMenuCreated">
            <summary>
            We need a custom header menu because of the custom index of the folder path column.
            this flag indicates whether it was created.
            </summary>
        </member>
        <member name="F:Jam.Shell.FileList.m_Desktop">
            <summary>
            save the reference to the com-object; bug #5714
            </summary>
        </member>
        <member name="P:Jam.Shell.FileList.ViewState">
            <summary>
            Gets or sets how items are displayed in the ShellListView control.
            </summary>
        </member>
        <member name="P:Jam.Shell.FileList.SearchOptions">
            <summary>
            The SearchOptions are used to set different options before calling
            the <see cref="M:Jam.Shell.FileList.Search(System.String)"/> method.
            <seealso cref="P:Jam.Shell.FileList.SearchOptions"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.FileList.TotalFileCount">
            <summary>
            This property returns the number of files in the FileList. If the FileList contains folders the files in those particular folders are also counted.
            </summary>
        </member>
        <member name="P:Jam.Shell.FileList.TotalFileSize">
            <summary>
            This property returns the size of all files in the FileList. If the FileList contains folders, the foldersize is determined recursively.
            </summary>
        </member>
        <member name="P:Jam.Shell.FileList.InFolderColumnIndex">
            <summary>
            The column index of the column containing the parent folder of a file.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileList.GetSelectedItemCollectionType">
            <summary>Gets the type of the selected item collection.</summary>
            <returns>The selected item collection type.</returns>
        </member>
        <member name="M:Jam.Shell.FileList.#ctor">
            <summary>
            Constructs a FileList object
            </summary>
        </member>
        <member name="M:Jam.Shell.FileList.Dispose(System.Boolean)">
            <summary>
            Remove reference to ShellControlConnector and implicitely remove this control from the list of known controls of the ShellControlConnector
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.</param>
        </member>
        <member name="M:Jam.Shell.FileList.Compare(System.Object,System.Object)">
            <summary>
            Compares two <see cref="T:Jam.Shell.FileListItem"/> objects by their ItemIdList with each other. 
            </summary>
            <param name="x">First FileListItem</param>
            <param name="y">Second FileListItem, which will be compared with first one.</param>
            <returns>
            Returns a value less than 0 if x is less than y, 
            0 if x is equal to y and a value greater
            than 0 if x is greater than y.
            </returns>
            <remarks>User added columns will be compared by the Text property of the ShellListItems.</remarks>
        </member>
        <member name="M:Jam.Shell.FileList.Add(System.String,System.Boolean)">
            <summary>
            Adds a path to the filelist. The item is initialized with state given in checked parameter and 
            it is assumed, that it is no duplicate entry.
            </summary>
            <param name="pPath">The path to add</param>
            <param name="pChecked">set this to true, if the item should be checked.</param>
            <returns>The item that was added</returns>
        </member>
        <member name="M:Jam.Shell.FileList.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)"/>.
            </summary>
            <param name="e">Contains the event data, <see cref="P:System.Windows.Forms.DrawListViewItemEventArgs.DrawDefault"/> is explicitly set to true</param>
        </member>
        <member name="M:Jam.Shell.FileList.Search(System.String)">
            <summary>
            Searches the path given in the parameter for patterns defined in the 
            <see cref="P:Jam.Shell.FileList.SearchOptions"/> property.
            </summary>
            <param name="pPath">The path in which to search for the pattern.</param>
            <exception cref="T:System.Exception">If no valid, existing p_Path is provided.</exception>
            <seealso cref="M:Jam.Shell.FileList.Search(System.String[],System.Boolean,System.Boolean)"/>
        </member>
        <member name="M:Jam.Shell.FileList.Search(System.String,System.Boolean)">
            <summary>
            Searches the path given in the parameter for patterns defined in the 
            <see cref="P:Jam.Shell.FileList.SearchOptions"/> property.
            </summary>
            <param name="pPath">The path in which to search for the pattern.</param>
            <param name="pEstimate">if true, the searcher tries to estimate percentage of search progress and sets a value in <see cref="T:Jam.Shell.SearchProgressChangedEventArgs"/>.</param>
            <exception cref="T:System.ArgumentException">If no valid, existing p_Path is provided.</exception>
            <seealso cref="M:Jam.Shell.FileList.Search(System.String[],System.Boolean,System.Boolean)"/>
        </member>
        <member name="M:Jam.Shell.FileList.Search(System.String[])">
            <summary>
            Searches the paths given in the parameter for patterns defined in the 
            <see cref="P:Jam.Shell.FileList.SearchOptions"/> property.
            </summary>
            <param name="pPaths">Array of paths in which to search for the pattern.</param>
            <exception cref="T:System.Exception">If any of the provided paths is not valid, or not existing.</exception>
            <seealso cref="M:Jam.Shell.FileList.Search(System.String[],System.Boolean,System.Boolean)"/>
        </member>
        <member name="M:Jam.Shell.FileList.Search(System.String[],System.Boolean)">
            <summary>
            Searches the paths given in the parameter for patterns defined in the 
            <see cref="P:Jam.Shell.FileList.SearchOptions"/> property.
            </summary>
            <param name="pPaths">Array of paths in which to search for the pattern.</param>
            <param name="pEstimate">if true, the searcher tries to estimate percentage of search progress and sets a value in <see cref="T:Jam.Shell.SearchProgressChangedEventArgs"/>.</param>
            <exception cref="T:System.ArgumentException">If any of the provided paths is not valid, or not existing.</exception>
            <seealso cref="M:Jam.Shell.FileList.Search(System.String[],System.Boolean,System.Boolean)"/>
        </member>
        <member name="M:Jam.Shell.FileList.Search(System.String[],System.Boolean,System.Boolean)">
            <summary>
            Searches the paths given in the parameter for patterns defined in the 
            <see cref="P:Jam.Shell.FileList.SearchOptions"/> property.
            </summary>
            <remarks>The search itself is done in a background worker thread. With event <see cref="E:Jam.Shell.FileList.SearchFileMatches"/> you can further customize the search result.
             Information on Progress is passed via event <see cref="E:Jam.Shell.FileList.SearchProgressChanged"/>. 
            <para>&#160;</para>
            Exceptions that occur during the search are by default suppressed, but you can influence this with event <see cref="E:Jam.Shell.FileList.SearchExceptionOccurred"/>.
            </remarks>
            <param name="pPaths">Array of paths in which to search for the pattern.</param>
            <param name="pEstimate">if true, the searcher tries to estimate percentage of search progress and sets a value in <see cref="T:Jam.Shell.SearchProgressChangedEventArgs"/>.</param>
            <param name="pThrowExceptionOnInvalidPath">if set to true an exception is thrown if a path does not exist this often occurs with removable devices</param>
            <exception cref="T:System.ArgumentException">If any of the provided paths is not valid, or not existing.</exception>
        </member>
        <member name="M:Jam.Shell.FileList.FileSearcher_SearchExceptionOccurred(System.Object,Jam.Shell.SearchExceptionEventArgs)">
            <summary>
            Raises the SearchExceptionOccured event.
            </summary>
            <param name="pSender">the sender of the exception</param>
            <param name="pEventArgs">the event args with which to control the exception handling</param>
        </member>
        <member name="M:Jam.Shell.FileList.ShellChangeNotifier_Change(System.Object,Jam.Shell.ChangeNotificationEventArgs)">
            <summary>
            This method is called if a file change happens for the current search path and
            the property <see cref="P:Jam.Shell.JamBaseShellListView.AutomaticRefresh"/> is true. If so, the FileList is updated accordingly.
            </summary>
            <param name="pSender">The event sender</param>
            <param name="e">The ChangeNotification arguments</param>
        </member>
        <member name="M:Jam.Shell.FileList.SearchCancel">
            <summary>
            Call this method to cancel a pending search.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileList.TotalSizeOrCountRefreshed">
            <summary>
            The TotalFileSize/-Count have been refreshed.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileList.WorkerSearchProgressChanged(System.Object,System.ComponentModel.ProgressChangedEventArgs)">
            <summary>
            The progress of the Search Backgroundworker changed.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="arguments"></param>
        </member>
        <member name="M:Jam.Shell.FileList.WorkerSearchCompleted(System.Object,System.ComponentModel.RunWorkerCompletedEventArgs)">
            <summary>
            A search is complete, was cancelled or an exception was thrown.
            Anyhow the BackgroundWorker finished. An event is fired to notify the 
            user of the component as well.
            </summary>
            <param name="sender">BackgroundWorkerThread</param>
            <param name="arguments">Them Completion event arguments of the worker thread</param>
        </member>
        <member name="M:Jam.Shell.FileList.FileMatches(Jam.Shell.SearchOptions,System.String)">
            <summary>
            Override this method to implement/extend your own FileMatching mechanism.
            </summary>
            <example>
            <code>
            class MyFileList : Jam.Shell.FileList 
            {
                protected override bool FileMatches(SearchOptions p_SearchOptions, string filename)
                {
                    if (!base.FileMatches(p_SearchOptions, filename)) 
                    {
                        return false;
                    }
                    //your matching logic here; i.e. open the file, search for pattern...
                    return true;
                }
            }
            </code>
            </example>
            <param name="p_SearchOptions">The SearchOptions that where specified for the search run.</param>
            <param name="filename">Absolute filename of the item the search process is currently handling</param>
            <returns>true if the file matches the search criterion</returns>
        </member>
        <member name="M:Jam.Shell.FileList.Reset">
            <summary>
            Resets the SpecialFolder of the internal ShellBrowser. This is especially needed for Column or subitem initialization.
            </summary>
            <returns>True if successful.</returns>
        </member>
        <member name="M:Jam.Shell.FileList.InitColumns">
            <summary>
            Initializes the columns by reading the column headers from the users personal folder.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileList.ShowColumn(Jam.Shell.SHCOLUMNID)">
            <summary>
            Shows the column with the passed ShellColumnId.
            </summary>
            <param name="pShellColumnId">The <see cref="T:Jam.Shell.SHCOLUMNID" /> representing the column.</param>
            <returns>
            0 or more: the index of the added column.
            -1: column couldn't be inserted.
            </returns>
        </member>
        <member name="M:Jam.Shell.FileList.UpdateSubitemsAfterColumnGetsVisible(Jam.Shell.SHCOLUMNID,System.Int32)">
            <summary>
            Updates the subitems after a column gets visible.
            </summary>
            <param name="p_ColID">The SHColumnID of the changed column.</param>
            <param name="p_LocalIndex">Local index of the column.</param>
        </member>
        <member name="M:Jam.Shell.FileList.ClearColumns">
            <summary>
            Clears the current columns and the header context menu. Please use this method instead of ListView.Columns.Clear().
            </summary>
        </member>
        <member name="M:Jam.Shell.FileList.CompleteDetails(Jam.Shell.FileListItem)">
            <summary>
            Completes the details of an item, like image index, sub items etc.
            </summary>
            <param name="aItem">the item</param>
        </member>
        <member name="M:Jam.Shell.FileList.DisplayHeaderContextMenu(System.Object)">
            <summary>
            Handles the HeaderRightClick event.
            </summary>
            <param name="sender">The sender of the event.</param>
        </member>
        <member name="E:Jam.Shell.FileList.SizeOrCountRefreshed">
            <summary>
            This event occurs if the FileList.TotalFileCount or FileList.TotalFileSize were refreshed.
            </summary>
        </member>
        <member name="E:Jam.Shell.FileList.SearchFileMatches">
            <summary>
            Register to this event if you want to further investigate the files the component examines. 
            In the <see cref="T:Jam.Shell.FileMatchEventArgs"/> you have access to the Filename and can explicitly 
            specify whether the file matches, e.g. after you performed a pattern match within the data of the file.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileList.OnFileMatches(Jam.Shell.FileMatchEventArgs)">
            <summary>
            Fires an event that a file matches the default search criteria if the user registers to the SearchFileMatches event
            the user can further decide whether the file should match.
            </summary>
            <param name="p_EventArgs">The <see cref="T:Jam.Shell.FileMatchEventArgs"/>.</param>
        </member>
        <member name="E:Jam.Shell.FileList.SearchCompleted">
            <summary>
            This event is fired when a search operation is complete, has been cancelled, or an exception has been thrown.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileList.OnSearchCompleted(Jam.Shell.SearchCompletedEventArgs)">
            <summary>
            Fires an event if the Search has completed.
            </summary>
            <param name="p_EventArgs">The <see cref="T:Jam.Shell.SearchCompletedEventArgs"/>.</param>
        </member>
        <member name="E:Jam.Shell.FileList.SearchProgressChanged">
            <summary>
            This event is fired everytime the progress of the searcher changes, that is when new items are filled to the FileList.
            </summary>
        </member>
        <member name="M:Jam.Shell.FileList.OnSearchProgressChanged(Jam.Shell.SearchProgressChangedEventArgs)">
            <summary>
            Fires an event if the Search has completed.
            </summary>
            <param name="p_EventArgs">The <see cref="T:Jam.Shell.SearchProgressChangedEventArgs"/>.</param>
        </member>
        <member name="E:Jam.Shell.FileList.SearchExceptionOccurred">
            <summary>
            This event is fired everytime an exception occurs when a single item is processed during the search 
            process. It is possible to handle or ignore the exception and mark this in the <see cref="T:Jam.Shell.SearchExceptionEventArgs"/>
            If e.g. the exception is permanent and is left unhandled the search will cancel, a <see cref="E:Jam.Shell.FileList.SearchCompleted"/> event
            will immediately follow which passes the Exception in the event args again, so it can be finally handled.
            </summary>
        </member>
        <member name="T:Jam.Shell.FileMatchEventArgs">
            <summary>
            Event arguments for the FileMatchEvent
            </summary>
        </member>
        <member name="M:Jam.Shell.FileMatchEventArgs.#ctor(System.String)">
            <summary>
            The standard construct, given the full filepath as a parameter
            </summary>
            <param name="p_File">filepath+name</param>
        </member>
        <member name="P:Jam.Shell.FileMatchEventArgs.File">
            <summary>
            The absolute filename of the item that is currently diagnosed of matching the search
            criterion.
            </summary>
        </member>
        <member name="P:Jam.Shell.FileMatchEventArgs.FileMatchesSearchCriterion">
            <summary>
            Set this to false if the file does not match the search criterion anymore
            and shall not be added to the FileList
            </summary>
        </member>
        <member name="T:Jam.Shell.SearchCompletedEventArgs">
            <summary>
            The SearchCompletedEventArgs contains data for the <see cref="E:Jam.Shell.FileList.SearchCompleted"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.SearchCompletedEventArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.SearchCompletedEventArgs"/> class,
            the EventArgs are initialized as NOT cancelled and NO error.
            </summary>
        </member>
        <member name="M:Jam.Shell.SearchCompletedEventArgs.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.SearchCompletedEventArgs"/> class
            </summary>
            <param name="p_Cancelled">set this to true to indicate that the search operation was cancelled.</param>
        </member>
        <member name="M:Jam.Shell.SearchCompletedEventArgs.#ctor(System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.SearchCompletedEventArgs"/> class.
            </summary>
            <param name="p_Error">Pass the Exception that was thrown within the BackgroundWorker to hand it over to the user.</param>
        </member>
        <member name="P:Jam.Shell.SearchCompletedEventArgs.Cancelled">
            <summary>
            Returns true if the Search was cancelled.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchCompletedEventArgs.Error">
            <summary>
            Returns null if no Error occured, the Exception otherwise.
            </summary>
        </member>
        <member name="T:Jam.Shell.SearchProgressChangedEventArgs">
            <summary>
            The SearchProgressChangedEventArgs contains data for the <see cref="E:Jam.Shell.FileList.SearchCompleted"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.SearchProgressChangedEventArgs.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.SearchProgressChangedEventArgs"/> class.
            </summary>
            <param name="p_LastSeenFile">The file that was last seen while searching</param>
            <param name="p_CurrentFolder">The current folder that is being processed</param>
        </member>
        <member name="M:Jam.Shell.SearchProgressChangedEventArgs.#ctor(System.String,System.String,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.SearchProgressChangedEventArgs"/> class.
            </summary>
            <param name="p_LastSeenFile">The file that was last seen while searching</param>
            <param name="p_CurrentFolder">The current folder that is being processed</param>
            <param name="p_PercentageEstimated">The estimated percentage of the entire search</param>
        </member>
        <member name="P:Jam.Shell.SearchProgressChangedEventArgs.LastFileSeen">
            <summary>
            Returns the last filename that was seen by the background search 
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchProgressChangedEventArgs.CurrentFolder">
            <summary>
            Returns the current folder the background search is in
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchProgressChangedEventArgs.PercentageEstimated">
            <summary>
            Returns the estimated percentage of the search within the files. This is only
            a rough value especially for recursive searches.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchProgressChangedEventArgs.MatchCount">
            <summary>
            The number of files that matched since the last occurred SearchProgressChanged event.
            </summary>
        </member>
        <member name="T:Jam.Shell.SearchExceptionEventArgs">
            <summary>
            This class provides the event arguments that may be of concern 
            <see cref="E:Jam.Shell.FileList.SearchExceptionOccurred"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchExceptionEventArgs.Exception">
            <summary>
            The exception that occurred while searching.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchExceptionEventArgs.CurrentFile">
            <summary>
            Get the file that was being processed when the exception occurred (full path).
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchExceptionEventArgs.ExceptionHandled">
            <summary>
            Set this to true if the exception was handled.
            The flag is used for event chains, where more than one eventlistener is involved
            in exception handling.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchExceptionEventArgs.ExceptionPermanent">
            <summary>
            Set this to true if you decided that the exception is of permanent nature and you want
            the search thread to cancel. 
            </summary>
        </member>
        <member name="M:Jam.Shell.SearchExceptionEventArgs.#ctor(System.Exception,System.String)">
            <summary>
            Default constructor.
            </summary>
            <param name="p_Exception">The exception that is to be handled.</param>
            <param name="p_CurrentFileFullPath">The fully qualified filename with which the exception occurred.</param>
        </member>
        <member name="T:Jam.Shell.AddFileItemEventArgs">
            <summary>
            The AddItemEventArgs contains data for the <see cref="E:Jam.Shell.CustomFileList`1.AddItem"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.AddFileItemEventArgs.#ctor(Jam.Shell.CustomFileListItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.AddItemEventArgs"/> class.
            </summary>
            <param name="aItem"><see cref="T:Jam.Shell.CustomFileListItem"/> object, which contains information about the item, which should be added to the <see cref="T:Jam.Shell.FileList"/>-view.</param>
        </member>
        <member name="T:Jam.Shell.RemoveFileItemEventArgs">
            <summary>
            The RemoveFileItemEventArgs contains data for the <see cref="E:Jam.Shell.CustomFileList`1.RemoveItem"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.RemoveFileItemEventArgs.#ctor(Jam.Shell.CustomFileListItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.RemoveFileItemEventArgs"/> class.
            </summary>
            <param name="pItem"><see cref="T:Jam.Shell.CustomFileListItem"/> object, which contains information about the item, which should be removed from the <see cref="T:Jam.Shell.CustomFileList`1"/>.</param>
        </member>
        <member name="T:Jam.Shell.DateTimeInterval">
            <summary>
            A class representing datetime intervals.
            The implementation supports closed intervals with an upper and lower a bound,
            as well as open intervals describing a point in time to search after or before it.
            </summary>
        </member>
        <member name="M:Jam.Shell.DateTimeInterval.#ctor(System.DateTime,System.DateTime)">
            <summary>
            Instantiates a new DateInterval with both bounds specified.
            </summary>
            <param name="p_MinTime">Left bound of the interval.</param>
            <param name="p_MaxTime">Right bound of the interval.</param>
            <exception cref="T:System.ArgumentException">Throws ArgumentException if p_MinTime is after p_MaxTime</exception>
        </member>
        <member name="M:Jam.Shell.DateTimeInterval.#ctor(System.DateTime,System.Boolean)">
            <summary>
            Instantiates an open DateInterval.
            If 'after' is true, <see cref="M:Jam.Shell.DateTimeInterval.IsInInterval(System.DateTime)"/> returns true for all
            all time points after the specified p_Time.
            If 'after' is false, <see cref="M:Jam.Shell.DateTimeInterval.IsInInterval(System.DateTime)"/> returns true for all
            all time points that are before the p_Time specified.
            </summary>
            <param name="p_Time">A point in time.</param>
            <param name="after">if true, only set the left bound of the interval. Otherwise only the right bound of it.</param>
        </member>
        <member name="M:Jam.Shell.DateTimeInterval.SetInterval(System.Nullable{System.DateTime},System.Nullable{System.DateTime})">
            <summary>
            p_MinTime and p_MaxTime cannot be set both to null.
            p_MinTime must be a time point before p_MaxTime.
            </summary>
            <param name="p_MinTime">Left bound of the interval.</param>
            <param name="p_MaxTime">Right bound of the interval.</param>
            <exception cref="T:System.ArgumentException">Throws ArgumentException if p_MinTime is after p_MaxTime</exception>
        </member>
        <member name="M:Jam.Shell.DateTimeInterval.IsInInterval(System.DateTime)">
            <summary>
            Checks whether the time given as a parameter is within the 
            interval specified by this DateInterval instance.
            </summary>
            <param name="p_DateTime">the datetime to check</param>
            <returns>true, if p_DateTime is after the minimum time
            and p_DateTime is before the maximum time.
            If the minimum was not specified (has been set to null) 
            it returns true if p_DateTime is before the maximum time set.
            If the maximum was not specified it returns true if p_DateTime is after the minimum time set.
            </returns>
        </member>
        <member name="P:Jam.Shell.DateTimeInterval.Min">
            <summary>
            The left bound of the DateInterval
            To keep the bounds consistent if Min is set to a time point after Max, the bounds are switched.
            </summary>
        </member>
        <member name="P:Jam.Shell.DateTimeInterval.Max">
            <summary>
            The right bound of the DateInterval.
            To keep the bounds consistent if Max is set to a time point before Min, the bounds are switched.
            </summary>
        </member>
        <member name="T:Jam.Shell.SearchOptions">
            <summary>
            The SearchOptions class defines different options
            </summary>
        </member>
        <member name="F:Jam.Shell.SearchOptions.m_Filter">
            <summary>
            The Filepattern filter
            </summary>
        </member>
        <member name="F:Jam.Shell.SearchOptions.m_FilterRegex">
            <summary>
            The regular expression that is created when the <see cref="P:Jam.Shell.SearchOptions.Filter"/> is set.
            </summary>
        </member>
        <member name="F:Jam.Shell.SearchOptions.m_FilterIgnoreCase">
            <summary>
            Whether to filter out files case sensitive or not.<see cref="P:Jam.Shell.SearchOptions.FilterIgnoreCase"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.MaxFileSize">
            <summary>
            The maximum filesize for inclusion in the search result.
            </summary>        
        </member>
        <member name="P:Jam.Shell.SearchOptions.MinFileSize">
            <summary>
            The minimum filesize for inclusion in the search result.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.RecursiveSearch">
            <summary>
            Set this to true if the folder shall be searched recursively.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.FilterList">
            <summary>
            Get an array of the filter strings defined by setting the <see cref="P:Jam.Shell.SearchOptions.Filter"/> property.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.CreationInterval">
            <summary>
            Set an interval for the creation attribute of files to be included in the result set.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.AccessInterval">
            <summary>
            Set an interval for the last access time of files to be included in the result set.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.LastWriteInterval">
            <summary>
            Set an interval for the last write access of files to be included in the result set.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.FilesOnly">
            <summary>
            Set this to true if you want to only include files in your search.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.Filter">
            <summary>
            You can use a single pattern, e.g. '*.doc' or concatenate several patterns using semicolons to separate them, e.g. '*.exe;*.com'.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.FilterRegex">
            <summary>
            Set the FilterRegex property to match against a regular expression.
            This property is also set if the <see cref="P:Jam.Shell.SearchOptions.Filter"/> property is modified.
            If null the filter matches against everything.
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.RegexPattern">
            <summary>
            Attribute to set the FilterRegex in property editor. 
            </summary>
        </member>
        <member name="P:Jam.Shell.SearchOptions.FilterIgnoreCase">
            <summary>
            Per default this property is true, if the <see cref="P:Jam.Shell.SearchOptions.Filter"/> property is set to
            a wildcard, the files are filtered case-insensitive. If this property is false,
            the files returned are case sensitive, e.g. setting Filter to "*.png" will not
            return any files with extensions like ".PNG".
            </summary>
            <seealso cref="P:Jam.Shell.SearchOptions.Filter"/>
        </member>
        <member name="P:Jam.Shell.SearchOptions.IncludeHidden">
            <summary>
            If this is set to true, the search will include hidden files and folders
            </summary>
        </member>
        <member name="M:Jam.Shell.SearchOptions.#ctor">
            <summary>
            Instantiates a SearchOptions object
            </summary>
        </member>
        <member name="M:Jam.Shell.SearchOptions.#ctor(Jam.Shell.SearchOptions)">
            <summary>
            Copy constructor
            </summary>
            <param name="other">The SearchOptions to assign from.</param>
        </member>
        <member name="M:Jam.Shell.SearchOptions.Assign(Jam.Shell.SearchOptions)">
            <summary>
            Assigns the SearchOptions from the object given as the "other" parameter.
            </summary>
            <param name="other">The other SearchOptions to get the parameters from</param>
        </member>
        <member name="M:Jam.Shell.SearchOptions.FilterMatches(System.String)">
            <summary>
            Check whether the given object name matches the the filters set in the 
            <see cref="P:Jam.Shell.SearchOptions.Filter"/> property.
            </summary>
            <param name="p_ObjectName">The string to check for a match.</param>
            <returns>true if the filter matches.</returns>
        </member>
        <member name="T:Jam.Shell.JamPathExistsWorkItem">
            <summary>
            WorkItem that checks if the fullpath of a given item exists. If not, the item is removed from the Listview.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamPathExistsWorkItem.#ctor(Jam.Shell.ShellListBaseItem,Jam.Shell.JamBaseShellListView,System.Int32)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.JamPathExistsWorkItem"/> class.
            </summary>
            <param name="pItem">The item whose fullpath should be checked.</param>
            <param name="pListView">The ListView the item belongs to.</param>
            <param name="pTag">The tag.</param>
        </member>
        <member name="M:Jam.Shell.JamPathExistsWorkItem.DoWork">
            <summary>
            This method is called from <see cref="M:Jam.Shell.BasicWorkItem.HandleWorkItem" /> when the work item is processed.
            It checks whether the fullpath still exists and if not, removed the item from the ListView.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellHistoryToolStrip">
            <summary>
            The ShellHistoryToolstrip menu provides a convenient way to navigate just like you would do using the explorer.
            Simply drop the ShellHistoryToolStrip on a ToolStrip container and connect it to a <see cref="P:Jam.Shell.ShellHistoryToolStrip.ShellControlConnector"/>, off you go!
            Customize your forward and back button in the properties editor like you would do with any other button in your project.
            You can easily add more ToolStripItems to the menu if you desire.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellHistoryToolStrip.m_ShellBrowser">
            <summary>
            A <see cref="T:Jam.Shell.ShellBrowser"/> instance that is used to navigate through the files.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellHistoryToolStrip.m_ShellControlConnector">
            <summary>
            this variable holds a reference to an attached ShellControlConnector which is
            the mediator between different ShellBrowser components and keeps the views in sync
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellHistoryToolStrip.m_MoveHistoryBack">
            <summary>
            The back button.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellHistoryToolStrip.m_MoveHistoryForward">
            <summary>
            The forward button.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellHistoryToolStrip.m_HistoryMaxLength">
            <summary>
            The default maximum length of the displayed history list as ToolStripItems in 
            the History Splitbuttons.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolStrip.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolStrip.ShellControlConnector">
            <summary>
            Connects this control to a ShellControlConnector component, which allows to synchronize several shell controls.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolStrip.HistoryMaxLength">
            <summary>
            Set the maximum length of the displayed history list.
            This List is obtained from the registered <see cref="P:Jam.Shell.ShellHistoryToolStrip.ShellControlConnector"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolStrip.HistoryBackButton">
            <summary>
            This property allows you to access the forward button of the ShellHistoryToolStrip, 
            it may be customized as needed.
            However its dropdown items change each time a FolderChanged event occurs in the
            <see cref="P:Jam.Shell.ShellHistoryToolStrip.ShellControlConnector"/> this component is connected to.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolStrip.HistoryForwardButton">
            <summary>
            This property allows you to access the forward button of the ShellHistoryToolStrip, it may be customized as needed.
            However its dropdown items change each time a FolderChanged event occurs in the
            <see cref="P:Jam.Shell.ShellHistoryToolStrip.ShellControlConnector"/> this component is connected to.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.#ctor">
            <summary>
            Default constructor of the ShellHistory class
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellHistoryToolStrip.m_HandleEventMoveHistoryClick">
            <summary>
            The click Eventhandler is kept in order to unregister it later.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellHistoryToolStrip.m_HandleEventDropDownOpening">
            <summary>
            The event handles the drop down opening which is used to distinguish between a
            click on the (e.g. back) button or an opening of the drop down menu
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.RegisterButtonEventHandler(System.Windows.Forms.ToolStripSplitButton)">
            <summary>
            Registers to the DropDownOpening and the Click event of the button given.
            </summary>
            <param name="p_ToolStripSplitButton">The button.</param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.UnregisterButtonEventHandler(System.Windows.Forms.ToolStripSplitButton)">
            <summary>
            Unregisters from the DropDownOpening and the Click event of the button given.
            </summary>
            <param name="p_ToolStripSplitButton">The button.</param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.FolderChanged(System.Object,System.EventArgs)">
            <summary>
            This method gets called on the FolderChanged event of the ShellControlConnector 
            </summary>
            <param name="p_Sender">The sender of the event</param>
            <param name="p_EventArgs">Event arguments</param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.UpdateHistoryDropDown">
            <summary>
            This method updates the drop down lists of the history buttons.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellHistoryToolStrip.m_DropDownIsOpening">
            <summary>
            internal flag - true if the dropdown menu is currently opening
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.MoveHistory_DropDownOpening(System.Object,System.EventArgs)">
            <summary>
            Sets a flag in the component, that the drop down is opened, an no
            simple "click" is performed. This flag will be reset in the Click EventHandler
            <see cref="M:Jam.Shell.ShellHistoryToolStrip.MoveHistory_Click(System.Object,System.EventArgs)"/>.
            </summary>
            <param name="sender">Sender</param>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            If this method gets called from the ShellControlConnector, the history drop down combobox
            is being updated to reflect the new folder history.
            </summary>
            <param name="p_ItemIdList">The p_ItemIdList of the FolderChanged</param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.Refresh(Jam.Shell.RefreshLevel)">
            <summary>
            IShellControl interface implementation, empty for the ShellHistoryToolStrip. Calling this
            method has not effect.
            </summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>
            IShellControl interface implementation, empty for the ShellHistoryToolStrip. Calling this
            method has not effect.
            </summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should
            be refreshed. This value can be null.</param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.FullRefresh">
            <summary>
            IShellControl interface implementation, empty for the ShellHistoryToolStrip.
            Calling this method has not effect.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.SmartRefresh">
            <summary>
            IShellControl interface implementation, empty for the ShellHistoryToolStrip.
            Calling this method has not effect.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            IShellControl interface implementation, empty for the ShellHistoryToolStrip.
            Calling this method has not effect.
            </summary>
            <param name="p_ItemIdList">an itemidlist</param>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.GoUp">
            <summary>
            IShellControl interface implementation, empty for the ShellHistoryToolStrip.
            Calling this method has not effect.
            </summary>
            <returns>Always returns false in the current implementation.</returns>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellHistoryToolStrip.EndInit">
            <summary>
            Signals the object that initialization is complete.
            
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellHistoryToolStrip.Initialized">
            <summary>
            Occurs if the designer generated code has finished executing
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellHistoryToolStrip.IsInitialized">
            <summary>
            Returns true if the control has been initialized (the designer generated code was executed)
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellSearchEdit">
            <summary>
              A <c>SearchEdit</c> is a search box similar to the Windows Search in 
              the upper right corner of the Windows Explorer and provides a search 
              for files and folders.
            </summary>
            <remarks>
              The search itself is done by Windows and supports the 
              <see href="https://msdn.microsoft.com/de-de/library/windows/desktop/aa965711(v=vs.85).aspx">Advanced Query Syntax</see>. 
              The matching results are mapped to a virtual folder called "search folder".
              The property <see cref="P:Jam.Shell.ShellSearchEdit.SearchFolder"/> contains an <c>ItemIdList</c>
              to this folder when the search has finished. If the property
              <see cref="P:Jam.Shell.ShellSearchEdit.ShellControlConnector"/> is assigned this <c>ShellControlConnector</c> will be
              informed automatically when the search has finished. The
              <see cref="P:Jam.Shell.ShellSearchEdit.QuickSearch"/> mode is used per default to provide an
              automatically search start after the search expression has changed.
              Please note that a <c>SearchEdit</c> is only compatible with
              Windows 7 and later. The search indexing service must not be disabled.
            </remarks>
            <seealso cref="T:Jam.Shell.SearchFolder"/>
        </member>
        <member name="M:Jam.Shell.ShellSearchEdit.#ctor">
            <summary>
            Default constructor of the SearchEdit class.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSearchEdit.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the System.Windows.Forms.KeyUp event.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Jam.Shell.ShellSearchEdit.OnTextChanged(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.TextChanged event.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Jam.Shell.ShellSearchEdit.OnHandleCreated(System.EventArgs)">
            <summary>
            This event is triggered after the handle of the control was created.
            </summary>
            <param name="e">the event arguments when this Event occurs</param>
        </member>
        <member name="M:Jam.Shell.ShellSearchEdit.OnFontChanged(System.EventArgs)">
            <summary>
            Raises the System.Windows.Forms.FontChanged event.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Jam.Shell.ShellSearchEdit.GetMagnifyingGlassSymbol">
            <summary>
            Gets the magnifier icon.
            </summary>
            <returns>The font icon.</returns>
        </member>
        <member name="M:Jam.Shell.ShellSearchEdit.GetRevealSymbol">
            <summary>
            Gets the reveal icon.
            </summary>
            <returns>The reveal font icon.</returns>
        </member>
        <member name="M:Jam.Shell.ShellSearchEdit.Clear">
            <summary>
            Clears the search query.
            </summary>
            <seealso cref="E:Jam.Shell.ShellSearchEdit.SearchFolderDestroyed"/>
        </member>
        <member name="M:Jam.Shell.ShellSearchEdit.Search(System.String)">
            <summary>
              Starts the search in the current folder.
            </summary>
            <param name="pQuery">
              The search expression. <see href="https://msdn.microsoft.com/de-de/library/windows/desktop/aa965711(v=vs.85).aspx">Advanced Query Syntax</see>
              is supported. If empty nothing will be searched.
            </param>
            <remarks>
              <example>
                The following example shows how to search for all .exe files in the
                current folder and subfolders:
                <code>
                  Search('*.exe');
                </code>
              </example>
              <example>
                The following example shows how to search for all files greater than
                1 GB in the current folder and subfolders:
                <code>
                  Search('System.Size:>1GB');
                </code>
              </example>
              <example>
                The following example shows how to search for all pictures in the
                current folder and subfolders:
                <code>
                  Search('System.Kind:=picture');
                </code>
              </example>
            </remarks>
            <seealso cref="P:Jam.Shell.ShellSearchEdit.SearchFolder"/>
            <seealso cref="P:Jam.Shell.ShellSearchEdit.CurrentFolder"/>
            <seealso cref="T:Jam.Shell.SearchFolder"/>
        </member>
        <member name="M:Jam.Shell.ShellSearchEdit.Refresh(Jam.Shell.RefreshLevel)">
            <summary>
            This method indicates that the control should perform a refresh of its contents.
            </summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellSearchEdit.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>
            This method indicates that the control should perform a refresh of its contents.
            </summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should be refreshed. This value can be null.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellSearchEdit.FullRefresh">
            <summary>
            Triggers a full refresh for all connected controls.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSearchEdit.SmartRefresh">
            <summary>
            Triggers a smart refresh for all connected controls.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSearchEdit.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Changes the displayed folder in all connected controls.
            </summary>
            <param name="p_ItemIdList">Contains the information of the new path.</param>
        </member>
        <member name="M:Jam.Shell.ShellSearchEdit.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            Changes the displayed file in all connected controls.
            </summary>
            <param name="p_ItemIdList">An ItemIdList</param>
        </member>
        <member name="M:Jam.Shell.ShellSearchEdit.GoUp">
            <summary>
            Move in all connected controls from the current to the parent folder.
            </summary>
            <returns>Returns <c>True</c> if the change of the folder was successfull or <c>False</c> otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellSearchEdit.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSearchEdit.EndInit">
            <summary>
            Signals the object that initialization is complete.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSearchEdit.Initialized">
            <summary>
            Occurs when initialization of the component is completed.
            </summary>
            <seealso cref="P:Jam.Shell.ShellSearchEdit.IsInitialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="P:Jam.Shell.ShellSearchEdit.CurrentFolder">
            <summary>
            Gets the current folder where the search takes place.
            </summary>
            <seealso cref="P:Jam.Shell.ShellSearchEdit.SearchFolder"/> 
        </member>
        <member name="P:Jam.Shell.ShellSearchEdit.SearchFolder">
            <summary>
            Gets the virtual "search folder" where the search results are displayed.
            </summary>
            <seealso cref="E:Jam.Shell.ShellSearchEdit.SearchFolderCreated"/>
            <seealso cref="E:Jam.Shell.ShellSearchEdit.SearchFolderDestroyed"/>
            <seealso cref="P:Jam.Shell.ShellSearchEdit.CurrentFolder"/> 
        </member>
        <member name="E:Jam.Shell.ShellSearchEdit.SearchFolderCreated">
            <summary>
            Occurs when the search folder has been created.
            </summary>
            <remarks>
            This event occurs right before a search is done by Windows.
            </remarks>
            <seealso cref="E:Jam.Shell.ShellSearchEdit.SearchFolderDestroyed"/>
        </member>
        <member name="E:Jam.Shell.ShellSearchEdit.SearchFolderDestroyed">
            <summary>
              Occurs after the search folder has been destroyed.
            </summary>
            <remarks>
              This event usually occurs when the reveal button was hit to clear the
              search query.
            </remarks>
            <seealso cref="E:Jam.Shell.ShellSearchEdit.SearchFolderCreated"/>
        </member>
        <member name="P:Jam.Shell.ShellSearchEdit.ShellControlConnector">
            <summary>
            Connects this control to a ShellControlConnector component, which allows to synchronize several shell controls.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSearchEdit.QuickSearch">
            <summary>
              Gets or sets the usage of the quick search mode.
            </summary>
            <remarks>
              If set to <c>True</c> the search is started automatically by changing
              the search expression. The <see cref="P:Jam.Shell.ShellSearchEdit.QuickSearchDelay"/> property
              specifies a delay that must expire before the search is started.
              If set to <c>False</c> the search is only started when the enter key
              is hit.
            </remarks>
            <seealso cref="P:Jam.Shell.ShellSearchEdit.QuickSearchDelay"/>
        </member>
        <member name="P:Jam.Shell.ShellSearchEdit.QuickSearchDelay">
            <summary>
              Amount of time in milliseconds to delay the search in the quick search
              mode. After this delay has expired the search is started.
            </summary>
            <seealso cref="P:Jam.Shell.ShellSearchEdit.QuickSearch"/>
        </member>
        <member name="P:Jam.Shell.ShellSearchEdit.IsInitialized">
            <summary>
            Gets a value indicating whether the component is initialized.
            </summary>
            <returns>true to indicate the component has completed initialization; otherwise, false.</returns>
            <seealso cref="E:Jam.Shell.ShellSearchEdit.Initialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="P:Jam.Shell.ShellSearchEdit.Version">
            <summary>
            The current version of the ShellBrowser components.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellSystemList">
            <summary>
            This component embeds the native windows explorer control into a .net component.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_ShellView">
            <summary>
            The shellview ole instance that is used by the control
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_FolderView">
            <summary>
            The folderview ole instance that is used by the control
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_Stream">
            <summary>
            Com-Interop stream
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_ContextMenuStrip">
            <summary>
            <see cref="P:Jam.Shell.ShellSystemList.ContextMenuStrip"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_WorkItemTag">
            <summary>
            This int is used to tag the work items for this control
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_CurrentlyRefreshing">
            <summary>
            Avoid nested calls of FullRefresh.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.listViewWindow">
            <summary>Wrapper for WndProc of the m_ListViewHandle</summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.shellViewWindow">
            <summary>Wrapper for WndProc of the m_ShellViewHandle</summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_ShellBrowser">
            <summary>Obligatory instance of a ShellBrowser, helps getting shell information</summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_ShellControlConnector">
            <summary>
            <see cref="P:Jam.Shell.ShellSystemList.ShellControlConnector"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_View">
            <summary>
            <see cref="P:Jam.Shell.ShellSystemList.View"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_ViewFolderFlags">
            <summary>
            <see cref="P:Jam.Shell.ShellSystemList.ViewFolderFlags"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_Items">
            <summary>
            <see cref="P:Jam.Shell.ShellSystemList.Items"/>
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellSystemList.CallDelegate">
            <summary>
            Simple delegate to call functions without a parameter via BeginInvoke
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.FolderIdList">
            <summary>
            Get or set the ItemIdList of the folder the component currently displays respectively
            the folder the component shall display.
            <seealso cref="P:Jam.Shell.ShellSystemList.Path"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Path">
            <summary>
            This property allows you to get or set the folder, which contents should be displayed. If you want to display a non file system folder, use the SpecialFolder property.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.SpecialFolder">
            <summary>
            SpecialFolder allows you to set or get the type of the currently listed folder. 
            You can use the ShellFolder constants here.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">A COM-Exception is thrown if the special folder selected 
            is not supported by the system the application is running on.</exception>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShellControlConnector">
            <summary>
            Connects this control to a ShellControlConnector component, which allows to synchronize several shell controls.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShowErrorMessages">
            <summary>
            If set to true the ShellList component will show a MessageBox if an error occured,
            otherwise the errors will only be logged to the Debug output.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Items">
            <summary>
            The List of items that the ole shell instance displays. One cannot remove several items
            from this datastructure in order to remove them from the listview.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.CreateParams">
            <summary>
            Gets the required creation parameters when the control handle is created.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.View">
            <summary>
            This property allows to set the different view modes of the
            windows explorer listview control. In comparison to the 
            <see cref="T:Jam.Shell.ShellListView"/> the ShellSystemList provides a greater 
            variety of possibilities.
            <seealso cref="E:Jam.Shell.ShellSystemList.ViewChanged"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Thumbnails">
            <summary>
            Obsolete - use <see cref="P:Jam.Shell.ShellSystemList.View"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ThumbnailSize">
            <summary>
            Gets or sets the size of the thumbnails. Only applied when <see cref="P:Jam.Shell.ShellSystemList.View"/> is set to FolderViewMode.Thumbnail
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ViewFolderFlags">
            <summary>
            Get or set the <see cref="T:Jam.Shell.FolderFlags"/> that specify how the ListView displays
            its content. The flags can be or'ed together, ie. "FolderFlags.NoColumnHeader | FolderFlags.AbbreviatedNames"
            in the designer this is specified by a comma-separation
            Not all of the Flags are supported currently
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.CheckMode">
            <summary>Gets or sets a value defining the current CheckMode. </summary>
            <value>A CheckMode value.</value>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.SelectParent">
            <summary>
            Selects the parent folder and calls a FullRefresh.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.SelectItem(System.Int32)">
            <summary>
            The item of the given index gets selected.
            </summary>
            <param name="index">The index of the item that should be selected. -2 selects all, -1 selects none.</param>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.SelCount">
            <summary>
            Gets the number of selected items.
            </summary>
            <value>
            The number of selected items or 0 if nothing is selected.
            </value>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Selected">
            <summary>
            Returns the currently selected item.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.SelectedFiles">
            <summary>
            Returns a list of full paths for the items selected in the view.
            Objects that do not have a filesystem path, are not within this list.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ItemCount">
            <summary>
            Gets the number of items the list currently holds.
            </summary>
            <value>
            The number of items or 0 if the current view is empty.
            </value>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.IsSelected(System.Int32)">
            <summary>
            Returns true if the item with the passed index is selected.
            </summary>
            <param name="pIndex">The index of the item.</param>
            <returns>true if the item with the passed index is selected, false otherwise.</returns>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.SelectedIndex">
            <summary>
            Get the selected index in the SystemShellView.
            This property is -1, if nothing is selected.
            Please use <see cref="P:Jam.Shell.ShellSystemList.SelectedItemIdList"/> if you want
            to determine if nothing at all is selected, since determining 
            the selected index involves a search via <see cref="M:Jam.Shell.ShellSystemList.IndexOf(Jam.Shell.ItemIdList)"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.SelectedPath">
            <summary>
            Get the full path of the selected item. Returns null if nothing is selected.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.SelectedItemIdLists">
            <summary>
            Get the item id lists selected in the SystemShellView,
            this list contains all selected items including special objects
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.SelectedItemIdList">
            <summary>
            Get the selected item id list in the SystemShellView.
            This property returns null, if nothing is selected.
            The setter of this property is protected since the exact ItemIdList that 
            is stored in the explorer ole instance is needed to select the
            item in the view. It is insufficient to construct a new one with
            new ItemIdList("fullpath"); and pass that as a value. The instantiated
            ole window will not select an item that way.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.GetItems(Jam.Shell.Com.SVGIO)">
            <summary>
            Get items from the shellview ole instance by calling its <see cref="M:Jam.Shell.Com.IShellView.GetItemObject(Jam.Shell.Com.SVGIO,System.Guid@,System.Object@)"/> method.
            Returns a dataobject that can be analyzed with e.g. ShellBrowser.GetFirstItemIDListFromDataObject(IDataObject).
            </summary>
            <param name="pAspectOfView">Which aspect of the shell view shall be returned</param>
            <returns>A dataobject with itemidlists or null if the queried aspect was empty.</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.IndexOf(System.String)">
            <summary>
            Searches for the index of the given path within the shell-list.
            This function has O(n) complexity, since it iterates through all items within the list
            </summary>
            <param name="pPath">The path that will be searched</param>
            <returns>The index of the item, -1 if the item is not in the list</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.IndexOf(Jam.Shell.ItemIdList)">
            <summary>
            Searches for the index of the ItemIdList within the shell-list.
            This function has O(n) complexity, since it iterates through all items within the list
            </summary>
            <param name="pItemIdList">The item id list that will be searched</param>
            <returns>The index of the item, -1 if the item is not in the list</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.GetShellItem(System.Int32)">
            <summary>
            Get the item at the specified index.
            </summary>
            <param name="index">The index of the item that should be retrieved</param>
            <returns>The item at the specified index. Null if the FolderView is not available or the index is invalid.</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.GetItem(System.Int32)">
            <summary>
            Get the ItemIdList at the index specified.
            </summary>
            <param name="index">The index of the item which ItemIdList should be retrieved.</param>
            <returns>Absolute ItemIdList to the item at the index, null if no item was found at the index.</returns>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.TextColor">
            <summary>
            Get or set the TextColor of the Control
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Transparent">
            <summary>
            Get or set the transparency value of the Control
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.BackColor">
            <summary>
            This property is not implemented for the ShellSystemList.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ForeColor">
            <summary>
            This property is not implemented for the ShellSystemList.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.BackgroundImage">
            <summary>
            This property is not implemented for the ShellSystemList.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.BackgroundImageLayout">
            <summary>
            This property is not implemented for the ShellSystemList.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Font">
            <summary>
            This property is not implemented for the ShellSystemList.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.BeforeFullRefresh">
            <summary>
            This event occurs right before the <see cref="M:Jam.Shell.ShellSystemList.FullRefresh"/> method is called.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.Populated">
            <summary>
            This event occurs if the listview gets populated.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.PathChanged">
            <summary>
            This event occurs if the path changed that the systemlistview displays.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.OperationPerformed">
            <summary>
            This event is fired after a <see cref="T:Jam.Shell.ShellSystemList"/> executed a shell operation like pasting.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.AddItem">
            <summary>
            This event occurs if a SystemListItem is to be added to the list.
            If the "CanAdd" property of the event args is set to false in an 
            event handler, the item will not be added to the listview.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.SelectionChanged">
            <summary>
            This event occurs, if a selection changed in the listview
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnBeforeFullRefresh">
            <summary>
            Issues the <see cref="E:Jam.Shell.ShellSystemList.BeforeFullRefresh"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnPopulated">
            <summary>
            Issues the <see cref="E:Jam.Shell.ShellSystemList.Populated"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnPathChanged">
            <summary>
            Issues the <see cref="E:Jam.Shell.ShellSystemList.PathChanged"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnAddItem(Jam.Shell.AddSystemListItemEventArgs)">
            <summary>
            Issues the <see cref="E:Jam.Shell.ShellSystemList.AddItem"/> event.
            </summary>
            <param name="eventArgs">The event arguments that will be passed as a paramteter</param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnSelectionChanged">
            <summary>
            Triggers the <see cref="E:Jam.Shell.ShellSystemList.SelectionChanged"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.InformPathChanged">
            <summary>
            Inform of the <see cref="P:Jam.Shell.ShellSystemList.ShellControlConnector"/> that the 
            path currently displayed has changed.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.CreateHandle">
            <summary>
            Creates a handle for the control
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.InvokeCommandOnSelected(System.String)">
            <summary>
            Invokes a <see cref="T:Jam.Shell.ShellCommand"/> on the selected item(s) of the ListView.
            </summary>
            <param name="command">The shell command to use on the selected item(s) of the view</param>
            <returns>True, if the command has been processed</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.CutSelectedFiles">
            <summary>
            All selected files' icons are shown ghosted.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.InvokeCommandOnFolder(System.String)">
            <summary>
            Use InvokeCommandOnFolder to execute a command of the context menu for the listed folder. 
            <seealso cref="M:Jam.Shell.ShellSystemList.InvokeCommandOnSelected(System.String)"/>
            </summary>
            <param name="command">The <see cref="T:Jam.Shell.ShellCommand"/> to use</param>
            <returns>true, if the command has successfully been processed</returns>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_EditHandle">
            <summary>
            This holds a handle to the editfield if the user is editing the 
            caption of a listview.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the System.Windows.Forms.KeyDown event.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Raises the System.Windows.Forms.KeyUp event.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.SelectAll">
            <summary>
            Select all items in the listview.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.DeselectAll">
            <summary>
            Deselect all items in the listview
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_EditLastSelectedFileAfterPopulation">
            <summary>
            A flag that indicates whether the last selected file should be set to edit mode; bug #7931
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.CreateDir(System.String,System.Boolean)">
            <summary>
            Creates a new directory in the current folder.
            </summary>
            <param name="p_Name">The name of the new folder. Do pass a single name only, not a full path.</param>
            <param name="p_EditMode">Pass <b>true</b>, if the user should be able to edit the name of the new folder after its creation.
            Pass <b>false</b> if the new folder should not be in edit mode.</param>
            <returns>True if the folder was successfully created, false if not.</returns>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Columns">
            <summary>
            Gets the <see cref="T:Jam.Shell.ShellViewColumns"/> the control currently displays.
            Not supported on Windows XP.
            </summary>
            <value>
            An <see cref="T:Jam.Shell.ShellViewColumns"/> collection containing the visible columns.
            </value>
            <example> 
            The following examples control the columns displayed in the <see cref="T:Jam.Shell.ShellSystemList"/>. 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_AddColumns" lang="C#" /> 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_SetColumns" lang="C#" /> 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_ShowColumns" lang="C#" /> 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_RemoveColumns" lang="C#" /> 
            </example>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.AllColumns">
            <summary>
            Gets a list of all columns that are supported in the current view. These depend on what the control currently displays.
            Not supported on Windows XP.
            </summary>
            <value>
            A <see cref="T:Jam.Shell.ShellViewColumns"/> collection containing all columns supported by the current view. 
            </value>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.IsColumnAvailable(Jam.Shell.SHCOLUMNID)">
            <summary>
            Determines whether the <see cref="T:Jam.Shell.SHCOLUMNID"/> passed is supported by the current view, no matter if it is currently displayed or not.
            Not supported on Windows XP.
            </summary>
            <param name="pColKey">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>true if the column is available, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnResize(System.EventArgs)">
            <summary>
            This method overrides OnResize to also notify the com object (shellview) if
            the component was resized.
            </summary>
            <param name="e">The event arguments</param>
        </member>
        <member name="T:Jam.Shell.ShellSystemList.ShellViewNativeWindow">
            <summary>
            This class hooks onto the message loop of the shellview to handle 
            different events like keyboard and mouse actions.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.ShellViewNativeWindow.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Extends the WndProc message handler of the NativeWindows base class. That way it 
            is possible to intercept window events.
            </summary>
            <param name="m"></param>
        </member>
        <member name="T:Jam.Shell.ShellSystemList.ListViewNativeWindow">
            <summary>
            This class hooks onto the message loop of the listview to handle 
            different events like keyboard and mouse actions.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.ListViewNativeWindow.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Extends the WndProc message handler of the NativeWindows base class. That way it 
            is possible to intercept the double click event.
            </summary>
            <param name="m"></param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)">
            <summary>
            In case the cursor keys are pressed, the message is forwarded to the shellview...s
            </summary>
            <param name="msg">the message that is passed</param>
            <param name="keyData">the key data</param>
            <returns><b>true</b> if the character was processed, <b>false</b> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnEnter(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.Enter"/> event.
            </summary>
            <param name="e">Contains event information.</param>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Focused">
            <summary>
            Gets a value indicating whether a control has input focus.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShellViewHandle">
            <summary>
            Access the handle of ShellView ole instance. This is useful to send messages
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ListViewHandle">
            <summary>
            Access the handle of ListView ole instance. This is useful to send messages
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Raises the System.Windows.Forms.Control.MouseDoubleClick event.
            This method is called from the ListViewNativeWindow.WndProc
            function.
            </summary>
            <param name="e">the mouse event args</param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Refresh(Jam.Shell.RefreshLevel)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should be refreshed. This value can be null.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.FullRefresh">
            <summary>
            This method only operates if the Handle has been allocated.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.DoPopulated(System.Object)">
            <summary>
            Needed to match the WaitCallBack signature. <seealso cref="M:Jam.Shell.ShellSystemList.FullRefresh"/>
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.SmartRefresh">
            <summary>
            Refreshes the control. Same as <see cref="M:Jam.Shell.ShellSystemList.FullRefresh"/> for the <see cref="T:Jam.Shell.ShellSystemList"/>.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellSystemList.m_LastSelectedFile">
            <summary>
            The last selected file; bug #7931
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Gets called if the active folder should change.
            If a <see cref="P:Jam.Shell.ShellSystemList.ShellControlConnector"/> is assigned to the control, it is notified.
            </summary>
            <param name="p_ItemIdList">The ItemIdList of the new folder.</param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            Gets called if the selected file should change.
            </summary>
            <param name="p_ItemIdList">The absolute ItemIdList of the newly selected file.</param>
            <seealso cref="M:Jam.Shell.ShellSystemList.FolderChanged(Jam.Shell.ItemIdList)"/>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.GoUp">
            <summary>
            Selects the parent folder in the <see cref="T:Jam.Shell.SystemListView"/>.
            </summary>
            <returns>true if the operation succeeded, false if not, ie. if the root of the shellnamespace was selected</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.BeginInit">
            <summary>
            Is called by the code generated with the designer.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated"/> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.EndInit">
            <summary>
            Is called by the designer generated code, triggers the <see cref="E:Jam.Shell.ShellSystemList.Initialized"/> event.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.Initialized">
            <summary>
            This event occurs after the Designer generated code has set all
            required properties.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.IsInitialized">
            <summary>
            Returns true if the ShellSystemList is property initialization has 
            been performed (after <see cref="M:Jam.Shell.ShellSystemList.EndInit"/> was called by the Designer generated code)
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.GetWindow(System.IntPtr@)">
            <summary>
            IOleWindow interface implementation (http://msdn.microsoft.com/en-us/library/ms680102(VS.85).aspx)
            </summary>
            <param name="phwnd">The window handle.</param>
            <returns>S_OK alwys in the current implementation</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.ContextSensitiveHelp(System.Boolean)">
            <summary>
            IOleWindow interface implementation (http://msdn.microsoft.com/en-us/library/ms680102(VS.85).aspx)
            </summary>
            <param name="fEnterMode">not used.</param>
            <returns>S_OK always in the current implementation</returns>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShowContextMenu">
            <summary>
            If set to true, the Windows Explorer context menu will be shown if a right click event occurs.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShowBackgroundContextMenu">
            <summary>
            If set to true, the Windows Explorer background context menu will be shown if a right click event occurs.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ContentFilter">
            <summary>
            Gets or sets an ShellItemFilter instance.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShowHidden">
            <summary>
            Is set to 'true', hidden elements will also be shown.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShowNetHood">
            <summary>
            If set to 'false', the Network Neighbourhood is not shown in the component,
            otherwise it is shown (the default value is true).
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShowFiles">
            <summary>
            If set to true, files will be shown in the control.
            If set to false, files will not be visible in the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShowFolders">
            <summary>
            The property ShowFolders allows you to include the folders in the <see cref="T:Jam.Shell.ShellListView"/>, similar to FrontPage 2000.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShowRecycleBin">
            <summary>
            If set to true, the recycle bin will be visible. If set to false, the recycle bin will be hidden
            (the default value is true).
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.FileSystemOnly">
            <summary>
            If FileSystemOnly is set to True, objects and virtual folders which do not have a file system path, will not be displayed.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.Filter">
            <summary>
            You can use a single pattern, e.g. '*.doc' or concatenate several patterns using semicolons to separate them, e.g. '*.exe;*.com'.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.FilterRegex">
            <summary>
            Set this property to a regular expression if you want to only show those files that match the regex.
            This value also changes  if the property <see cref="P:Jam.Shell.ShellSystemList.Filter"/> is set.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.ShowOptionChanged">
            <summary>
            This event is fired after an option changed. It happens if
            <see cref="P:Jam.Shell.ShellSystemList.ShowHidden"/>, <see cref="P:Jam.Shell.ShellSystemList.ShowNetHood"/>,
            <see cref="P:Jam.Shell.ShellSystemList.ShowRecycleBin"/>, <see cref="P:Jam.Shell.ShellSystemList.ShowFiles"/> or <see cref="P:Jam.Shell.ShellSystemList.ShowFolders"/> was changed.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.DefaultAction">
            <summary>
            This event occurs if the user triggers the default command,
            e.g. double clicked on an item.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.SetPath(System.String)">
            <summary>
            This method is called via BeginInvoke since the COM-Interface is not reentrant.
            <see cref="M:Jam.Shell.Com.ICommDlgBrowser.OnDefaultCommand(System.IntPtr)"/> 
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.SetSpecialFolder(Jam.Shell.ShellFolder)">
            <summary>
            This method is called via BeginInvoke since the COM-Interface is not reentrant.
            <see cref="M:Jam.Shell.Com.ICommDlgBrowser.OnDefaultCommand(System.IntPtr)"/> 
            </summary>
            <param name="specialFolder"></param>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ContextMenuStrip">
            <summary>
            The ContextMenuStrip is converted to an ordinary ContextMenu. This makes it 
            possible to merge your ContextMenuStrip with the Default ShellContextMenu provided
            by the system.
            The "Opening" and "Closing" events of the ContextMenuStrip will be raised if the 
            ContextMenu "Popup"/"Collapse" event occurs. For menu items only the "Click" event
            is available. All other events are not available.
            All ToolStripMenuItems are converted, and ToolStripSeparators are recognized.
            The ShortCut Keys defined in a ToolStripMenuItem are not converted.
            If you would like to have the ShortCut-Keys, leave this Property null, instead set
            the ContextMenu property to your menu explicitly.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ContextMenu">
            <summary>
            Gets or sets the shortcut menu that is associated with this control.
            If this property is set, the context menu is merged to the shell context menu that the control obtains from the explorer
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.RenameItemSelectedHandler(System.Object,System.EventArgs)">
            <summary>
            Handles the click on the "Rename" context menu item of the ShellContextMenu - fixes bug #1516
            </summary>
            <param name="sender">The sender object</param>
            <param name="e">The EventArgs</param>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.DisplayContextMenu(System.Drawing.Point)">
            <summary>
            Shows the shell context menu for the currently selected items
            </summary>
            <param name="p">The Position (relative to the control) at which the context menu should be shown.</param>
            <returns>If no items where selected this method returns null, otherwise the verb of the command 
            that was executed, e.g. "open", "properties", "copy", etc., <see cref="T:Jam.Shell.ShellCommand"/></returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnOperation(Jam.Shell.ShellOperation,Jam.Shell.PathCollection,System.String)">
            <summary>
            Fires an event if an operation was performed on the <see cref="T:Jam.Shell.ShellListView"/>.
            </summary>
            <param name="p_Operation">Contains the type of operation, which has been performed.</param>
            <param name="p_Paths">The p_Paths contains the file or folder names, that are affected.</param>
            <param name="p_Destination">Contains the destination, e.g. where files or folders have been pasted to.</param>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.ShellBrowser">
            <summary>
            Get the singleton <see cref="P:Jam.Shell.ShellSystemList.ShellBrowser"/> instance.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.FilterMatch(System.String)">
            <summary>
            Checks if the regular expresssion matches the object name passed.
            Immediately returns true if <see cref="P:Jam.Shell.ShellSystemList.FilterRegex"/> is null to improve performance if no filter e.g. '*' is needed.
            </summary>
            <param name="p_ObjectName">the object name</param>
            <returns>true, if the object name matches the filter property, false if it does not match</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.IncludeObjectInList(Jam.Shell.ItemIdList)">
            <summary>
            Returns true if the object referenced by the item id list should be shown
            in the list according to the show options and filters that are eventually set.
            </summary>
            <param name="p_ItemIdList">the item id list instance of the file that is to be filtered.</param>
            <returns>true, if the item id list is visible in the control according to the property values. false if it should not be visible.</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#ICommDlgBrowser#OnDefaultCommand(System.IntPtr)">
            <summary>
            This method is part of the <see cref="T:Jam.Shell.Com.ICommDlgBrowser"/> ole interface.
            It triggers the <see cref="E:Jam.Shell.ShellSystemList.DefaultAction"/> event before issuing the default
            command.
            <seealso cref="E:Jam.Shell.ShellSystemList.DefaultAction"/>
            </summary>
            <param name="ppshv"></param>
            <returns>S_OK if the command has been processed and no further action shall be performed by the com object,
            S_FALSE if the com object should handle the event</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#ICommDlgBrowser#IncludeObject(System.IntPtr,System.IntPtr)">
            <summary>
            This method is called if the com interface the ShellSystemList
            implements, queries whether an object should be included in the
            listview or not. Here the filter functionality is implemented that
            allows the user to omit certain filetypes / special files.
            </summary>
            <param name="ppshv">int pointer to the shellview, not used, since we hold a reference to the shellview already</param>
            <param name="pidl">int ptr to an item id list, this is used to create </param>
            <returns>0 if the item is added, 1 otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#ICommDlgBrowser#OnStateChange(System.IntPtr,System.UInt32)">
            <summary>
            ICommDlgBrowser implementation, http://msdn.microsoft.com/en-us/library/bb776141(VS.85).aspx
            Called after a state, identified by the uChange parameter, has changed in the IShellView interface.
            <b>Please do NOT call this method directly, it cannot be hidden from the public class interface unfortunately</b>
            </summary>
            <param name="ppshv"></param>
            <param name="uChange"></param>
            <returns>0</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#ICommDlgBrowser2#OnDefaultCommand(System.IntPtr)">
            <summary>
            <see cref="M:Jam.Shell.Com.ICommDlgBrowser.OnDefaultCommand(System.IntPtr)"/>
            </summary>
            <param name="ppshv"></param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#ICommDlgBrowser2#IncludeObject(System.IntPtr,System.IntPtr)">
            <summary>
            interface implementation of the ICommDlgBrowser.IncludeObject 
            <see cref="M:Jam.Shell.Com.ICommDlgBrowser.IncludeObject(System.IntPtr,System.IntPtr)"/>
            </summary>
            <param name="ppshv"></param>
            <param name="pidl"></param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#ICommDlgBrowser2#OnStateChange(System.IntPtr,System.UInt32)">
            <summary>
            interface implementation of the ICommDlgBrowser.OnStateChange
            <see cref="M:Jam.Shell.Com.ICommDlgBrowser.OnStateChange(System.IntPtr,System.UInt32)"/>
            </summary>
            <param name="ppshv"></param>
            <param name="uChange"></param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#ICommDlgBrowser2#Notify(System.IntPtr,System.UInt32)">
            <summary>
            Called by a Shell view to notify the common dialog box hosting it that an event has occurred.
            </summary>
            <param name="ppshv"></param>
            <param name="dwNotifyType"></param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="E:Jam.Shell.ShellSystemList.ViewChanged">
            <summary>
            This event happens if the <see cref="P:Jam.Shell.ShellSystemList.View"/> of the ImageList changed,
            either because it was set explicitly or if the user used the context menu to change
            to a different view.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.OnViewChanged">
            <summary>
            This method is called if the view of the ShellSystemList changed.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#ICommDlgBrowser2#GetDefaultMenuText(System.IntPtr,System.String,System.Int32)">
            <summary>
            Called by the Shell view to get the default shortcut menu text.
            </summary>
            <param name="ppshv"></param>
            <param name="pszText"></param>
            <param name="cchMax"></param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#ICommDlgBrowser2#GetViewFlags(System.UInt32@)">
            <summary>
            Called when the view must determine if special customization needs to be made for the common dialog browser.
            </summary>
            <param name="pdwFlags"></param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#IShellBrowser#InsertMenusSB(System.IntPtr,System.IntPtr@)">
            <summary>
            Inserts the menus SB.
            </summary>
            <param name="pIntPtrShared">The int PTR shared.</param>
            <param name="lpMenuWidths">The lp menu widths.</param>
            <returns>S_OK</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#IShellBrowser#GetViewStateStream(System.UInt32,System.Runtime.InteropServices.ComTypes.IStream@)">
            <summary>
            Signature ok.
            </summary>
            <param name="grfMode"></param>
            <param name="ppStrm"></param>
            <returns>S_OK</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#IShellBrowser#GetControlWindow(System.UInt32,System.IntPtr@)">
            <summary>
            Gets the control window.
            </summary>
            <param name="id">The id.</param>
            <param name="lpIntPtr">The lp int PTR.</param>
            <returns>S_OK</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#IShellBrowser#SendControlMsg(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Int64@)">
            <summary>
            Sends control messages to either the toolbar or the status bar in a Windows Explorer window.
            </summary>
            <param name="id"></param>
            <param name="uMsg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <param name="pret"></param>
            <returns>S_OK</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#IShellBrowser#QueryActiveShellView(Jam.Shell.Com.IShellView@)">
            <summary>
            Retrieves the currently active (displayed) Shell view object.
            </summary>
            <param name="ppshv"></param>
            <returns>S_OK</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#IShellBrowser#OnViewWindowActive(Jam.Shell.Com.IShellView)">
            <summary>
            Called when view window gets active.
            </summary>
            <param name="ppshv">The PPSHV.</param>
            <returns>S_OK</returns>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.Jam#Shell#Com#IShellBrowser#SetToolbarItems(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            Adds toolbar items to Windows Explorer's toolbar.
            </summary>
            <param name="lpButtons"></param>
            <param name="nButtons"></param>
            <param name="uFlags"></param>
            <returns>S_OK</returns>
        </member>
        <member name="P:Jam.Shell.ShellSystemList.InEditMode">
            <summary>
            Returns true if the user is currently editing the caption of a listview item.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemList.EditSelected">
            <summary>
            Sets the selected item in edit mode.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellSystemListItem">
            <summary>
            Represents an item of the Windows shell namespace in a <see cref="P:Jam.Shell.ShellSystemListItem.ShellSystemList"/>
            </summary>
            <seealso cref="P:Jam.Shell.ShellSystemListItem.ShellSystemList"/>
        </member>
        <member name="M:Jam.Shell.ShellSystemListItem.#ctor(Jam.Shell.ShellSystemList,Jam.Shell.ItemIdList,System.Int32)">
            <summary>
            Construct a new item.
            </summary>
            <param name="p_ShellSystemList">the <see cref="P:Jam.Shell.ShellSystemListItem.ShellSystemList"/> this item belongs to. Parameter may not be null</param>
            <param name="p_ItemIdList">The relative ItemIdList that specifies the item within FolderIdList of the parent ShellSystemList. Parameter may not be null</param>
            <param name="p_Index">The index within the list</param>
            <exception cref="T:System.ArgumentNullException">If one of the parameters that where passed is null</exception>
        </member>
        <member name="M:Jam.Shell.ShellSystemListItem.#ctor(Jam.Shell.ItemIdList)">
            <summary>
            Construct a new item.
            </summary>
            <param name="p_ItemIdList">The ItemIdList that specifies the item within the system. Parameter may not be null.</param>
        </member>
        <member name="P:Jam.Shell.ShellSystemListItem.ShellSystemList">
            <summary>
            Get the ShellSystemList view that this item is associated with.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemListItem.Rename(System.String)">
            <summary>
            Rename a file item
            </summary>
            <param name="p_NewName">The new name the item will be renamed to.</param>
            <returns>true if the item was renamed successfully</returns>
        </member>
        <member name="P:Jam.Shell.ShellSystemListItem.Index">
            <summary>
            Get the index within the list
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemListItem.Cut">
            <summary>
            Defines if the item's image should be shown ghosted or not.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemListItem.OverlayImage">
            <summary>
            The index of the overlay image in the system image list that should be shown in front of the normal icon.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemListItem.ItemIdList">
            <summary>
            Get the ItemIdList that specifies the item in the filesystem.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellSystemListItem.Caption">
            <summary>
            Get the caption of the ItemIdList this Item represents.
            <see cref="P:Jam.Shell.ItemIdList.Caption"/>. This does not neccessarily represent the
            full filename of the item, instead refer to the <see cref="P:Jam.Shell.BaseShellItem.FullPath"/> property 
            if this functionality is needed.
            </summary>
        </member>
        <member name="T:Jam.Shell.AddSystemListItemEventArgs">
            <summary>
            The AddSystemListItemEventArgs contains data for the <see cref="E:Jam.Shell.ShellSystemList.AddItem"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.AddSystemListItemEventArgs.#ctor(Jam.Shell.ShellSystemListItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.AddItemEventArgs"/> class.
            </summary>
            <param name="aItem"><see cref="T:Jam.Shell.ShellSystemListItem"/> object, which contains information about the item, 
            which should be added to the <see cref="T:Jam.Shell.ShellListView"/>/<see cref="T:Jam.Shell.FileList"/>.</param>
        </member>
        <member name="T:Jam.Shell.ShellSystemListItemCollection">
            <summary>
            Represents the collection of items in a <see cref="P:Jam.Shell.ShellSystemListItemCollection.ShellSystemList"/> control.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellSystemListItemCollection.#ctor(Jam.Shell.ShellSystemList)">
            <summary>
            Default constructor
            </summary>
            <param name="shellSystemList">The ShellSystemList to associate the ShellSystemListItemCollection with</param>
        </member>
        <member name="P:Jam.Shell.ShellSystemListItemCollection.ShellSystemList">
            <summary>
            Get the <see cref="P:Jam.Shell.ShellSystemListItemCollection.ShellSystemList"/> instance this collection is associated to.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNodeFlags.Cut">
            <summary>A binary constant representing if the node has been cut, i.e. should appear ghosted.</summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNodeFlags.IsFolder">
            <summary>A binary constant representing if the node is a folder.</summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNodeFlags.IsEnumerable">
            <summary>A binary constant representing if the node is enumerable.</summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNodeFlags.Sticky">
            <summary>A binary constant representing the sticky flag. This is a helping flag to recognize nodes, that should survive a RefreshNode.</summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNodeFlags.Dummy">
            <summary>A binary constant representing the dummy flag.</summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNodeFlags.Async">
            <summary>A binary constant representing if the enumeration is done asynchronously.</summary>
        </member>
        <member name="T:Jam.Shell.ShellTreeNode">
            <summary>
            Represents an item of the Windows shell namespace in a <see cref="T:Jam.Shell.ShellTreeView"/>.
            </summary>
            <seealso cref="T:Jam.Shell.ShellTreeView"/>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.m_OverlayImage">
            <summary>
            Used to store the value of the <see cref="P:Jam.Shell.ShellTreeNode.OverlayImage"/> OverlayImage property, the index of the overlay item in the system image list of this item.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.m_AbsoluteItemIdList">
            <summary>
            Absolute ItemIdList of this shell object in the shell namespace.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.m_RelativeItemIdList">
            <summary>
            Relative ItemIdList of this hsell object relative to the parent object.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.m_Flag">
            <summary>
            Multi purpose Flag, used e.g. in <see cref="M:Jam.Shell.ShellTreeView.RefreshNode(Jam.Shell.ShellTreeNode,System.Boolean)"/>.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.m_ExpandIfHasChildren">
            <summary>
            Can the node be expanded automatically when children are added (asynchronously)?
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.#ctor(Jam.Shell.ItemIdList,System.String,Jam.Shell.ShellTreeNode,System.Boolean,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellTreeNode"/> class.
            </summary>
            <param name="p_AbsoluteItemIdList">Absolute <see cref="T:Jam.Shell.ItemIdList"/> of the shell item that this <see cref="T:Jam.Shell.ShellTreeNode"/> should represent.</param>
            <param name="p_Text">Text that should be displayed for this <see cref="T:Jam.Shell.ShellTreeNode"/></param>
            <param name="p_Parent">The parent <see cref="T:Jam.Shell.ShellTreeNode"/> und which this new instance should be added.</param>
            <param name="p_IsFolder">pass <c>true</c> if the new instance should behave like a folder; otherwise passs <c>false</c>.</param>
            <param name="p_IsEnumerable">if set to <c>true</c> the new instance is enumerable, i.e. has or could have children.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.#ctor(Jam.Shell.ItemIdList,System.String,Jam.Shell.ShellTreeNode,System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellTreeNode"/> class.
            </summary>
            <param name="p_AbsoluteItemIdList">Absolute <see cref="T:Jam.Shell.ItemIdList"/> of the shell item that this <see cref="T:Jam.Shell.ShellTreeNode"/> should represent.</param>
            <param name="p_Text">Text that should be displayed for this <see cref="T:Jam.Shell.ShellTreeNode"/></param>
            <param name="p_Parent">The parent <see cref="T:Jam.Shell.ShellTreeNode"/> und which this new instance should be added.</param>
            <param name="p_IsFolder">pass <c>true</c> if the new instance should behave like a folder; otherwise passs <c>false</c>.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.Refresh(System.Boolean)">
            <summary>
            Refresh this <see cref="T:Jam.Shell.ShellTreeNode"/>.
            </summary>
            <param name="p_Recursive">Pass <c>true</c>, if all subfolders should also be refreshed as well; otherwise <c>false</c></param>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.AddSorted(System.Windows.Forms.TreeNode)">
            <summary>Dertemines the correct position for a node and adds it there.</summary>
            <param name="node">The to insert.</param>
            <returns>The index of the node.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.CompleteDetails">
            <summary>
            Calls CompleteDetails for the node, i.e. redetermines the node's text, CheckState and icons.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.Sort">
            <summary>
            (Re-)Sorts the subnodes.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.Rename(System.String,System.Boolean)">
            <summary>
            Renames the file or folder that is referenced by this ShellTreeItem instance to the new
            name given as a parameter.
            </summary>
            <param name="p_NewName">The new name of the file/folder</param>
            <param name="p_invokeLater">Must be true if called from within the LabelEdit process.</param>
            <returns>true if renaming succeeded, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.Rename(System.String)">
            <summary>Renames the file or folder that is referenced by this ShellTreeItem instance to the
            new name given as a parameter.</summary>
            <param name="p_NewName">The new name of the file/folder.</param>
            <returns>true if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.CreateFolder(System.String)">
            <summary>
            Creates a new Folder if the ShellListNode is a Folder;
            may throw an Exception, see <see cref="M:System.IO.Directory.CreateDirectory(System.String)"/> for the Exceptions that can occur
            </summary>
            <param name="p_FolderName">The folder name of the new sub folder to create.</param>
            <returns>true if the folder was created successfully</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.InvertCheckState">
            <summary>
            This method inverts the <see cref="P:Jam.Shell.ShellTreeNode.CheckState"/> of the <see cref="T:Jam.Shell.ShellTreeNode"/> 
            instance. If the Item was checked it's state will be set to unchecked.
            If it was Grayed or UnChecked it will be Checked afterwards.
            If the Item is not associated (contained) in a <see cref="T:Jam.Shell.ShellTreeView"/> or
            the <see cref="T:Jam.Shell.ShellTreeView"/> has no <see cref="T:Jam.Shell.ShellControlConnector"/> assigned,
            this method does nothing and returns immediately.
            Furthermore the TreeView needs to have the <see cref="P:Jam.Shell.ShellTreeView.CheckBoxes"/> property
            enabled.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.RefreshCheckState">
            <summary>
            Refreshes the value of the <see cref="P:Jam.Shell.ShellTreeNode.CheckState"/> CheckSate property.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellTreeNode.RefreshDirection">
            <summary>
            The possible options to refresh a checkstate of a <see cref="T:Jam.Shell.ShellTreeNode"/>.
            <seealso cref="M:Jam.Shell.ShellTreeNode.RefreshCheckState(Jam.Shell.ShellTreeNode.RefreshDirection)"/>.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.RefreshDirection.ASCEND">
            <summary>
            Ascend to the root node, refresh each parent node
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.RefreshDirection.DESCEND">
            <summary>
            Descend and visit and refresh all children
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeNode.RefreshDirection.BOTH">
            <summary>
            Ascends to the parent, then descends
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.RefreshCheckState(Jam.Shell.ShellTreeNode.RefreshDirection)">
            <summary>
            Refreshes the value of the <see cref="P:Jam.Shell.ShellTreeNode.CheckState"/> property recursively for 
            the given direction.
            </summary>
            <param name="refreshDirection">
            If the value is ASCEND, the parent nodes will be updated, and 
            if DESCEND, the child nodes will be updated. 
            If <see cref="F:Jam.Shell.ShellTreeNode.RefreshDirection.BOTH"/> is passed then the method 
            first ascends and refreshes, then descends and refreshes its sub nodes.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.GetDataObject">
            <summary>
            Returns the Windows Shell IDataObject interface for this object wrapped into an instance of type <see cref="T:System.Windows.Forms.DataObject"/>.
            </summary>
            <returns>The DataObject for this object.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.GetDropTarget">
            <summary>Returns the Windows IOleDropTarget interface for this item.</summary>
            <returns>The drop target as IOleDropTarget.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.GetChildNode(System.String)">
            <summary>
            Returns subnode with the given caption.
            </summary>
            <param name="p_ChildNodeCaption">The caption of the subnode that should be returned.</param>
            <returns>The subnode with the given cpation or null, if no subnode with this caption was found.</returns>
            <remarks>This method compares only direct subnodes, it does not recurse the whole tree.</remarks>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.SetIcon(System.Int32,System.Boolean)">
            <summary>
            Sets the icon.
            </summary>
            <param name="iconIndex">Index of the icon.</param>
            <param name="overlay">if set to <c>true</c> the imageIndex is set as overlay image.</param>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.ExpandIfHasChildren">
            <summary>
            Will the node be expanded automatically when receiving insert notifications for children?
            Used for the network node, when it is iterated asynchronously using ShellNotifications. 
            When expanding the node it will not have contents at first. The flag is set to true, and the first child that is received will expand the node then.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.Dummy">
            <summary>Gets or sets a value indicating whether the node is a dummy node only serving as a gap in the ShellTree.</summary>
            <value>True if dummy, false if not.</value>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.FullPath">
            <summary>
            Use to get the full path of this item.
            </summary>
            <returns>The full file system path of this item. An empty string if this item is not a file system object.</returns>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.Parent">
            <summary>
            The parent <see cref="T:Jam.Shell.ShellTreeNode"/>, <c>null</c> if this is a root node.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.IsFolder">
            <summary>
            <b>true</b> if the current item is a folder; otherwise <b>false</b>.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.IsEnumerable">
            <summary>
            Gets a value indicating whether this instance is enumerable, i.e. if it's a folder and has or could have children.
            </summary>
            <value>
            <c>true</c> if this instance is enumerable; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.HasChildren">
            <summary>
            <c>true</c>, if this <see cref="T:Jam.Shell.ShellTreeNode"/> has subfolders; otherwise <c>false</c>.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.AbsoluteItemIdList">
            <summary>
            Get the absolute ItemIdList of the item.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.SpecialFolder">
            <summary>
            SpecialFolder allows you to get the type of the currently listed folder.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.TreeView">
            <summary>
            The <see cref="T:Jam.Shell.ShellTreeView"/> that contains this item.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.Cut">
            <summary>
            Defines if the item's image should be shown ghosted or not.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.OverlayImage">
            <summary>
            The index of the overlay image in the system image list that should be shown in front of the normal icon.
            This property will only be set if the <c>ShowOverlayIcons</c> property of <see cref="P:Jam.Shell.ShellTreeView.ShowOverlayIcons"/> is set to true.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeNode.SetCheckState(Jam.Shell.CheckState)">
            <summary>
            This method should be used internally to update the <see cref="P:System.Windows.Forms.TreeNode.StateImageIndex"/>
            of the item without side effects. (Using the public <see cref="P:Jam.Shell.ShellTreeNode.CheckState"/> property 
            will cause the <see cref="P:Jam.Shell.ShellControlConnector.SelectionList"/> to be modified).
            </summary>
            <param name="value">The new checkstate of the item.</param>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.Checked">
            <summary>
            This property calls <see cref="P:Jam.Shell.ShellTreeNode.CheckState"/> and
            returns true only if the item is CheckState.Checked 
            and false if in CheckState.Grayed or CheckState.UnChecked.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.CheckState">
            <summary>
            If the <see cref="P:Jam.Shell.ShellTreeView.CheckBoxes"/> property of the <see cref="T:Jam.Shell.ShellTreeView"/> is true
            then this property can be used to get or set the check state.
            If the value that is set changes the item's checkstate, and a <see cref="T:Jam.Shell.ShellControlConnector"/> is
            assigned to the <see cref="T:Jam.Shell.ShellTreeView"/> the item is contained in, the <see cref="P:Jam.Shell.ShellControlConnector.SelectionList"/>
            will be updated accordingly.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.IsDropTarget">
            <summary>
            if this property is set to true, then the item is formatted as a highlighted drop target.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeNode.Flag">
            <summary>
            Multi purpose Flag, used e.g. in <see cref="M:Jam.Shell.ShellTreeView.RefreshNode(Jam.Shell.ShellTreeNode,System.Boolean)"/>.
            </summary>
        </member>
        <member name="T:Jam.Shell.MultipleRoots">
            <summary>Values that represent multiple roots. </summary>
        </member>
        <member name="F:Jam.Shell.MultipleRoots.SingleRoot">
            <summary>An enum constant representing the single root option. </summary>
        </member>
        <member name="F:Jam.Shell.MultipleRoots.MultipleRoots">
            <summary>An enum constant representing the multiple roots option. </summary>
        </member>
        <member name="T:Jam.Shell.ShellTreeView">
            <summary>
            A ShellTreeView displays the shell namespace in a tree. When the user right clicks on a folder, it will automatically show the context menu. 
            Use the <see cref="P:Jam.Shell.ShellTreeView.SelectedPath"/> property to get the currently selected path, use the <see cref="P:Jam.Shell.ShellTreeView.SpecialFolder"/> property to check if 
            a special folder like the Control Panel is currently selected. Usually a ShellTreeView component will be rooted the desktop folder, but you 
            can use the <see cref="P:Jam.Shell.ShellTreeView.RootedAt"/> property to choose a different root folder. You can synchronize a <see cref="T:Jam.Shell.ShellListView"/> with a 
            ShellTreeView by using the <see cref="P:Jam.Shell.ShellTreeView.ShellControlConnector"/> property.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_ShellDragDrop">
            <summary>Activates/deactivates the internal drag drop handling of the component.</summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_WorkItemTag">
            <summary>
            This Guid is used to tag the WorkItems that belong to this ListView.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_Initialized">
            <summary>
            This flag is true after the component has been constructed, 
            and will be set to false between subsequent calls to 
            BeginInit() and EndInit() of the <see cref="T:System.ComponentModel.ISupportInitialize"/> interface.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_DropTargetHelper">
            <summary>
            Used to support drag images and Vista style drag cursors.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_DraggedDataObject">
            <summary>
            Used to save the DataObject while dragging.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_UseSystemStyles">
            <summary>
            If false the component won't use the vista styles.
            <see cref="P:Jam.Shell.ShellTreeView.UseSystemStyles"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_UseSystemFont">
            <summary>
            If true the component will use the default system font.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_ContextMenuStrip">
            <summary>
            The ContextMenuStrip the TreeView will use to merge with the system menu...
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_ShellContextMenu">
            <summary>
            Indicates whether the ShellContextMenu should be shown or not.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_LastCutNode">
            <summary>
            Contains the last node the user selected and performed the 'Cut' operation on.
            This attribute is null if yet no cut operation was performed on the TreeView
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellTreeView"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.HandleNeeded">
            <summary>
            Creates the handle if it has not been created already.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.IsRootedAtSpecialFolder">
            <summary>
            Returns true, if the Root of the ShellTree is a valid SpecialFolder, i.e. something else than ShellFolder.Unknown.
            </summary>
            <returns>true, if RootedAt is something else than ShellFolder.Unknown.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnCreateControl">
            <summary>
            Raises the <see cref="M:System.Windows.Forms.Control.CreateControl" /> method.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnHandleCreated(System.EventArgs)">
            <summary>
            This method supports the .NET Framework infrastructure and is not intended to be used directly from your code. 
            </summary>
            <param name="e">An <see cref="T:System.EventArgs"/> that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.Dispose(System.Boolean)">
            <summary>
            Remove reference to ShellControlConnector and implicitely remove this control from the list of known controls of the ShellControlConnector
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.ChangeNotificationHandler(System.Object,Jam.Shell.ChangeNotificationPidlEventArgs)">
            <summary>
            This method gets called by the <see cref="P:Jam.Shell.ShellTreeView.ShellChangeNotifier"/> object 
            and informs about changes in the current folder. It sets the cursor of the ShellTreeView
            to the correct position if i.e. a file was renamed, a network drive was unmounted, etc.
            </summary>
            <param name="sender">sender of the event, not used here</param>
            <param name="e">the event arguments that happened</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            This event is triggered before a tree node is expanded, by clicking on 'plus',
            in case the node has not been expanded before, it will instantly be filled with
            the files found in that particular path (by <see cref="M:Jam.Shell.ShellTreeView.AddShellItem(Jam.Shell.ShellTreeNode,Jam.Shell.ShellBrowser)"/>)
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs"/> that contains the event data</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnBeforeCollapse(System.Windows.Forms.TreeViewCancelEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.TreeView.BeforeCollapse" /> event.
            </summary>
            <param name="e">A <see cref="T:System.Windows.Forms.TreeViewCancelEventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnBeforeLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)">
            <summary>
            This event is triggered if the user just starts editing a label
            </summary>
            <param name="e">the event arguments of the occurred Event</param>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_IsInAfterLabelEdit">
            <summary>
            Keeps track if a node is currently in afterLabelEdit
            Node.IsEditing is already false when AfterLabelEdit is started, but we need to skip notifications until everything is finished.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnAfterLabelEdit(System.Windows.Forms.NodeLabelEditEventArgs)">
            <summary>
            This event is triggered if the user edited a treenode and renamed it
            it is only active if the property base.LabelEdit was set to true
            </summary>
            <param name="e">the event arguments when this Event occurs</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.FillFolder(Jam.Shell.ShellTreeNode)">
            <summary>
            Fills in the subfolders in a node
            </summary>
            <param name="p_Node">The <see cref="T:Jam.Shell.ShellTreeNode"/> that should be filled with its subfolders</param>
            <remarks>All existing subfolders will be deleted.</remarks>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.AddRoot(System.String)">
            <summary>Adds a root. </summary>
            <param name="pFolderPath">Full pathname of the folder to be added as root node. </param>
            <returns>A ShellTreeNode if the root was created successfully. </returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.AddRoot(Jam.Shell.ShellFolder)">
            <summary>Adds a root. </summary>
            <param name="pSpecialFolder">A <see cref="T:Jam.Shell.ShellFolder"/> constant of the special folder to be added as root node. </param>
            <returns>A ShellTreeNode if the root was created successfully. </returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.ClearRoots">
            <summary>Clears all roots in the <see cref="T:Jam.Shell.ShellTreeView"/>. </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.SelectSubFolder(System.String)">
            <summary>
            Selects a sub folder (if existant) of the name given as a parameter
            if p_FolderName is null an ArgumentNullException is thrown.
            if no node is currently selected nothing happens and false is returned.
            if no sub folder of the given name exists the method returns false as well.
            </summary>
            <param name="p_FolderName">the foldername to search for in the child-<see cref="T:Jam.Shell.ShellTreeNode"/> of the currently selected node.</param>
            <returns>true if p_FolderName could be selected as a subfolder</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.CreateDir(System.String,System.String,System.Boolean)">
            <summary>
            This method creates a new directory with the name of the string argument 
            foldername in the given path.
            If EditMode is True, the new folder will be switched to the edit mode 
            after creation so that the user can change its name.
            </summary>
            <param name="p_Path">The path where the folder should be created in.</param>
            <param name="p_FolderName">The name of the new folder. Do pass a single name only, not a full path. If an empty string is passed as foldername, 
            a standard folder name will be used. </param>
            <param name="p_EditMode">Pass <b>true</b>, if the user should be able to edit the name of the new folder after its creation.
            Pass <b>false</b> if the new folder should not be in edit mode.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.CreateDir(System.String,System.Boolean)">
            <summary>
            This method creates a new directory with the name of the string argument p_FolderName in the
            currently SelectedPath. If EditMode is True, the new folder will be switched to the edit mode
            after creation so that the user can change its name.
            </summary>
            <param name="p_FolderName">The name of the new folder. Do pass a single name only, not a
            full path. If an empty string is passed as foldername, a standard folder name will be used.</param>
            <param name="p_EditMode">Pass <b>true</b>, if the user should be able to edit the name of the
            new folder after its creation. Pass <b>false</b> if the new folder should not be in edit mode.</param>
            <returns>True if the folder could be created, false if it fails.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnEditLabelTimerTick(System.Object,System.EventArgs)">
            <summary>
            This method calls <see cref="M:System.Windows.Forms.TreeNode.BeginEdit"/> on the <see cref="P:Jam.Shell.ShellTreeView.SelectedNode"/>.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnAddTreeNode(Jam.Shell.ShellTreeNode)">
            <summary>
            Fires an event if an item is added to the tree.
            </summary>
            <param name="p_Node">The node that is to be added.</param>
            <returns>true if the item should be added, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.CreateShellTreeNode(Jam.Shell.ShellTreeNode,Jam.Shell.ShellBrowser)">
            <summary>
            This methods creates a new ShellTreeNode but does not yet include it in the parentNode.
            </summary>
            <param name="p_Parent">The parent <see cref="T:Jam.Shell.ShellTreeNode" /> of the item to be added.</param>
            <param name="pShellBrowser">A ShellBrowser instance to use.</param>
            <returns>
            The new created ShellTreeNode instance is returned.
            Null, if the ShowOptionsShouldShow determined not to include the node or if the AddTreeNode event had the <see cref="P:Jam.Shell.AddTreeNodeEventArgs.CanAdd" /> set to false.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.AddShellItem(Jam.Shell.ShellTreeNode,Jam.Shell.ShellBrowser)">
            <summary>
            This methods adds the currently active object of the m_ShellBrowser to the TreeNode.
            </summary>
            <param name="pParent">The parent <see cref="T:Jam.Shell.ShellTreeNode" /> of the added item.</param>
            <param name="pShellBrowser">A ShellBrowser instance to use.</param>
            <returns>
            The new created ShellTreeNode instance is returned.
            Null, if the ShowOptionsShouldShow determined not to include the node or if the AddTreeNode event had the <see cref="P:Jam.Shell.AddTreeNodeEventArgs.CanAdd" /> set to false.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.DetermineHasSubFolders(System.Object)">
            <summary>
            Determines whether a particular folder node has children
            This method can be called from a different thread
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.CompleteDetails(Jam.Shell.ShellTreeNode,System.Boolean,Jam.Shell.ShellBrowser)">
            <summary>
            Completes the visual details of the given item, e.g. icon, overlay image etc.
            </summary>
            <param name="p_Node">The <see cref="T:Jam.Shell.ShellTreeNode"/> that should be completed.</param>
            <param name="p_FullRefresh">Performs additional (slow) operations.</param>
            <param name="p_ShellBrowser">A ShellBrowser pointing to the correct item. If null the m_ShellBrowser instance is used.</param>
            <remarks>
            The m_ShellBrowser must point to the appropriate item!
            </remarks>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.IsEditing">
            <summary>
            Gets a value indicating whether the <see cref="P:Jam.Shell.ShellTreeView.SelectedNode"/> is 
            in editing state. 
            </summary>
            <returns>The editing state of the selected node. Returns false, if nothing is selected.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.RefreshNode(Jam.Shell.ShellTreeNode,System.Boolean)">
            <summary>
            Performs a full refresh of the given <see cref="T:Jam.Shell.ShellTreeNode"/>
            </summary>
            <param name="p_Node">The <see cref="T:Jam.Shell.ShellTreeNode"/> that should be refreshed.</param>
            <param name="p_Recursive">Pass <c>true</c> if the node should be fully refreshed; <c>false</c> for an optimized (faster) refresh. </param>
            <seealso cref="M:Jam.Shell.ShellTreeView.RefreshNode(Jam.Shell.ShellTreeNode,System.Boolean,System.Boolean)"/>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.RefreshNode(Jam.Shell.DummyHasChildrenTreeNode,System.Boolean)">
            <summary>
            Empty method when calling RefreshNode with DummyHasChildrenNode
            Fixes Bug #2256
            </summary>
            <param name="p_Node">The <see cref="T:Jam.Shell.DummyHasChildrenTreeNode"/> that should be refreshed.</param>
            <param name="p_Recursive">Boolean value - has no effect in this dummy-function</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.RefreshNode(Jam.Shell.ShellTreeNode,System.Boolean,System.Boolean)">
            <summary>
            Refreshes a Node, by clearing its content, and refilling the sub-tree with new,
            probably more current information from the file-system <see cref="M:Jam.Shell.ShellTreeView.OnBeforeExpand(System.Windows.Forms.TreeViewCancelEventArgs)"/>
            </summary>
            <param name="p_Node">The node that should be refreshed.</param>
            <param name="p_Recursive">Pass <c>true</c>, if all subfolders should also be refreshed as well; otherwise <c>false</c></param>
            <param name="p_FullRefresh">Pass <c>true</c> if the node should be fully refreshed; <c>false</c> for an optimized (faster) refresh. </param>
            <seealso cref="M:Jam.Shell.ShellTreeNode.Refresh(System.Boolean)"/>
        </member>
        <member name="T:Jam.Shell.ShellTreeView.GotoFolderIdListAction">
            <summary>
            Possible actions that can be performed by <see cref="M:Jam.Shell.ShellTreeView.GotoFolderIdList(Jam.Shell.ItemIdList,Jam.Shell.ShellTreeView.GotoFolderIdListAction)"/>.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.GotoFolderIdListAction.Select">
            <summary>
            Select the given <see cref="T:Jam.Shell.ItemIdList"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.GotoFolderIdListAction.Refresh">
            <summary>
            Refresh the given <see cref="T:Jam.Shell.ItemIdList"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.GotoFolderIdListAction.RefreshParent">
            <summary>
            Refresh the parent of the given <see cref="T:Jam.Shell.ItemIdList"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.GotoFolderIdListAction.Delete">
            <summary>
            Remove the given <see cref="T:Jam.Shell.ItemIdList"/>
            </summary>            
        </member>
        <member name="F:Jam.Shell.ShellTreeView.GotoFolderIdListAction.Add">
            <summary>
            Make sure that the given <see cref="T:Jam.Shell.ItemIdList"/> is present in the tree.
            If it is not present, add it.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.GotoFolderIdListAction.Check">
            <summary>
            Ensure that the given object is present if its parent is expanded.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.GotoFolderIdListAction.Edit">
            <summary>
            Select the Node and set it into Editmode.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.EnableSystemStyles">
            <summary>
            Sets system specific behaviour,
            i.e. disables the lines in the ShellTreeView for Vista and upwards.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.LargeIcons">
            <summary>
            Set or get the ImageSize. True for LargeIcons, false for SmallIcons.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowLines">
            <summary>
            The ShowLines property cannot be set, if <see cref="P:Jam.Shell.ShellTreeView.UseSystemStyles"/> is set to true and the detected
            operating system is Windows Vista. This is to keep the look&amp;feel consistent, ShowLines together with the Vista TreeView
            style does not look pretty.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.FindNode(Jam.Shell.ItemIdList,System.Boolean)">
            <summary>
            Searches for the first node, that represents the passed ItemIdList. Checks all roots in the
            ShellTree.
            </summary>
            <param name="pItemIdList">The ItemIdList to be searched.</param>
            <param name="pForceExpand">True if nodes should be expanded during the search, false if only
            expanded nodes are iterated.</param>
            <returns>The found node or null if the ItemIdList could not be found.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.FindNode(Jam.Shell.ItemIdList,System.Boolean,Jam.Shell.ShellTreeNode@)">
            <summary>Searches for the first node, that represents the passed ItemIdList. Checks all roots in the ShellTree.</summary>
            <param name="pItemIdList">The ItemIdList to be searched.</param>
            <param name="pForceExpand">True if nodes should be expanded during the search, false if only expanded nodes are iterated.</param>
            <param name="pNearestParent">[in,out] Contains the nearest parent that was found. Might contain something even if the ItemIdList could not be found.</param>
            <returns>The found node or null if the ItemIdList could not be found.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.FindNode(Jam.Shell.ShellTreeNode,Jam.Shell.ItemIdList,System.Boolean,Jam.Shell.ShellTreeNode@)">
             <summary>
             Searches for the first node, that represents the passed ItemIdList. 
             </summary>
             <param name="pStartNode">The branch to be searched - only the node itself and its children are scanned.</param>
             <param name="pItemIdList">The ItemIdList to be searched.</param>
             <param name="pForceExpand">True if nodes should be expanded during the search, false if only expanded nodes are iterated.</param>
             <param name="pNearestParent">[in,out] Contains the nearest parent that was found. Might contain something even if the ItemIdList could not be found.</param>
            
             <returns>The found node or null if the ItemIdList could not be found.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.GotoFolderIdList(Jam.Shell.ItemIdList)">
            <summary>
            Selects the <see cref="T:Jam.Shell.ShellTreeNode"/> for the given <see cref="T:Jam.Shell.ItemIdList"/>.
            </summary>
            <param name="p_ItemIdList">The <see cref="T:Jam.Shell.ItemIdList"/> of the shell item that should be selected.</param>
            <returns><c>true</c> if the requested shell item was found and selected; otherwise <c>false</c>.</returns>
            <remarks>If for some reason only a prent item fo the requested shell item can be found, then this item will be selecdted.</remarks>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.GotoFolderIdList(Jam.Shell.ItemIdList,Jam.Shell.ShellTreeView.GotoFolderIdListAction)">
            <summary>
            Tries to find the <see cref="T:Jam.Shell.ShellTreeNode"/> for the given <see cref="T:Jam.Shell.ItemIdList"/> and executes the requested action on it.
            </summary>
            <param name="p_ItemIdList">The <see cref="T:Jam.Shell.ItemIdList"/> of the shell item on that the action should be performed.</param>
            <param name="p_Action">The action which should be performed.</param>
            <returns><c>true</c> if the requested shell item was found and the action could be performed; otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.RenameItemSelectedHandler(System.Object,System.EventArgs)">
            <summary>
            Handles the click on the "Rename" context menu item of the Shell context menu
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.DisplayContextMenu(System.Drawing.Point)">
            <summary>
            Shows the shell context menu for the currently selected item
            <seealso cref="P:Jam.Shell.ShellTreeView.ShowContextMenu"/>
            </summary>
            <param name="p">The Position (relative to the control) at which the context menu should be shown.</param>
            <returns>The verb of the command that was executed, e.g. "open", "properties", "copy", etc.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.ShowContextMenuForNode(Jam.Shell.ShellTreeNode,System.Drawing.Point)">
            <summary>
            Shows the shell context menu for the item given as a parameter
            </summary>
            <param name="p_ShellTreeNode">the ShellTreeNode to show the contextmenu</param>
            <param name="p">The Position (relative to the control) at which the context menu should be shown.</param>
            <returns>The verb of the command that was executed, e.g. "open", "properties", "copy", etc.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnBeforeInvokeCommand(Jam.Shell.BeforeShellCommandEventArgs)">
            <summary>Is called before the command is called.</summary>
            <param name="e">EventArgs holding the verb that is to be executed and the affected elements.
            If <see cref="P:System.ComponentModel.CancelEventArgs.Cancel" /> is set to true, the command
            is not further executed.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnAfterInvokeCommand(Jam.Shell.ShellCommandEventArgs)">
            <summary>Is called after the command has been called.</summary>
            <param name="e">Contains the command and the items the command was applied upon.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.InvokeCommandOnSelected(Jam.Shell.ShellCommand)">
            <summary>
            Invokes the Command given as a parameter on the currently selected Node, any necessary events 
            are created 
            </summary>
            <param name="pCommand">the <see cref="T:Jam.Shell.ShellOperation"/> or any extension to execute</param>
            <returns>true if the command was a success, false if not or no Node was selected to perform the operation</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.GetChildNodeForItemIdList(Jam.Shell.ShellTreeNode,Jam.Shell.ItemIdList,Jam.Shell.ShellBrowser)">
            <summary>
            Returns the child ShellTreeNode for the given ItemIdList.
            </summary>
            <param name="p_ParentNode">The <see cref="T:Jam.Shell.ShellTreeNode" /> of which the child ShellTreeNode should be searched.</param>
            <param name="p_AbsoluteItemIdList">The absolute ItemIdList of the child <see cref="T:Jam.Shell.ShellTreeNode"/> to look for.</param>
            <param name="p_ShellBrowser">A ShellBrowser instance to use for comparison. If null is passed the m_ShellBrowser instance is used.</param>
            <returns>
            The <see cref="T:Jam.Shell.ShellTreeNode" /> for the given ITemIdList;<c>null</c> if none was found
            </returns>
            <remarks>
            Parameter p_ShellBrowser or <see cref="F:Jam.Shell.ShellTreeView.m_ShellBrowser" /> object must point to the corresponding folder of the parameter <paramref name="p_ParentNode" />!
            </remarks>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.InformPathChanged(Jam.Shell.ShellTreeNode)">
            <summary>
            Informs the <see cref="P:Jam.Shell.ShellTreeView.ShellControlConnector"/> that the selected shell folder has changed.
            </summary>
            <param name="p_NewNode">The newly selected <see cref="T:Jam.Shell.ShellTreeNode"/>.</param>
            <remarks>Controls connected to the same <see cref="P:Jam.Shell.ShellTreeView.ShellControlConnector"/> will be updates to have the same shell folder active</remarks>
            <seealso cref="P:Jam.Shell.ShellTreeView.ShellControlConnector"/>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.TreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)"/>
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.LogError(System.String)">
            <summary>
            Error method that displays an error messagebox if the 
            property <see cref="P:Jam.Shell.ShellTreeView.ShowErrorMessages"/> is set.
            The message is always written to the debug output stream
            </summary>
            <param name="message">The errormessage</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.LogError(System.String,System.Exception)">
            <summary>
            Error method that displays an error messagebox if the 
            property <see cref="P:Jam.Shell.ShellTreeView.ShowErrorMessages"/> is set. 
            The message is always written to the debug output stream
            </summary>
            <param name="message">The errormessage</param>
            <param name="exception">Exception a possible exception that is logged as well, may be null</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.TreeView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)"/>
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnDragEnter(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)"/>
            </summary>
            <param name="drgevent">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)"/>
            </summary>
            <param name="drgevent">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnDragLeave(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)"/>
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)"/>
            </summary>
            <param name="drgevent">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnDrawNode(System.Windows.Forms.DrawTreeNodeEventArgs)">
            <summary>Loads the node and raises the draw tree node event. </summary>
            <param name="e">Event information to send to registered event handlers. </param>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShellBrowser">
            <summary>
            Internal access to the ShellBrowser instance
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.WorkItemTag">
            <summary>
            A internal number that is used to tag the workitems of a list view.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShellChangeNotifier">
            <summary>
            Returns the reference to the ShellChangeNotifier that 
            is associated with this instance.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShellDragDrop">
            <summary>Activates/deactivates the internal drag drop handling of the component.</summary>
            <value>true if the component should handle drag and drop exchange with the Shell, false if not.</value>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowShellContextMenuOnTop">
            <summary>
            If set to to 'true', the shell context menu will be shown on top of the provided popup menu. 
            If set to 'false', the shell context menu will be shown below the provided popup menu.
            The value true is currently not supported. The menu items will be shown correctly, however their Click event cannot be triggered.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.PreviouslySelectedItem">
            <summary>
            Stores the item that was selected before <see cref="P:Jam.Shell.ShellTreeNode.IsDropTarget"/> is set to true for an item.
            So this value can be used to restore the selected item later.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.CheckBoxes">
            <summary>
            Use this property to turn on or off the checkboxes for file and folder selection. 
            The checkboxes will only work, if a <see cref="P:Jam.Shell.ShellTreeView.ShellControlConnector"/> instance 
            has been assigned to the ShellControlConnector property of this component. It 
            will automatically synchronize the selection state of the items in multiple 
            shell controls linked together with this ShellControlConnector.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.LabelEdit">
            <summary>
            Gets or sets a value indicating whether the label text of the tree nodes can be edited.
            </summary>
            <value></value>
            <returns>true if the label text of the tree nodes can be edited; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.FileSystemOnly">
            <summary>
            If FileSystemOnly is set to True, objects and virtual folders which do not have a file system path, will not be displayed. Exceptions are 'My Computer', 'Libraries' and 'Network'
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.AllowDrop">
            <summary>
            Use this property to turn on or off drag and drop support with the Windows Explorer.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.AllowDrag">
            <summary>
            Use this property to turn on or off drag support with the Windows Explorer.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.UseSystemStyles">
            <summary>
            Use this property to turn on or off the usage of the system specific design, i.e. enable Vista visual styles of the explorer components.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.UseSystemFont">
            <summary>
            Set this property to true if you want the component to utilize the default system font.
            It is also set to true if the <see cref="P:Jam.Shell.ShellTreeView.UseSystemStyles"/> property is set.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.SetFont(System.Drawing.Font)">
            <summary>
            Sets the font without adjusting other properties.
            </summary>
            <param name="value">The value.</param>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.Font">
            <summary>
            The font used to display text in the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.RootedAt">
            <summary>
            Defines the root folder of this <see cref="T:Jam.Shell.ShellTreeView"/>
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">A COM-Exception is thrown if the special folder 
            selected is not supported by the system the application is running on.</exception>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.RootedAtFileSystemFolder">
            <summary>
            Determines the root file system folder of a <see cref="T:Jam.Shell.ShellTreeView"/>.
            </summary>
            <remarks>
            You can use this property to set the specific folder, which should be used as root for the JamShellTree.
            When this property is assigned with a valid file system path, then <see cref="P:Jam.Shell.ShellTreeView.RootedAt"/> will be set to SF_UNKNOWN.
            </remarks>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.RootNode">
            <summary>
            Returns the first root element of the type <see cref="T:Jam.Shell.ShellTreeNode"/> of this shell treeview.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ChangeDelay">
            <summary>
            Specifies the delay between when a node is selected and when the handling of this change is processed.
            </summary>
            <remarks>Setting this property to a value greater than 0 will emulate the behaviour of the Windows Explorer
            and delay the updating of controls connected through a <see cref="P:Jam.Shell.ShellTreeView.ShellControlConnector"/>.</remarks>
            <seealso cref="P:Jam.Shell.ShellTreeView.ShellControlConnector"/>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.Nodes">
            <summary>
            Returns a collection containing all child ShellTreeNodes of this <see cref="T:Jam.Shell.ShellTreeNode"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.SelectedNode">
            <summary>
            Gets or sets the tree node that is currently selected in the <see cref="T:Jam.Shell.ShellTreeView"/> control. 
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.SelectedItemIdList">
            <summary>Gets or sets the selected ItemIdList.</summary>
            <value>The ItemIdList that is or should be selected.</value>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.SelectedPath">
            <summary>
            Use SelectedPath to get or set the path, which is currently selected in the <see cref="T:Jam.Shell.ShellTreeView"/>. 
            If the currently selected path is not a file system folder, SelectedPath returns an empty string and you should use the <see cref="P:Jam.Shell.ShellTreeView.SpecialFolder"/> property to get the type of this path.
            If you`re looking for the path an operation was performed on (e.g. Drop), use the <see cref="E:Jam.Shell.ShellTreeView.OperationPerformed"/> event.
            </summary>
            <remarks>Note, that this value might not be applied if <see cref="P:Jam.Shell.ShellTreeView.NoFillOnStartup"/> is set, because this might need expansion of the ShellTree.</remarks>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.SpecialFolder">
            <summary>
            SpecialFolder allows you to check, if the currently selected folder is a special folder (e.g. the Control Panel) or to make a special folder the selected folder. Use the <see cref="P:Jam.Shell.ShellTreeView.SelectedPath"/> property if you want to deal with file system folders.
            </summary>
             <remarks>Note, that this value might not be applied if <see cref="P:Jam.Shell.ShellTreeView.NoFillOnStartup"/> is set, because this might need expansion of the ShellTree.</remarks>
            <seealso cref="T:Jam.Shell.ShellFolder"/>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.AutomaticRefresh">
            <summary>
            Enables the automatic refreshes of the control, e.g. when a file is added or deleted in the current directory.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.AutoExpandDelay">
            <summary>
            The delay in milliseconds after that a folder is expanded automatically during a drag and drop operation.
            A value of 0 disables the auto expand feature.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.AutoScrollDelay">
            <summary>
            The delay in milliseconds after that the control scrolls automatically during a drag and drop operation.
            A value of 0 disables the auto scroll feature.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.DrawMode">
            <summary>
            The value of the DrawMode property must always be TreeViewDrawMode.OwnerDrawAll. This is why the Property is
            reimplemented here. A different setting is ignored, and a debug message is shown.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.CopyMode">
            <summary>
            Copy mode allows you to control the behaviour when files or folders get dropped.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ContextMenuStrip">
            <summary>
            The ContextMenuStrip is converted to an ordinary ContextMenu. This makes it 
            possible to merge your ContextMenuStrip with the Default ShellContextMenu provided
            by the system.
            The "Opening" and "Closing" events of the ContextMenuStrip will be raised if the 
            ContextMenu "Popup"/"Collapse" event occurs. For menu items only the "Click" event
            is available. All other events are not available.
            All ToolStripMenuItems are converted, and ToolStripSeparators are recognized.
            The ShortCut Keys defined in a ToolStripMenuItem are not converted.
            If you would like to have the ShortCut-Keys, leave this Property null, instead set
            the ContextMenu property to your menu explicitly.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShellContextMenu">
            <summary>
            Indicates whether the Windows ShellContextMenu should be shown or not.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.MultipleRoots">
            <summary>
            Configuration of the roots that are displayed in the <see cref="T:Jam.Shell.ShellTreeView"/>
            </summary>
            <example> 
            This example will reconfigure the roots displayed in a ShellTree.
            <code source ="CodeExamplesWinforms.cs" region = "ShellTree_AddCustomRoots" lang="C#" />
            </example>
            <value><see cref="F:Jam.Shell.MultipleRoots.SingleRoot"/> if there is only a single root node. Can be configuared via <see cref="P:Jam.Shell.ShellTreeView.RootedAt"/> or <see cref="P:Jam.Shell.ShellTreeView.RootedAtFileSystemFolder"/>;
                   <see cref="F:Jam.Shell.MultipleRoots.MultipleRoots"/> if there can be more than one root. Default will behave like Windows Explorer. Roots can be added via <see cref="M:Jam.Shell.ShellTreeView.AddRoot(System.String)"/> or <see cref="M:Jam.Shell.ShellTreeView.AddRoot(Jam.Shell.ShellFolder)"/>
            </value>
        </member>
        <member name="E:Jam.Shell.ShellTreeView.AddTreeNode">
            <summary>
            This Event is triggered every time a ShellTreeNode is added to the ShellTreeView,
            that is, it's structure changed. You can use it to check and suppress nodes from being added to the ShellTreeView.
            </summary>
            <example> 
            This example will suppress the "My Music" library from showing up in the ShellTreeView.
            <code source ="CodeExamplesWinforms.cs" region = "ShellTreeView_AddTreeNode" lang="C#" />
            </example>
            <example>
            The following example will only display folders and docx-files - <see cref="P:Jam.Shell.ShellTreeView.ShowFiles"/> must be true for this example to work.
            <code source ="CodeExamplesWinforms.cs" region = "ShellTreeView_AddTreeNode2" lang="C#" />
            </example>
        </member>
        <member name="E:Jam.Shell.ShellTreeView.FolderUpdated">
            <summary>
            This Event is triggered every time the details of a Node are updated
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellTreeView.OperationPerformed">
            <summary>
            This event is fired after a <see cref="T:Jam.Shell.ShellTreeView"/> executed a shell operation like pasting.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellTreeView.BeforeShellCommand">
            <summary>
            This event is fired when a shell command is to be executed, ie. via the context menu
            It is possible to permit the execution of the shell command by modifying the BeforeShellCommandEventArgs
            </summary>
            <example>
            Shows the analogue usage of the <see cref="E:Jam.Shell.ShellBrowserBase.BeforeShellCommand"/> event.
            <code source ="CodeExamplesWinforms.cs" region = "BeforeShellCommand" lang="C#"/>
            </example>
        </member>
        <member name="E:Jam.Shell.ShellTreeView.BeforeInvokeCommandOnSelected">
            <summary>
            Assign this event to be able to control the behaviour of the control
            when the user double-clicks on an item to start the default action
            </summary>
            <seealso cref="E:Jam.Shell.ShellTreeView.BeforeShellCommand"/>
        </member>
        <member name="E:Jam.Shell.ShellTreeView.BeforeShellDrop">
            <summary>
            This event is fired before a <see cref="T:Jam.Shell.ShellTreeView"/> executes a shell drop.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellTreeView.ShowOptionChanged">
            <summary>
            This event is fired after a <see cref="T:Jam.Shell.ShellTreeView"/> executed a shell operation like pasting.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellTreeView.CheckStateChanged">
            <summary>
            This event is fired when the state of a checkbox was changed by the user.
            </summary>
            <remarks>In contrast to <see cref="E:Jam.Shell.ShellTreeView.NodeChecked"/>, this event will be raised if the checkstate was changed by the user, or if it was changed indirectly, by synchronization from other controls or another node in the <see cref="T:Jam.Shell.ShellTreeView"/>.</remarks>
        </member>
        <member name="E:Jam.Shell.ShellTreeView.NodeChecked">
            <summary>Occurs when the checked state of an item was changed by the user.</summary>
            <remarks>In contrast to <see cref="E:Jam.Shell.ShellTreeView.CheckStateChanged"/> only changes applied by the user will fire the event.</remarks>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnBeforeInvokeCommandOnSelected(Jam.Shell.InvokeCommandEventArgs)">
            <summary>
            Calls the BeforeInvokeCommandOnSelected event if it is assigned.
            </summary>
            <param name="p_EventArgs">event arguments</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnBeforeShellDrop(Jam.Shell.BeforeShellDropEventArgs)">
            <summary>
            Calls the BeforeShellDrop event if it is assigned.
            </summary>
            <param name="p_EventArgs">event arguments</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnCheckStateChanged(Jam.Shell.ShellTreeNode,Jam.Shell.CheckState)">
            <summary>
            Fires an event if the <see cref="T:Jam.Shell.CheckState"/> of an item has changed.
            <seealso cref="M:Jam.Shell.ShellListBaseItem.InvertCheckState"/>
            </summary>
            <param name="node">The item (<see cref="T:Jam.Shell.ShellTreeNode"/>), where the <see cref="T:Jam.Shell.CheckState"/> changed.</param>
            <param name="oldCheckState">Contains the <see cref="T:Jam.Shell.CheckState"/>, which the item had before it was changed.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnItemChecked(Jam.Shell.ShellTreeNode)">
            <summary>Raises the OnItemCheckedEvent.</summary>
            <param name="pNode">The item that has been checked or unchecked.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.Refresh(Jam.Shell.RefreshLevel)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should be refreshed. This value can be null.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.FullRefresh">
            <summary>
            Use the FullRefresh method if you want to refresh a <see cref="T:Jam.Shell.ShellTreeView"/>. All expanded branches of the file system structure will be refreshed. 
            If you just want to refresh one node and its child nodes, use the <see cref="M:Jam.Shell.ShellTreeView.RefreshNode(Jam.Shell.ShellTreeNode,System.Boolean,System.Boolean)"/> method.
            </summary>        
        </member>
        <member name="M:Jam.Shell.ShellTreeView.SmartRefresh">
            <summary>
            Use the SmartRefresh to update the contents of a <see cref="T:Jam.Shell.ShellTreeView"/>. In comparison to the <see cref="M:Jam.Shell.ShellTreeView.FullRefresh"/> method, SmartRefresh is much faster, 
            but only removes objects which have been deleted and adds objects which have been added. It doesn't update changed file sizes or dates. Usually this method will be called automatically, 
            when a file was added or deleted.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnFolderUpdated(Jam.Shell.UpdateFolderEventArgs)">
            <summary>
            Fires the FolderUpdated event with the given argument and "this" as the sender
            </summary>
            <param name="p_UpdateFolderEventArgs">The event argument, see <see cref="T:Jam.Shell.UpdateFolderEventArgs"/></param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.ScrollLeft">
            <summary>Scrolls to the far left.</summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnOperation(Jam.Shell.ShellOperation,System.String,System.String)">
            <summary>
            Helper function for <see cref="M:Jam.Shell.ShellTreeView.OnOperation(Jam.Shell.ShellOperation,Jam.Shell.PathCollection,System.String)"/> to avoid type conversion.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnOperation(Jam.Shell.ShellOperation,System.Collections.Specialized.StringCollection,System.String)">
            <summary>
            Helper function for <see cref="M:Jam.Shell.ShellTreeView.OnOperation(Jam.Shell.ShellOperation,Jam.Shell.PathCollection,System.String)"/> to avoid type conversion.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnOperation(Jam.Shell.ShellOperation,Jam.Shell.PathCollection,System.String)">
            <summary>
            Fires an event if an operation was performed on the <see cref="T:Jam.Shell.ShellTreeView"/>, i.e. an Item was pasted
            </summary>
            <param name="p_Operation">Contains the type of operation, which has been performed.</param>
            <param name="p_Paths">The p_Paths contains the file or folder names, that are affected.</param>
            <param name="p_Destination">Contains the destination, e.g. where files or folders have been pasted to.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnDoubleClick(System.EventArgs)">
            <summary>
            Override the OnDoubleClick event to try to perform the default action for the selected object 
            if it is a file.
            </summary>
            <param name="e">The parameter contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrides the OnMouseUp event, to handle e.g. double clicks and right clicks on files or folders
            </summary>
            <param name="e">Provides data for the OnMouseDown event.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnKeyUp(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overrides the OnKeyUp event to handle key strokes for the currently selected item
            e.g. the ContextMenuPopup key
            </summary>
            <param name="e">Provides data from the KeyEvent that occured</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.WndProc(System.Windows.Forms.Message@)">
            <summary>
            Overrides the WindProc function and filters ERASEBKGND to avoid flickering.
            </summary>
            <param name="m">The Windows Message to process.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Overrides the OnKeyDown event to handle key strokes for the currently selected item.
            Currently, if the spacebar is pressed, the checkboxes are toggled.
            </summary>
            <param name="e">Provides data from the KeyEvent that occured</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Change the current folder to the one given in parameter
            throws <see cref="T:System.ArgumentNullException"/> if the argument was null
            </summary>
            <param name="p_ItemIdList">the folder to change to</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            Change the currently selected file, if <see cref="P:Jam.Shell.ShellTreeView.ShowFiles"/> is true
            throws <see cref="T:System.ArgumentNullException"/> if the argument was null
            </summary>
            <param name="p_ItemIdList">The ItemIdList that is passed to <see cref="M:Jam.Shell.ShellTreeView.GotoFolderIdList(Jam.Shell.ItemIdList)"/> if ShowFiles was true.</param>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.GoUp">
            <summary>
            Go up one level in the tree,
            does nothing if the SelectedNode is null of if the SelectedNode has no Parent (is root)
            </summary>
            <returns>true, if the operation could be performed, false otherwise</returns>
        </member>
        <member name="F:Jam.Shell.ShellTreeView.m_ShellControlConnector">
            <summary>
            this variable holds a reference to an attached ShellControlConnector which is
            the mediator between different ShellBrowser components and keeps the views in sync
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShellControlConnector">
            <summary>
            Connects this control to a ShellControlConnector component, which allows to synchronize several shell controls.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.Compare(System.Object,System.Object)">
            <summary>
            Compares two ShellTreeNode objects by their ItemIdList.
            </summary>
            <param name="x">First ShellTreeNode.</param>
            <param name="y">Second ShellTreeNode, which will be compared with first one.</param>
            <returns>
            Returns a value less than 0 if x is less than y, 0 if x is eqaul to y and a value greater
            than 0 if x is greater than y.</returns>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.EndInit">
            <summary>
            Signals the object that initialization is complete.
            
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellTreeView.Initialized">
            <summary>
            Occurs when initialization of the component is completed.
            </summary>
            <seealso cref="P:Jam.Shell.ShellTreeView.IsInitialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.IsInitialized">
            <summary>
            Gets a value indicating whether the component is initialized.
            </summary>
            <seealso cref="E:Jam.Shell.ShellTreeView.Initialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.IsInitializing">
            <summary>
            The value this property is true between the calls BeginIniti() and EndInit() 
            of the <see cref="T:System.ComponentModel.ISupportInitialize"/> interface.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellTreeView.ShowOptionsShouldShow(Jam.Shell.ShellBrowser)">
            <summary>
            Returns if the active shell object in the given ShellBrowser should be shown 
            according to the property settings of this class.
            </summary>
            <param name="pShellbrowser">An instance of the <see cref="P:Jam.Shell.ShellTreeView.ShellBrowser"/> class.</param>
            <returns>true, if the active object in the ShellBrowser should be visible in a control according to the property values. false if it hsould not be visible.</returns>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.HideSelection">
            <summary>
            Gets or sets a value indicating whether the selected tree node remains highlighted
            even when the tree view has lost the focus.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowHidden">
            <summary>
            Is set to 'true', hidden elements will be shown too.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowNetHood">
            <summary>
            If set to 'false', the Network Neighbourhood will be hidden.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowOverlayIcons">
            <summary>
            If set to 'false', no overlay icons will be show, which improves the performance of the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowContextMenu">
            <summary>
            If set to true, the Windows Explorer context menu will be shown, if the user right-clicks.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.NoFillOnStartup">
            <summary>
            If set to true, the control will not fill automatically after it was created.
            The <see cref="M:Jam.Shell.IShellControl.FullRefresh"/> method must be called explicitly.
            Since filling shell control with the appropriate items is a costly operation, this
            property can be useful to prevent unnecessary refreshes of the control.
            </summary>
            <remarks>Note, that the inital location set via <see cref="P:Jam.Shell.ShellTreeView.SelectedPath"/> or <see cref="P:Jam.Shell.ShellTreeView.SpecialFolder"/> might not be applied, if this property is set.</remarks>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowRecycleBin">
            <summary>
            If set to true, the recycly bin will be visible. If set to false, the recycle bin will be hidden.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowErrorMessages">
            <summary>
            If set to true, messages boxes will be shown to the user for errors that occured.
            If set to false, errors will be handled as well, but no message will be shown to the user.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowFiles">
            <summary>
            If set to true, files will be shown in the control.
            If set to false, files will not be visible in the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.BackColor">
            <summary>
            A System.Drawing.Color that represents the background color of the control.
            The default is the value of the System.Windows.Forms.Control.DefaultBackColor
            property.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowColorCompressed">
            <summary>
            If set, compressed files an folders will be shown in that particular Color, if null have show normally
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowColorEncrypted">
            <summary>
            If set, encrypted files an folders will be shown in that particular color, show normally otherwise (if null).
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.ShowRootLines">
            <summary>
            Indicates whether lines are displayed between root nodes.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellTreeView.IsInAfterLabelEdit">
            <summary>
            Keeps track if a node is currently in afterLabelEdit
            Node.IsEditing is already false when AfterLabelEdit is started, but we need to skip notifications until everything is finished.
            </summary>
        </member>
        <member name="T:Jam.Shell.UpdateFolderEventArgs">
            <summary>
            the UpdateFolderEventArgs carries the environment of a ShellTreeNode that
            has just been Detail-completed
            </summary>
        </member>
        <member name="F:Jam.Shell.UpdateFolderEventArgs.m_Node">
            <summary>The unused.</summary>
        </member>
        <member name="P:Jam.Shell.UpdateFolderEventArgs.Node">
            <summary>
            the node that got the update event
            </summary>
        </member>
        <member name="P:Jam.Shell.UpdateFolderEventArgs.Sender">
            <summary>
            the object that triggered the event
            </summary>
        </member>
        <member name="M:Jam.Shell.UpdateFolderEventArgs.#ctor(System.Object,Jam.Shell.ShellTreeNode)">
            <summary>
            the constructor of the UpdateFolderEventArgs
            </summary>
            <param name="p_Sender">the sender of the event</param>
            <param name="p_Node">the node the event is associated with</param>
        </member>
        <member name="T:Jam.Shell.AddTreeNodeEventArgs">
            <summary>
            Provides data for the <see cref="M:Jam.Shell.ShellTreeView.OnAddTreeNode(Jam.Shell.ShellTreeNode)"/> event.
            </summary>
        </member>
        <member name="P:Jam.Shell.AddTreeNodeEventArgs.Node">
            <summary>
            The <see cref="T:Jam.Shell.ShellTreeNode"/> that should be added.
            </summary>
        </member>
        <member name="M:Jam.Shell.AddTreeNodeEventArgs.#ctor(Jam.Shell.ShellTreeNode)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.AddTreeNodeEventArgs"/> class.
            </summary>
            <param name="aNode">The ShellTreeNode that thas should be added</param>
        </member>
        <member name="P:Jam.Shell.AddTreeNodeEventArgs.CanAdd">
            <summary>
            Set this property to <c>false</c> if you want to prevent <see cref="P:Jam.Shell.AddTreeNodeEventArgs.Node"/> from being added.
            </summary>
            <remarks>The default value of this property is <c>true</c></remarks>
        </member>
        <member name="P:Jam.Shell.AddTreeNodeEventArgs.FullPath">
            <summary>
            the full path of the TreeNode that is associated to the currently handled event 
            </summary>
        </member>
        <member name="T:Jam.Shell.NodeCheckStateChangedEventArgs">
            <summary>
            The NodeCheckStateChangedEventArgs contains data for the <see cref="E:Jam.Shell.ShellTreeView.CheckStateChanged"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.NodeCheckStateChangedEventArgs.#ctor(Jam.Shell.ShellTreeNode,Jam.Shell.CheckState)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.NodeCheckStateChangedEventArgs"/> class.
            <seealso cref="T:Jam.Shell.ItemCheckStateChangedEventArgs`1"/>
            </summary>
            <param name="node"><see cref="T:Jam.Shell.ShellTreeNode"/> object, which contains information about the item, where the <see cref="T:Jam.Shell.CheckState"/> has changed.</param>
            <param name="oldCheckState">Contains the <see cref="T:Jam.Shell.CheckState"/>, which the item had before it was changed.</param>
        </member>
        <member name="T:Jam.Shell.DummyHasChildrenTreeNode">
            <summary>
            Dummy node used to make visible the + symbol next to folders with subfolders
            </summary>
        </member>
        <member name="T:Jam.Shell.SystemImageListHelper">
            <summary>
            class that helps dealing with the system image list and returns icon indexes for files and folders
            </summary>    
        </member>
        <member name="P:Jam.Shell.SystemImageListHelper.Size">
            <summary>Gets or sets the size.</summary>
            <value>The size.</value>
        </member>
        <member name="P:Jam.Shell.SystemImageListHelper.ImageWidth">
            <summary>Gets the width of the image.</summary>
            <value>The width of the image.</value>
        </member>
        <member name="P:Jam.Shell.SystemImageListHelper.ImageHeight">
            <summary>Gets the height of the image.</summary>
            <value>The height of the image.</value>
        </member>
        <member name="P:Jam.Shell.SystemImageListHelper.BackColor">
            <summary>
            The BackColor for the imagelist.
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.#ctor">
            <summary>
            Creates a new instance of the <see cref="T:Jam.Shell.SystemImageListHelper"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.#ctor(Jam.Shell.SystemImageListSize)">
            <summary>
            Creates a new instance of the <see cref="T:Jam.Shell.SystemImageListHelper"/> class with the spcified image list size.
            </summary>
            <param name="aSize">The size of the images.</param>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.#ctor(Jam.Shell.SystemImageListSize,System.Boolean)">
            <summary>
            Creates a new instance of the <see cref="T:Jam.Shell.SystemImageListHelper"/> class with the spcified image list size.
            </summary>
            <param name="pSize">The size of the images.</param>
            <param name="pCached"></param>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.SizeForViewState(Jam.Shell.ViewState)">
            <summary>
            Gets the SystemImageListSize for the viewState.
            </summary>
            <param name="viewState">An <see cref="T:Jam.Shell.ViewState"/> value</param>
            <returns>The matching <see cref="T:Jam.Shell.SystemImageListSize"/> value</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetFileInfo(System.String,System.Boolean,System.IO.FileAttributes,Jam.Shell.SystemImageListSize)">
            <summary>
            Wrapper around the Shell API function SHGetFileInfo()
            </summary>
            <param name="pFilepath">Path to the file or folder, for which the icon number should be returned.</param>
            <param name="pOpened">true, if the icon should be returned open, like it is often used for the selected node in treeviews.</param>
            <param name="pAttributes">The file attributes that should be used. Usually 0 is passed here.</param>
            <param name="pSize">see enumeration <see cref="T:Jam.Shell.SystemImageListSize"/></param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetIndexFromPath(System.String)">
            <summary>
            Returns the icon index for the passed file
            </summary>
            <param name="pPath">A path to a file</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetFileType(System.String)">
            <summary>
            Returns the description text for the passed file extension 
            </summary>
            <param name="pExtension">a file extension like "TXT".</param>
            <returns>The description text for the file type</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetFileType(System.String,System.Boolean)">
            <summary>Returns the description text for the passed file extension. </summary>
            <exception cref="T:System.ArgumentNullException">
            Thrown when one or more required arguments are null.
            </exception>
            <param name="pExtension">a file extension like "TXT". </param>
            <param name="pIsFolder">true if this object is folder. </param>
            <returns>The description text for the file type. </returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetIndexFromItemIdList(Jam.Shell.ItemIdList,System.Boolean,Jam.Shell.SystemImageListSize)">
            <summary>
            Returns the icon index of the passed ItemIdList.
            </summary>
            <param name="pItemIdList">A Shell ItemIdList.</param>
            <param name="pOpened">true, if the icon should be returned open, like it is often used for the selected item in a treeview.</param>
            <param name="pSize">The size of the icon.</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="T:Jam.Shell.SystemImageListHelper.SetIconDelegate">
            <summary>
            Delegate for the method that is called when an icon is retreived.
            </summary>
            <param name="newIndex">The index of the icon in the matching ImageList</param>
            <param name="overlay">The icon that was retreived is an overlay image. </param>
        </member>
        <member name="T:Jam.Shell.SystemImageListHelper.FetchIconArgs">
            <summary>
            Contains parameters passed to <see cref="M:Jam.Shell.SystemImageListHelper.FetchIcon(System.Object)"/>.
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListHelper.FetchIconArgs.Callback">
            <summary>
            Method that is called when the icon is fetched. Likely some "invoke" method that will update the GUI thread safely.
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListHelper.FetchIconArgs.Pidl">
            <summary>
            The pidl
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListHelper.FetchIconArgs.Opened">
            <summary>
            If the opened icon should be fetched
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListHelper.FetchIconArgs.Overlay">
            <summary>
            If the overlay icon should be fetched
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListHelper.FetchIconArgs.Size">
            <summary>
            The size of the icon
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.FetchIconArgs.#ctor(Jam.Shell.SystemImageListHelper.SetIconDelegate,Jam.Shell.ItemIdList,System.Boolean,System.Boolean,Jam.Shell.SystemImageListSize)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.SystemImageListHelper.FetchIconArgs" /> struct.
            </summary>
            <param name="callback">The callback.</param>
            <param name="pidl">The pidl.</param>
            <param name="opened">If the icon should be retrieved in opened state</param>
            <param name="overlay">if set to <c>true</c> the overlay icon is fetched instead the normal one.</param>
            <param name="size">The size.</param>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.FetchIcon(System.Object)">
            <summary>
            Fetches the icon. Parameter state specifies the details of the icon to be fetched.
            </summary>
            <param name="state">A <see cref="T:Jam.Shell.SystemImageListHelper.FetchIconArgs"/> instance that holds the information needed to fetch the right icon.</param>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.FetchIconAsync(Jam.Shell.ItemIdList,System.Boolean,System.Boolean,Jam.Shell.SystemImageListSize,Jam.Shell.SystemImageListHelper.SetIconDelegate,System.Int32)">
            <summary>
            Fetches the icon asynchronously.
            </summary>
            <param name="itemIdList">The item identifier list.</param>
            <param name="opened">if set to <c>true</c> the icon is fetched in the opened state.</param>
            <param name="overlay">if set to <c>true</c> the overlay icon is fetched instead of the normal or opened icon</param>
            <param name="size">The size.</param>
            <param name="callback">The callback that is called when the icon is retreived successfully.</param>
            <param name="workItemTag">The work item tag. Typically the tag of the ShellList/Tree that holds the item</param>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetSpecialFolderIcon(System.Environment.SpecialFolder,System.Boolean)">
            <summary>
            Returns the icon index of the passed special folder.
            </summary>
            <param name="pSpecialFolder">A constant from <see cref="T:System.Environment.SpecialFolder"/></param>
            <param name="pOpened">true, if the icon should be returned open, like it is often used for the selected item in a treeview.</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetSpecialFolderIcon(System.Environment.SpecialFolder)">
            <summary>
            Returns the icon index of the passed special folder.
            </summary>
            <param name="pSpecialFolder">A constant from Environment.specialFolder</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.SetSystemImageList(System.Windows.Forms.ListView)">
            <summary>
            Assigns the system image list of Windows as image list to a ListView
            </summary>
            <param name="aListView">A ListView</param>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.SetSystemImageList(System.Windows.Forms.TreeView)">
            <summary>
            Assigns the system image list of Windows as image list to a TreeView
            </summary>
            <param name="aTreeView">A TreeView</param>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetIconAsBitmap(System.Int32)">
            <summary>
            Returns the requested image of the system image list as bitmap.
            </summary>
            <param name="iconNumber">The index of the requested icon in the system image list.</param>
            <returns>A bitmap of the requested icon.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetIconAsBitmap(System.Int32,System.Drawing.Size,System.Drawing.Color)">
            <summary>
            Returns the requested image of the system image list as bitmap.
            </summary>
            <param name="pIconNumber">The index of the requested icon in the system image list.</param>
            <param name="pSize">The size of the bitmap that should be returned.</param>
            <param name="pFrameColor">Specifies the color of the frame of the returned image. If null is passed, the images has no frame.</param>
            <returns>A bitmap of the requested icon.</returns>
            <seealso cref="P:Jam.Shell.SystemImageListHelper.Size"/>
            <seealso cref="M:Jam.Shell.SystemImageListHelper.GetFileInfo(System.String,System.Boolean,System.IO.FileAttributes,Jam.Shell.SystemImageListSize)"/>
            <seealso cref="M:Jam.Shell.SystemImageListHelper.GetSpecialFolderIcon(System.Environment.SpecialFolder,System.Boolean)"/>
            <seealso cref="M:Jam.Shell.SystemImageList.GetSpecialFolderIcon(Jam.Shell.ShellFolder,System.Boolean)"/>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetIconAsBitmap(System.Int32,System.Drawing.Size,System.Drawing.Color,System.Boolean)">
            <summary>
            Returns the requested image of the system image list as bitmap.
            </summary>
            <param name="pIconNumber">The index of the requested icon in the system image list.</param>
            <param name="pSize">The size of the bitmap that should be returned.</param>
            <param name="pFrameColor">Specifies the color of the frame of the returned image. If null is passed, the images has no frame.</param>
            <param name="p_ExtraLarge">Get extra large icons in Windows Vista</param>
            <returns>A bitmap of the requested icon.</returns>
            <seealso cref="P:Jam.Shell.SystemImageListHelper.Size"/>
            <seealso cref="M:Jam.Shell.SystemImageListHelper.GetFileInfo(System.String,System.Boolean,System.IO.FileAttributes,Jam.Shell.SystemImageListSize)"/>
            <seealso cref="M:Jam.Shell.SystemImageListHelper.GetSpecialFolderIcon(System.Environment.SpecialFolder,System.Boolean)"/>
            <seealso cref="M:Jam.Shell.SystemImageList.GetSpecialFolderIcon(Jam.Shell.ShellFolder,System.Boolean)"/>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.ReplaceIconByThumbnail(System.Windows.Forms.ImageList,System.Int32,System.Drawing.Image,System.Drawing.Image)">
            <summary>
            This method replaces a bitmap in the imagelist at the given index.
            It paints images smaller than the thumbnail itself to the middle of the bitmap
            by creating a resized image canvas and redrawing it.
            </summary>
            <param name="pImageList">The ImageList where the image sgould be added.</param>
            <param name="pImageIndex">The index for the new image.</param>
            <param name="pThumbnail">The new image.</param>
            <param name="pBitmapSource">The source used to create the Image. Only free after freeing the Image. May be null.</param>
        </member>
        <member name="P:Jam.Shell.SystemImageListHelper.InterpolationMode">
            <summary>
            Get or set the Interpolation mode that the <see cref="T:Jam.Shell.SystemImageListHelper"/> will use
            to render the Thumbnails. Change this property to optimize image rendering for quality or 
            speed.
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetFileIcon(System.String,Jam.Shell.SystemImageListSize,System.Boolean)">
            <summary>
            Returns the Icon for the specified filePath.
            </summary>
            <param name="pName">full path of the file</param>
            <param name="pSize">If set to SystemImageListSize.SmallIcons small icons are returned, large icons in all other cases</param>
            <param name="pLinkOverlay">if true icons include the links overlay</param>
            <returns>The icon of the specified path with the given parameters.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetCheckboxImageList">
            <summary>
            Provides an image list with the checkbox states of the <see cref="T:Jam.Shell.CheckState"/> enumeration.
            </summary>
            <returns>A <see cref="T:System.Windows.Forms.ImageList"/></returns>
        </member>
        <member name="M:Jam.Shell.SystemImageListHelper.GetCheckboxBitmap(System.Windows.Forms.VisualStyles.CheckBoxState)">
            <summary>
            Extracts the Checkbox state images for the checkbox functionality in the ShellBrowser Components.
            </summary>
            <param name="cbstate">Checkbox state, for which the bitmap should be extracted.</param>
            <returns>Returns Bitmap of the checkbox for the passed check state.</returns>
        </member>
        <member name="T:Jam.Shell.IOleDropTarget">
            <summary>
            The IDropTarget com interface
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellApiWinforms">
            <summary>
            static helper class for accessing Windows API and Shell API stuff
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellApiWinforms.GetFileNamesFromIDataObjectW(System.Windows.Forms.IDataObject)">
            <summary>
            Retrieves the filenames from the given IDataObject (Unicode)
            </summary>
            <param name="p_IDataObject">IDataObject from Drag+Drop</param>
            <returns>Returns the filenames from the IDataObject. 
            Returns null if no filenames could be retrieved.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApiWinforms.GetFileNamesFromIDataObjectA(System.Windows.Forms.IDataObject)">
            <summary>
            Retrieves the filenames from the given IDataObject (Ansi)
            </summary>
            <param name="p_IDataObject">IDataObject from Drag+Drop</param>
            <returns>Returns the filenames from the IDataObject. 
            Returns null if no filenames could be retrieved.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApiWinforms.EnableAutoComplete(System.Windows.Forms.TextBox,System.Boolean,System.Boolean)">
            <summary>
            Enables the AutoComplete mode of a TextBox component.
            </summary>
            <param name="p_TextBox">The TextBox control to enable the autocomplete mode for.</param>
            <param name="p_FileSystem">If true the filesystem autocompletion is enabled.</param>
            <param name="p_URL">If true the url autocompletion is enabled.</param>
            <returns>True, if auto completion was successfully enabled.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApiWinforms.PerformScroll(System.Windows.Forms.Control,System.Windows.Forms.AnchorStyles)">
            <summary>
            Performs a scroll on the given control.
            </summary>
            <param name="pControlToScroll">The control where the scroll should be performed.</param>
            <param name="pBorder">Specifies where to scroll.</param>
        </member>
        <member name="M:Jam.Shell.ShellApiWinforms.CheckAutoScroll(System.Windows.Forms.Control,System.Drawing.Point,System.Int32)">
            <summary>
            Checks if an auro scroll should be performed.
            If the mouse coursor is near the border of the control's client area, then a scroll operation will be performed in the appropriate direction.
            </summary>
            <param name="p_ControlToScroll">The control for that should be checked, if an auto scroll should be performed.</param>
            <param name="p_Point">The position of the mouse cursor inside the control, relative to the control.</param>
            <param name="p_DelayMilliSeconds">The delay in milliseconds between two autoscroll operations.</param>
            <returns>true if a scroll has been performed, false otherwise</returns>
            <remarks>
            This function can be useful during drag&amp;drop operations in scrollable controls.
            </remarks>
        </member>
        <member name="T:Jam.Shell.ListViewEx">
            <summary>
            Provides extensions to modify the behaviour of windows listviews
            </summary>
        </member>
        <member name="M:Jam.Shell.ListViewEx.SetColumnBitmap(System.Windows.Forms.ListView,System.Int32,System.Windows.Forms.SortOrder)">
            <summary>
            Set the sort icon among the current sort order in the passed column.
            </summary>
            <param name="listView">The ListView control to get the window handle from.</param>
            <param name="colIndex">Contains the index of the column, where the sort icon should be added.</param>
            <param name="sortOrder">Contains information about the sort order, to get the correct sort icon from the operating system.</param>
        </member>
        <member name="M:Jam.Shell.ListViewEx.SetListViewItemState(System.IntPtr,System.Int32,Jam.Shell.LVIS,Jam.Shell.LVIS)">
            <summary>
            Sets the state of a listview item
            </summary>
            <param name="lvHandle">handle to the listview</param>
            <param name="index">index of the item in the listview</param>
            <param name="stateMask">mask to determine which state is to be set</param>
            <param name="state">the new state that is applied to the listitem</param>
        </member>
        <member name="T:Jam.Shell.Com.IDragSourceHelper2">
            <summary>
            Exposes a method that adds functionality to IDragSourceHelper. This method sets the characteristics of a drag-and-drop operation over an IDragSourceHelper object.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IDragSourceHelper2.InitializeFromBitmap(Jam.Shell.Com.ShDragImage@,System.Runtime.InteropServices.ComTypes.IDataObject)">
            <summary>
            Initializes the drag-image manager for a windowless control.
            </summary>
            <param name="dragImage">The drag image.</param>
            <param name="dataObject">The data object.</param>
        </member>
        <member name="M:Jam.Shell.Com.IDragSourceHelper2.InitializeFromWindow(System.IntPtr,System.Drawing.Point@,System.Runtime.InteropServices.ComTypes.IDataObject)">
            <summary>
            Initializes the drag-image manager for a control with a window.
            </summary>
            <param name="hwnd">The HWND.</param>
            <param name="pt">The pt.</param>
            <param name="dataObject">The data object.</param>
        </member>
        <member name="M:Jam.Shell.Com.IDragSourceHelper2.SetFlags(System.Int32)">
            <summary>
            Sets the characteristics of a drag-and-drop operation over an IDragSourceHelper object.
            </summary>
            <param name="dwFlags">The dw flags.</param>
        </member>
        <member name="T:Jam.Shell.Com.ShDragImage">
            <summary>
            Contains the information needed to create a drag image.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.ShDragImage.sizeDragImage">
            <summary>
            A SIZE structure with the length and width of the drag image.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.ShDragImage.ptOffset">
            <summary>
            A POINT structure that specifies the location of the cursor within the drag image. The structure should contain the offset from the upper-left corner of the drag image to the location of the cursor.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.ShDragImage.hbmpDragImage">
            <summary>
            The drag image's bitmap handle.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.ShDragImage.crColorKey">
            <summary>
            The color used by the control to fill the background of the drag image.
            </summary>
        </member>
        <member name="T:Jam.Shell.NamespaceDoc">
            <summary>
            This is the namespace for the JAM Software Shell Components mainly consisting of ShellBrowser, ShellTreeView, ShellListView, ShellSystemListView, ShellHistoryToolstrip and ShellComboBox. 
            It is possible to easily connect these components by ShellControlConnector to make them work together fluently.
            </summary>
        </member>
        <member name="T:Jam.Shell.ContextMenuCallBackForm">
            <summary>
            Used internally to receive callback messages from the context menu
            </summary>
        </member>
        <member name="T:Jam.Shell.GetThumbnailCallback">
            <summary>
            Delegate for the callback function for retreiving a thumbnail using the asynchronous version of GetThumbnailBitmap().
            </summary>
            <param name="pImage">The Bitmap containing the thumbnail image.</param>
            <param name="pBitmapSource">The source that was used to create the Image. May be null.</param>
            <param name="pState">An optional, user-provided object that was supplied when calling the asynchronous version of GetThumbnailBitmap().</param>
        </member>
        <member name="T:Jam.Shell.ShellBrowser">
            <summary>
            The ShellBrowser component is a non-visual component and allows you to browse to the shell name
            space of Windows, to query information about shell objects and to perform context menu operations.
            </summary>
            <remarks>
            ShellBrowserBase is a non-visual component. The property <see cref="P:Jam.Shell.ShellBrowserBase.Folder"/>
            contains the path of the current folder, <see cref="P:Jam.Shell.ShellBrowserBase.ObjectName"/> contains the
            name of the current object. Use the method <see cref="M:Jam.Shell.ShellBrowserBase.Next"/> to enumerate the objects
            in the current folder. 
            Use <see cref="P:Jam.Shell.ShellBrowserBase.IsFolder"/> to check if the current object is a folder.
            <see cref = "P:Jam.Shell.ShellBrowser.IconNumber"/> contains the number of the
            corresponding icon of the current object in the system icon list. The method
            <see cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point)"/> shows the context menu of the current object
            at a given point. You can shuffle your own popup menus together with the explorer context menu.
            <see cref="M:Jam.Shell.ShellBrowser.InvokeContextMenuCommand(Jam.Shell.ShellCommand)"/> will execute a command of
            the context menu, for example 'properties', 'default' or 'delete'.     
            </remarks>
        </member>
        <member name="F:Jam.Shell.ShellBrowser.MAX_COLUMNS">
            <summary>
            Max number of columns.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellBrowser.PARENTFOLDER_NUMBER_XP">
            <summary>
            Special treatment for XP were we don't have the ParentFolder column
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.#cctor">
            <summary>
            Static constructor. Currently we create the precondition to have async file operations on Windows Vista and higher.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.#ctor(Jam.Shell.ShellFolder)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellBrowserBase"/> class and assigns its <see cref="P:Jam.Shell.ShellBrowserBase.SpecialFolder"/> property
            </summary>
            <param name="p_ShellFolder">The initial special folder</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellBrowser"/> class.
            Since version 4.0 <see cref="P:Jam.Shell.ShellBrowserBase.SpecialFolder"/> does not point to <see cref="F:Jam.Shell.ShellFolder.Drives"/> anymore,
            use <see cref="M:Jam.Shell.ShellBrowser.#ctor(Jam.Shell.ShellFolder)"/> constructor instead, this is due to performance reasons.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellBrowser"/> class makes the object with the given path the active object.
            </summary>
            <param name="ObjectPath">The file system path of the object that should be initially the active object.</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.#ctor(Jam.Shell.ItemIdList)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellBrowser"/> class makes the object with the given ItemIdList the active object.
            </summary>
            <param name="ActiveShellObject">Absolute ItemIdList to the object that should be the initial active object.</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.#ctor(Jam.Shell.ShellBrowser)">
            <summary>
            Initializes a copy of the given ShellBrowser.
            </summary>
            <remarks>Note that event handlers will not be copied. Also the ItemIdList is not copied.</remarks>
            <param name="copyBrowser">The ShellBrowser that should be copied.</param>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.AsyncOperations">
            <summary>
            Activates asynchronous file operations executed via <see cref="M:Jam.Shell.ShellBrowser.InvokeContextMenuCommand(Jam.Shell.ShellCommand)"/>.
            </summary>
            <remarks>Depending on OS version and ContextMenu operation does not always apply.</remarks>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.ReadOnly">
            <summary>
            If set to 'true', context menu operations that make changes to the file system will not be executed.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.DefaultSortColumn">
            <summary>
            Get the default sort column of the currently selected ShellFolder.
            </summary>
            <returns>The default sort column of the currently selected ShellFolder.</returns>
            
        </member>
        <member name="P:Jam.Shell.ShellBrowser.ShowShellContextMenuOnTop">
            <summary>
            Decides if the shell context menu is added above or below the supplied ContextMenuStrip.
            </summary>
            <remarks>
            If this property is set to <c>true</c>, the shell context menu will be added on top of the
            the <see cref="T:System.Windows.Forms.ContextMenuStrip"/>, which can be supplied when calling
            <see cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.ContextMenuStrip)"/>. If set to <c>false</c>, the shell
            context menu will be added below the <see cref="T:System.Windows.Forms.ContextMenuStrip"/>.
            </remarks>
            <seealso cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.ContextMenuStrip)"/>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.LogError(System.String,System.Boolean,System.Exception)">
            <summary>
            Error method that displays an error messagebox if the 
            property <see cref="P:Jam.Shell.ShellBrowserBase.ShowErrorMessages"/> is set. 
            The message is always written to the debug output stream
            </summary>
            <param name="message">The errormessage</param>
            <param name="showErrorMessages">Whether to show a messagebox or simply log to debug output</param>
            <param name="exception">A possible exception that is logged as well, may be null</param>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.FileExtensionsHidden">
            <summary>
            Returns true of the system settings for "Hide known file extensions" is set to true.
            </summary>
            <returns>True of the system settings for "Hide known file extensions" is set to true.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.IsAdmin">
            <summary>
            Checks whether the user is admin or not.
            In Vista or later: Determines whether application is running 
            with elevated rights (UAC) or not.
            </summary>
            <returns>True if current user has administrator-rights; false if not</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.MatchPattern(System.String,System.String)">
            <summary>
            Returns true if the given string matched the wild card pattern
            </summary>
            <param name="element">the element to check if it matches the pattern</param>
            <param name="pattern">the pattern ie. *.* or *a?.txt</param>
            <returns>true if the element matched the pattern</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetDefaultSavePathFromLibrary(Jam.Shell.ItemIdList)">
            <summary>For a given Windows 7+ library, this function returns the default save path.</summary>
            <param name="p_AbsoluteItemIdList">The absolute ItemIdList of the Windows 7 Library</param>
            <returns>The default save path for a given Windows 7+ library path, an empty string if the given p_ItemIdList was not a library or an other error occurred.</returns>
            <author>ternes@jam-software.com, marder@jam-software.com, Paolo Righi</author>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ResetFPU">
            <summary>
            Resets the floating point control register to what .NET expects.
            </summary>
            <remarks>
            When ShellBrowser calls Api functions that involve third party ShellExtensions it can happen that the FPU register is changed. 
            As a consequence following .NET framework calls may fail (e.g. ArithmeticExceptions).
            Calling this method resets the original state of the FPU register.
            </remarks>
            <seealso cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.ContextMenuStrip)" />
            <seealso cref="M:Jam.Shell.ShellBrowser.InvokeContextMenuCommand(Jam.Shell.ShellCommand)" />
        </member>
        <member name="F:Jam.Shell.ShellBrowser.m_DesignTimeUsageDenied">
            <summary>
            The component may not be used in Design-Time 
            while the IDEs actively read the values of the component this flag is set
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellBrowser.m_DesignTimeUsageChecked">
            <summary>
            It has not yet been checked whether the component is allowed to be used
            at designtime
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.DesignTimeUsageDenied(System.Boolean)">
            <summary>
            This is the Access denial check on designtime. It always returns "false" if the 
            Software was compiled with the #define JAMSHAREWARE.
            In case of a Full-Version it checks whether a Development-License is present,
            if in DesignMode and m_DesignTimeUsageChecked is false.
            It does so by calling <see cref="M:Jam.Shell.LicenseChecking.VerifyDevelopmentLicense"/> the first
            time and then stores its return value in m_DesignTimeUsageDenied.
            </summary>
            <param name="p_DesignMode">this is the DesignMode property of e.g. <see cref="T:Jam.Shell.ShellTreeView"/> or <see cref="T:Jam.Shell.ShellListView"/>.</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.SetThumbnailProvider(Jam.Shell.ThumbnailUnavailableHandler)">
             <summary>
             Allows to set a callback function that can supply a thumbnail image in case the system cannot provide one.
             </summary>
             <remarks>This is a global setting for each instance of a program. The given bitmap will be freed automatically when no longer needed.</remarks>
             <param name="pMethod"> The callback function that can supply a thumbnail image. </param>
             <example>
             This sample code loads a default image for each thumbnail which cannot be provided.
             <code>
             private void ThumbnailUnavailable(string pPath, System.Drawing.Size pSize, out Bitmap pBitmap)
             {
                 pBitmap = new Bitmap(@"X:\Images\dummy_thumnail.bmp");
             }
            
             private void FormMain_Load(object sender, EventArgs e)
             {
                ShellBrowser.SetThumbnailProvider(ThumbnailUnavailable);
             }
             </code>
             </example>
             <seealso cref="T:Jam.Shell.ThumbnailUnavailableHandler"/>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.OnRenameItemSelected">
            <summary>
            Fires the RenameItemSelected event
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.OnContextMenuItemSelected(System.String)">
            <summary>
            Triggers the ContextMenuItemSelect event.
            </summary>
            <param name="command">The shell command that should be executed.</param>
            <returns><b>true</b> if there is no event handler, or if the event handler decided that the command should be executed; <b>false</b> otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ConnectToServer(System.String)">
            <summary>
            Connects to a remote computer.
            </summary>
            <param name="aUNCPath">The network path as UNC path (like \\server\share) to that should be connected.</param>
            <returns><c>true</c> if the connection was successful; false otherwise.</returns>
            <remarks>
            If the current user is not already authenticated on the remote computer, a login dialog will
            be prompted by the operating system. Otherwise just <c>true</c> will be returned.
            </remarks>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetLastChangeDate">
            <summary>
            Returns the last modified date of the currently active object.
            </summary>
            <returns>
            The last modified date of the currently active object. 
            DateTime.MinValue if the current object is not a file system object and so the last modified date cannot be determined.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetDragEffects">
            <summary>
            Returns which drag effects are possible for the currently active object.
            </summary>
            <returns>A combination of flags of the <see cref="T:System.Windows.Forms.DragDropEffects"/> type that indicate, which operations are possible for the currently active object.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.EnsureExtension(System.String,System.String)">
            <summary>
            Ensures the given extension for a filename or path.
            </summary>
            <param name="pName">Name or path where the extension should be ensured.</param>
            <param name="pExtension">The extension.</param>
            <returns>The given name or path including the given extension.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetDefaultSortColumn">
            <summary>
            Get the default sort column of the currently selected ShellFolder.
            </summary>
            <returns>The default sort column of the currently selected ShellFolder.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetIndexOfShColumnID(Jam.Shell.SHCOLUMNID)">
            <summary>
            Gets the shell index for a given ShColumnID.
            </summary>
            <param name="columnID">A <see cref="T:Jam.Shell.SHCOLUMNID"/>.</param>
            <returns>The index of the given ShColumnId or -1 if could not be found.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetShColumnIdFromColumnNumber(System.Int32)">
            <summary>
            Returns the ShColumnID for the given shell column number.
            </summary>
            <param name="pShellIndex">A shell column number.</param>
            <returns>The ShColumnID for the given shell column number. Returns ShellApi.ShellColumnInvalid if GetIShellDetails or MapColumnToSCID fails.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetColumnText(System.Int32,System.Boolean)">
            <summary>
            Returns the text to show for the currently active item in a certain column.
            </summary>
            <param name="pShellColumnIndex">ShellIndex of the column. Column 0 is usually the name</param>
            <param name="pHeader">true, if the column header text should be returned, false if the text for the currently active item should be returned.</param>
            <returns>The text to display.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetColumnText(Jam.Shell.SHCOLUMNID,System.Boolean)">
            <summary>
            Returns the text to show for the currently active item in a certain column.
            </summary>
            <param name="p_ColumnId">ID of the column.</param>
            <param name="p_Header">true, if the column header text should be returned, false if the text for the currently active item should be returned.</param>
            <returns>The text to display.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetColumnText(Jam.Shell.SHCOLUMNID,System.Boolean,System.Object@)">
            <summary>
            Returns the text which would be displayed in the Details view of the Windows Explorer as String and Variant.
            </summary>
            <param name="p_ColumnId">SHCOLUMNID of the column.</param>
            <param name="p_Header"> <c>true</c>, if the column header text should be returned.
            <c>false</c> if the text for the currently active item should be returned.
            </param>
            <param name="oVariant">Returns the Variant that holds the column text information.</param>
            <returns>The text to display as String and Variant.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetColumnInfo(System.Int32,System.Int32@)">
            <summary>
            Use this function to get information about the columns, which the Explorer uses in the details view. Provides the default alignment and the default width of a column, like Explorer would use it. 
            Use <see cref="M:Jam.Shell.ShellBrowser.GetColumnText(System.Int32,System.Boolean)"/> or <see cref="M:Jam.Shell.ShellBrowser.GetColumnText(Jam.Shell.SHCOLUMNID,System.Boolean)"/> to get the column title or the text for a specific column.
            </summary>
            <param name="pShellIndex">Contains the Shellindex of the column, for which the information should be returned.</param>
            <param name="pWidth">Is an \"out\" parameter, which returns the default width of the column in the Windows Explorer.</param>
            <returns>The function returns the default alignment of the column.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.IsColumnAvailable(System.Int32)">
            <summary>
            Checks whether the given column is available for the current folder.
            </summary>
            <param name="index">The shell column index.</param>
            <returns>True, if it`s available.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.IsColumnAvailable(Jam.Shell.SHCOLUMNID)">
            <summary>
            Checks whether the given column is available for the current folder.
            </summary>
            <param name="columnID">The shell column id.</param>
            <returns>True, if it`s available.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.OnBeforeInvokeCommand(Jam.Shell.BeforeShellCommandEventArgs)">
            <summary>
            This method is called to trigger the <see cref="E:Jam.Shell.ShellBrowserBase.BeforeShellCommand"/>
             event.
            </summary>
            <param name="e">Event information to send to registered event handlers.</param>
            <example>
            Shows the usage of the <see cref="E:Jam.Shell.ShellBrowserBase.BeforeShellCommand"/> event.
            <code source ="CodeExamplesWinforms.cs" region = "BeforeShellCommand" lang="C#"/>
            </example>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.OnAfterInvokeCommand(Jam.Shell.ShellCommandEventArgs)">
            <summary>Is called after the command has been called.</summary>
            <param name="e">Contains the command and the items the command was applied upon.</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.InvokeCommandOnSelected(Jam.Shell.ShellCommand)">
            <summary>
            Executes the given command on the selected items. 
            </summary>
            <param name="pCommand">The command.</param>
            <returns>True if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.InvokeContextMenuCommand(Jam.Shell.ShellCommand)">
            <summary>
            Invokes the given shell command to the active object or, if not empty, to the obejct in the
            MultiObjects property.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the requested operation is invalid.</exception>
            <param name="pCommand">The command as string that should be executed, e.g. "copy" or "open".
            An empty string will invoke the default command.</param>
            <returns>true, if successful. false an error occured.</returns>
            <example>
            Shows the "properties" dialog of the Windows folder.
            <code source ="CodeExamplesWinforms.cs" region = "InvokeContextMenuCommand" lang="C#"/>
            </example>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.InvokeContextMenuCommand(Jam.Shell.ShellCommand,Jam.Shell.IShellCommandInvokable)">
            <summary>
            Invokes the given shell command to the active object or, if not empty, to the obejct in the
            MultiObjects property.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the requested operation is invalid.</exception>
            <param name="pCommand">The command as string that should be executed, e.g. "copy" or "open".
            An empty string will invoke the default command.</param>
            <param name="pSender">The sender of the command that will receive the result.</param>
            <returns>true, if successful. false an error occured.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.InvokeContextMenuCommandOnMultiObjects(System.String)">
            <summary>
            Invokes the given command on multiple objects. Multiobjects needs the fullpath of these objects, if the path is different from the folder
            of the called ShellBrowser instance.
            </summary>
            <param name="command">The command that should be executed</param>
            <returns>True if the command was executed successfully</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.IsFileSystemFolder">
            <summary>
            Checks if the currently active object is a file system object that can be accesses through a path.
            </summary>
            <returns>true, if the currently active object is a file system object, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.IsLinkToFolder">
            <summary>
            Checks if the currently active object is a link to another folder and returns the path to it.
            </summary>
            <returns>the path to the link target, if the currently active object is a link. An empty string if the currently active object is not a link.</returns>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.IconNumber">
            <summary>
            Use IconNumber to get the number of the icon for the current object. 
            </summary>
            <remarks>
            IconNumber contains the number of the icon in the system image list. 
            </remarks>
            <seealso cref="P:Jam.Shell.ShellBrowser.SelectedIconNumber"/>
        </member>
        <member name="P:Jam.Shell.ShellBrowser.SelectedIconNumber">
            <summary>
            Use SelectedIconNumber to get the number of the 'opened' icon for the current object.
            </summary>
            <remarks>
            SelectedIconNumber contains the number of the 'opened' icon in the system image list. Only the selected icons of folder objects will differ from the normal icon.
            </remarks>
            <seealso cref="P:Jam.Shell.ShellBrowser.IconNumber"/>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetInfoTip">
            <summary>
            This method returns the hint text of the current object which is provided by the shell.
            Per default this includes information that might take some time until it is retrieved, (ie. recursively determine folder size)
            </summary>
            <returns>Returns the hint text for the current object.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetInfoTip(System.Boolean)">
            <summary>
            This method returns the hint text of the current object, which is provided by the shell.
            </summary>
            <param name="useSlowInfoTip">if true, also determine info tips that take time (ie. recursively determine folder size)</param>
            <returns>Returns the hint text for the current object.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetDropTarget">
            <summary>
            Returns the Windows Shell IDropTarget interfaces for the currently active object
            </summary>
            <returns>The IDropTarget interface for the active object.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetDropTarget(Jam.Shell.ShellFolder)">
            <summary>
            Returns the Windows Shell IDropTarget interfaces for the currently active object
            </summary>
            <param name="p_ShellFolder">One of the special folder constants for that the Windows Shell IDropTarget interface should be returned.</param>
            <returns>The IDropTarget interface for the given shell folder.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetDataObject">
            <summary>
            Returns the Windows Shell IDataObject interface for the currently active object wrapped into an instance of type <see cref="T:System.Windows.Forms.DataObject"/>.
            </summary>
            <returns>The DataObject for the active object.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetDataObject(Jam.Shell.ItemIdList[])">
            <summary>
            Returns the Windows Shell IDataObject interface for the passed relative <see cref="T:Jam.Shell.ItemIdList"/>s wrapped into an instance of type <see cref="T:System.Windows.Forms.DataObject"/>.
            </summary>
            <param name="pidls">An array of ItemIdLists relative to the active folder.</param>
            <returns>The DataObject for the passed ItemIdLists.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetLinkTarget(System.String)">
            <summary>
            Returns the target a windows file link (.lnk file) is pointing to.
            </summary>
            <param name="pPath">the path to the link</param>
            <returns>null if an error occured. if the file is not link, but a folder or file the empty string is returned. The absolute path to the referenced filename otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ConvertContextMenuStripToContextMenu(System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Converts a ContextMenuStrip instance to a ContextMenu.
            </summary>
            <param name="pContextMenuStrip">The ContextMenuStrip instance to convert</param>
            <returns>an instance of ContextMenu</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.QueryBackgroundContextMenu">
            <summary>
            Queries the Windows-BackgroundContextMenu. 
            This fixes bug #2156.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.ContextMenuStrip,Jam.Shell.IShellCommandInvokable)">
            <summary>
            Shows the shell context menu for the files contained in
            <see cref="P:Jam.Shell.ShellBrowserBase.MultiObjects"/> or the active object, adding the context menu
            entries contained in <paramref name="pContextMenuStrip"/>
            </summary>
            <param name="pPosition">Position on the screen at which the context menu should appear.</param>
            <param name="pContextMenuStrip">ContextMenuStrip that should be merged with the shell context
            menu, or <c>(ContextMenuStrip)null</c> if there is no ContextMenuStrip to merge.</param>
            <param name="pSender">The sender of the command that will receive events.</param>
            <returns>
            The shell command that was executed, an empty string if no shell command was executed.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.ContextMenuStrip)">
            <summary>
            Shows the shell context menu for the files contained in
            <see cref="P:Jam.Shell.ShellBrowserBase.MultiObjects"/> or the active object, adding the context menu
            entries contained in <paramref name="pContextMenuStrip"/>
            </summary>
            <param name="pPosition">Position on the screen at which the context menu should appear.</param>
            <param name="pContextMenuStrip">ContextMenuStrip that should be merged with the shell context
            menu, or <c>(ContextMenuStrip)null</c> if there is no ContextMenuStrip to merge.</param>
            <returns>
            The shell command that was executed, an empty string if no shell command was executed.
            </returns>
            <example>
            Showing the context menu for the Windows folder and adding additional menu items from the passed ContextMenuStrip
            <code source ="CodeExamplesWinforms.cs" region = "ShowContextMenu3" lang="C#"/>
            </example>
            <example>
            Shows the usage of the <see cref="E:Jam.Shell.ShellBrowserBase.BeforeShellCommand"/> event.
            <code source ="CodeExamplesWinforms.cs" region = "BeforeShellCommand" lang="C#"/>
            </example>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.Menu)">
            <summary>
            Shows the shell context menu for the files contained in
            <see cref="P:Jam.Shell.ShellBrowserBase.MultiObjects"/> or the active object, adding the context menu
            entries contained in <paramref name="pMenu"/>
            </summary>
            <param name="pPosition">Position on the screen at which the context menu should appear.</param>
            <param name="pMenu">The menu to merge with the shell context menu, or <c>(Menu)null</c> if
            there is no menu to merge.</param>
            <returns>
            The shell command that was executed, an empty string if no shell command was executed.
            </returns>
            <seealso cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point)"/>
            <seealso cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.ContextMenuStrip)"/>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.Menu,Jam.Shell.IShellCommandInvokable)">
            <summary>
            Shows the shell context menu for the files contained in
            <see cref="P:Jam.Shell.ShellBrowserBase.MultiObjects"/> or the active object, adding the context menu
            entries contained in <paramref name="pMenu"/>
            </summary>
            <param name="p">Position on the screen at which the context menu should appear.</param>
            <param name="pMenu">The menu to merge with the shell context menu, or <c>(Menu)null</c> if
            there is no menu to merge.</param>
            <param name="pSender">The sender of the command that will receive events. Can be null.</param>
            <returns>
            The shell command that was executed, an empty string if no shell command was executed.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point)">
            <summary>
            Shows the shell context menu for the files contained in <see cref="P:Jam.Shell.ShellBrowserBase.MultiObjects"/> or the active object.
            </summary>
            <param name="p">Position on the screen at which the context menu should appear.</param> 
            <returns>The shell command that was executed, an empty string if no shell comand was executed.</returns>
            <example>
            Showing the context menu for the Windows folder:
            <code source = "CodeExamplesWinforms.cs" region = "ShowContextMenu1" lang="C#"/>
            </example>
            <example>
            Showing the context menu for 2 pdf files:
            <code source = "CodeExamplesWinforms.cs" region = "ShowContextMenu2" lang="C#"/>
            </example>
            <seealso cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.Menu)"/>
            <seealso cref="M:Jam.Shell.ShellBrowser.ShowContextMenu(System.Drawing.Point,System.Windows.Forms.ContextMenuStrip)"/>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetThumbnailBitmap(System.Drawing.Size)">
            <summary>
            Returns the thumbnail image of the currently active shell object in the requested size.
            </summary>
            <param name="p_Size">The size the returned thumbnail should have.</param>
            <returns>The thumbnail image as bitmap.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetThumbnailBitmap(System.Drawing.Size,Jam.Shell.GetThumbnailCallback,System.Object)">
            <summary>
            Asynchronously extracts the thumbnail image of the currently active shell object in the requested size.
            <i>Only for folders on Vista or later</i> the size will always be quadratic with side length being the smallest of either p_Size.Width or p_Size.Height, 
            to avoid a stretching - use the synchronous call <see cref="M:Jam.Shell.ShellBrowser.GetThumbnailBitmap(System.Drawing.Size)"/> if you'd like to explicitly specify the dimensions
            </summary>
            <param name="p_Size">The size the returned thumbnail should have.</param>
            <param name="p_CallBack">The method to be called when this asynchronous operation is completed.</param>
            <param name="p_State">An optional, user-provided object that distinguishes this particular asynchronous request from other requests.</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetThumbnailBitmap(System.Drawing.Size,Jam.Shell.GetThumbnailCallback,System.Object,System.Int32)">
            <summary>
            Asynchronously extracts the thumbnail image of the currently active shell object in the requested size.
            <i>Only for folders on Vista or later</i> the size will always be quadratic with side length being the smallest of either p_Size.Width or p_Size.Height, 
            to avoid a stretching - use the synchronous call <see cref="M:Jam.Shell.ShellBrowser.GetThumbnailBitmap(System.Drawing.Size)"/> if you'd like to explicitly specify the dimensions
            </summary>
            <param name="p_Size">The size the returned thumbnail should have.</param>
            <param name="p_CallBack">The method to be called when this asynchronous operation is completed.</param>
            <param name="p_State">An optional, user-provided object that distinguishes this particular asynchronous request from other requests.</param>
            <param name="handle">The handle of the calling control. Used to tag the WorkerItems and to remove old WorkerItems tagged with this handle.</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetThumbnailBitmap(System.Drawing.Size,Jam.Shell.GetThumbnailCallback,System.Object,System.Int32,System.Boolean)">
            <summary>
            Asynchronously extracts the thumbnail image of the currently active shell object in the requested size.
            <i>Only for folders on Vista or later</i> the size will always be quadratic with side length being the smallest of either p_Size.Width or p_Size.Height, 
            to avoid a stretching - use the synchronous call <see cref="M:Jam.Shell.ShellBrowser.GetThumbnailBitmap(System.Drawing.Size)"/> if you'd like to explicitly specify the dimensions
            </summary>
            <param name="p_Size">The size the returned thumbnail should have.</param>
            <param name="p_CallBack">The method to be called when this asynchronous operation is completed.</param>
            <param name="p_State">An optional, user-provided object that distinguishes this particular asynchronous request from other requests.</param>
            <param name="handle">The handle of the calling control. Used to tag the WorkerItems and to remove old WorkerItems tagged with this handle.</param>
            <param name="p_UseIcons">If true the icon is used as thumbnail, if the file doesn't support thumbnails </param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.ThumbnailThreadProc(System.Object)">
            <summary>
            Gets the thumbnail within a worker item.
            </summary>
            <param name="pThumbInfo">The state of the worker item.</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.FromHbitmap(System.IntPtr,System.Drawing.Size,System.Drawing.Bitmap@)">
            <summary>
            Converts a handle to a HBITMAP structure to an Image instance.
            If the size given is lesser than 256 pixels in width and height,
            the alpha channel is preserved.
            </summary>
            <param name="pHBitmap">hbitmap handle</param>
            <param name="pSize">size structure</param>
            <param name="pBitmapSource">The source used to create the Image. Only free after freeing the Image. May be null.</param>
            <returns>An instance of <see cref="T:System.Drawing.Image"/></returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.GetOverlayIndex">
            <summary>
            Use GetOverlayIndex to get the index of the overlay icon of the current object.
            </summary>
            <returns>Returns the index of the overlay icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.RenameObject(System.String)">
            <summary>
            Renames the current object.
            </summary>
            <param name="newName">the new name that should be set for the current object.</param>
            <returns>The actual name of the current object after the attempt to rename it. It may happen that Windows does not allow the rename, then the old name will be returned. Otherwise the new name should be returned.</returns>
            <exception cref="T:System.ArgumentNullException">if null was passed for the newName parameter</exception>
        </member>
        <member name="M:Jam.Shell.ShellBrowser.RenameObject(System.String,System.Boolean@)">
            <summary>
            Renames the current object.
            </summary>
            <param name="newName">the new name that should be set for the current object.</param>
            <param name="success">out parameter that is true if the rename was successful</param>
            <returns>The actual name of the current object after the attempt to rename it. It may happen that Windows does not allow the rename, then the old name will be returned. Otherwise the new name should be returned.</returns>
            <exception cref="T:System.ArgumentNullException">if null was passed for the newName parameter</exception>
        </member>
        <member name="E:Jam.Shell.ShellBrowser.ContextMenuItemSelected">
            <summary>
            This event is fired when a context menu item is selected.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellBrowser.RenameItemSelected">
            <summary>
            This event is fired when the context menu option "Rename" is selected.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellControlHelper">
            <summary>
            A class with several helpful methods.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.VariantToString(System.Object,Jam.Shell.SHCOLUMNID)">
            <summary> This method converts the given variant to a string. </summary>
            <param name="pVariant">The variant that should be converted.</param>
            <param name="pColumnType">An optional shell column that can be passed and is used to determine the type of the variant.</param>
            <remarks>
            If a VariantArray is passed, the variants are concatenated by semicolons.
            If the ShColumnId is the VolumeFreeSize or Size column, the byte size is formated.
            If the ShColumnId is the write, create or access time, the given UTC time is converted to local time.
            </remarks>
            <returns> The converted variant as a String. </returns>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.GetCurrentDPI">
            <summary>
            Returns the currently set DPI.
            </summary>
            <returns>The current value for Dots per Inch.</returns>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.CreateDragHelper(System.Runtime.InteropServices.ComTypes.IDataObject)">
            <summary>Creates a <c>IDragSourceHelper</c> COM object that enables Windows Vista+ style drag images and drag hints.</summary>
            <param name="pForDataObject">The data object for which the <c>IDragSourceHelper</c> should be created.</param>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.SetEditableCaption(System.IntPtr,System.String)">
            <summary>
            Sets the editable caption of the editable component of a control.
            </summary>
            <param name="pEditControlHandle">The handle of the edit control of the component, the editable text is applied to. Retrievable e.g. by LVM.LVM_GETEDITCONTROL for a ListView.</param>
            <param name="pLabelText">The text that should appear on editing.</param>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.SetEditableCaption(System.IntPtr,Jam.Shell.IShellItem,System.String,System.String@)">
            <summary>
            Sets the editable caption of the editable component of a control.
            Currently removes the drive letter of drive names.
            </summary>
            <param name="pEditControlHandle">The handle of the edit control of the component, the editable text is applied to. Retrievable e.g. by LVM.LVM_GETEDITCONTROL for a ListView.</param>
            <param name="pShellItem">The IShellItem. Needed to determine if its a Drive.</param>
            <param name="pCaption">The caption to be transformed.</param>
            <param name="pLabelText">The text that was set as label</param>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.GetRect(System.IntPtr)">
            <summary>Gets the rectangle of a window/control/part of control.</summary>
            <param name="pHwnd">The control handle.</param>
            <returns>The rectangle. An empty rectangle if it coulnd't be retrieved.</returns>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.FromHbitmap(System.IntPtr,System.Drawing.Size,System.Drawing.Bitmap@)">
            <summary>
            Converts a handle to a HBITMAP structure to an Image instance.
            If the size given is lesser than 256 pixels in width and height,
            the alpha channel is preserved.
            </summary>
            <param name="pHBitmap">bitmap handle</param>
            <param name="pSize">size structure</param>
            <param name="pBitmapSource">The source used to create the Image. Only free after freeing the Image. May be null.</param>
            <returns>An instance of <see cref="T:System.Drawing.Image"/></returns>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.GetBitmapFromHBitmap(System.IntPtr,System.Drawing.Bitmap@)">
            <summary>Creates a Bitmap from the passed nativeHBitmap. As opposed to Bitmap.FromHBitmap this method preserves the Alpha channel. </summary>
            <param name="nativeHBitmap">The native h bitmap. </param>
            <param name="pBitmapSource">
            [out] The source used to create the Image. Only free after freeing the Image. May be null.
            This is not used anymore (see TODO)
            </param>
            <returns>The bitmap from h bitmap. </returns>
            <remarks>Method was copied and adapted (not requiring unsafe code) from .NET code to get an Image from an ImageList that has been put there using an image handle. </remarks>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.ShellShowFavorites">
            <summary>Determines if the Favorites or QuickAccess is displayed in Windows Explorer's Navigation Tree.</summary>
            <returns>true if Favorites are displayed as root node, false otherwise.</returns>
            <remarks>
            Always returns False for Windows XP and earlier operating systems.
            </remarks>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.ShellShowOneDrive">
            <summary>Determines if OneDrive is displayed in Windows Explorer's Navigation Tree.</summary>
            <returns>true if OneDrive are displayed as root node, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.ShellShowAllFolders">
            <summary>Returns True if all folders are shown in the navigation pane of the Windows Explorer according to user's settings.</summary>
            <returns>True if all folders are shown in the navigation pane of the Windows Explorer according to user's settings.</returns>
            <remarks>
            Always returns False for Windows Vista and earler operating systems.
            </remarks>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.ShellShowLibraries">
            <summary>
            Returns True if Libraries should be shown in the navigation pane of the Windows Explorer according to user's settings or operating system standards.
            </summary>
            <remarks>
            Always returns False for Windows XP and earlier operating systems.
            </remarks>
            <returns>Boolean</returns>
        </member>
        <member name="M:Jam.Shell.ShellControlHelper.ShellExpandToCurrentFolder">
            <summary>
            Returns True if Windows Explorer automatically jumps to the selected folder; False otherwise.
            </summary>
            <remarks>
             Corresponds to the user setting: View > Options > Navigation Pane > Automatically expand to current folder
             Always returns True for operating systems prior to Windows 7.
            </remarks>
            <returns>Boolean</returns>
        </member>
        <member name="T:Jam.Shell.ThumbnailInfo">
            <summary>
            Information structure to retrieve the thumbnails asynchronously
            </summary>
        </member>
        <member name="F:Jam.Shell.ThumbnailInfo.Callback">
            <summary>The callback function that is called when the thumbnail is available</summary>
        </member>
        <member name="F:Jam.Shell.ThumbnailInfo.State">
            <summary>The state that is passed to the <see cref="F:Jam.Shell.ThumbnailInfo.Callback"/> function as a parameter</summary>
        </member>
        <member name="F:Jam.Shell.ThumbnailInfo.Size">
            <summary>The requested size of the thumbnail</summary>
        </member>
        <member name="F:Jam.Shell.ThumbnailInfo.AbsoluteItemIdListPtr">
            <summary> The pointer to the AbsoluteItemIdList of the item. It's not being disposed.</summary>
        </member>
        <member name="F:Jam.Shell.ThumbnailInfo.IconsAsThumbnail">
            <summary> If an icon for the file should be loaded if no thumbnail is available.</summary>
        </member>
        <member name="T:Jam.Shell.ShellItem">
            <summary>
            This class keeps information about item id lists, their names, and if desired their associated
            icons.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellItem.m_Caption">
            <summary>
            The caption of the entry that is displayed in the list of the ShellCombo component.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellItem.m_IconImageIndex">
            <summary>
            The system iconnumber for the symbol that is to be displayed
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellItem.m_PIDL">
            <summary>
            The ItemIdList of the item that is displayed
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellItem.#ctor(Jam.Shell.ItemIdList)">
            <summary>
            Sets up a ShellItem
            </summary>
            <param name="p_PIDL">Its ItemIdList</param>
        </member>
        <member name="M:Jam.Shell.ShellItem.#ctor(Jam.Shell.ItemIdList,System.String)">
            <summary>
            Sets up a ShellItem with a custom caption
            </summary>
            <param name="p_PIDL">Its ItemIdList</param>
            <param name="p_Caption">the caption that is displayed </param>
        </member>
        <member name="P:Jam.Shell.ShellItem.PIDL">
            <summary>
            The <see cref="T:Jam.Shell.ItemIdList"/> this Item is associated with.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItem.Caption">
            <summary>
            The Caption of the Item, ie. the virtual system name.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItem.IconImageIndex">
            <summary>
            The icon image index that is displayed next to the itemname.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItem.SystemImage">
            <summary>
            Gets a Bitmap instance based upon the <see cref="P:Jam.Shell.ShellItem.IconImageIndex"/>
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellItem.CompareTo(Jam.Shell.ShellItem)">
            <summary>
            Compares to ShellItems by comparing their ItemIdLists.
            <see cref="M:Jam.Shell.ItemIdList.CompareTo(Jam.Shell.ItemIdList)"/>
            </summary>
            <param name="other">The other item this item is compared to</param>
            <returns>Negative return value if "other" should follow "this", zero if the two items are the same, -1 if other is null, a positive value otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellItem.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current
            <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
            true if the specified <see cref="T:System.Object" /> is equal to the current
            <see cref="T:System.Object" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellItem.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
        </member>
        <member name="T:Jam.Shell.BeforeShellDropEventArgs">
            <summary>
            The BeforeShellDropEventArgs contains data for the BeforeShellDrop event.
            You can deny the execution of the shell command by registering to the event, then setting
            <see cref="P:Jam.Shell.BeforeShellDropEventArgs.ExecuteShellDrop"/> to false if necessary.
            </summary>
        </member>
        <member name="P:Jam.Shell.BeforeShellDropEventArgs.Files">
            <summary>
            The files the shell command will drop.
            </summary>
        </member>
        <member name="P:Jam.Shell.BeforeShellDropEventArgs.Target">
            <summary>
             Returns the drop target.
            </summary>
        </member>
        <member name="P:Jam.Shell.BeforeShellDropEventArgs.ExecuteShellDrop">
            <summary>
            Set this to false if you want to permit the execution of 
            the shell drop.
            </summary>
        </member>
        <member name="P:Jam.Shell.BeforeShellDropEventArgs.DataObject">
            <summary>
            Returns the IDataObject holding the object that is dragged.
            </summary>
            <value>
            An <see cref="T:System.Windows.Forms.IDataObject"/>.
            </value>
        </member>
        <member name="M:Jam.Shell.BeforeShellDropEventArgs.#ctor(Jam.Shell.IShellItem,Jam.Shell.PathCollection,System.Windows.Forms.IDataObject)">
            <summary>
            The public constructor for BeforeShellDropEventArgs.
            </summary>
            <param name="target">The drop target.</param>
            <param name="files">The affected files.</param>
            <param name="dataObject">The IDataObject containing the dragged data.</param>
        </member>
        <member name="T:Jam.Shell.ContextMenuItemSelectedEventArgs">
            <summary>
            The ContextMenuItemSelectedEventArgs contains data for the <see cref="E:Jam.Shell.ShellBrowser.ContextMenuItemSelected"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ContextMenuItemSelectedEventArgs.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ContextMenuItemSelectedEventArgs"/> class.
            </summary>
            <param name="aCommand">Contains the context menu item, which has been selected.</param>
        </member>
        <member name="P:Jam.Shell.ContextMenuItemSelectedEventArgs.Command">
            <summary>
            Contains the context menu item, which has been selected.
            </summary>
        </member>
        <member name="P:Jam.Shell.ContextMenuItemSelectedEventArgs.ExecuteCommand">
            <summary>
            Set to true if the selected command should be executed or set to false if not.
            </summary>
        </member>
        <member name="T:Jam.Shell.SetCursor">
            <summary>
            Show the wait cursor for the whole application as long as the object is not disposed.
            </summary>
            <remarks>The previously active cursor is saved and restored when the object is disposed.</remarks>
            <example>
            using new SetCursor
            {
               // Your slow code goes here
            }
            </example>
        </member>
        <member name="M:Jam.Shell.SetCursor.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.SetCursor"/> class and makes the <see cref="P:System.Windows.Forms.Cursors.WaitCursor"/> the active cursor.
            </summary>
            <remarks>This class should only be used with the <c>using</c> statement.</remarks>
            <seealso cref="T:Jam.Shell.SetCursor"/>
            <seealso cref="T:System.Windows.Forms.Cursors"/>
            <seealso cref="M:Jam.Shell.SetCursor.#ctor(System.Windows.Forms.Cursor)"/>
        </member>
        <member name="M:Jam.Shell.SetCursor.#ctor(System.Windows.Forms.Cursor)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.SetCursor"/> class and makes the passed cursor the active cursor.
            </summary>
            <param name="p_NewCursor">the new cursor to set</param>
            <remarks>This class should only be used with the <c>using</c> statement.</remarks>
        </member>
        <member name="M:Jam.Shell.SetCursor.Dispose">
            <summary>
            Resets the active cursor to the cursor that was active when this instabce was initialized.
            </summary>
            <seealso cref="T:Jam.Shell.SetCursor"/>
        </member>
        <member name="F:Jam.Shell.LicenseChecking.c_DesignType">
            <summary>
            The type to instantiate in JamDesign.dll
            </summary>
        </member>
        <member name="M:Jam.Shell.LicenseChecking.ShowComponentInformation">
            <summary>
            This method shows the usage information from JamDesign.dll at design-time
            </summary>
        </member>
        <member name="M:Jam.Shell.LicenseChecking.VerifyDevelopmentLicense">
            <summary>
            Verifies the availability of a development license for the components.
            The method first tries to open the registry key to the application path
            in HKEY_LOCAL_MACHINE, if it is not found it looks in HKEY_CURRENT_USER
            and searches for the development license in the sub directory \bin
            if both keys do not exist it tries to locate the license assembly
            in the path this assembly has been loaded from. 
            </summary>
            <returns>true if the development license is valid</returns>
        </member>
        <member name="P:Jam.Shell.ResourceUtils.ResourceNewFolder">
            <summary>
            The "New Folder" resource string
            </summary>
        </member>
        <member name="P:Jam.Shell.ResourceUtils.ResourceControlPanel">
            <summary>
            The "Control Panel" resource string
            </summary>
        </member>
        <member name="P:Jam.Shell.ResourceUtils.ResourceAllControlPanelElements">
            <summary>
            The "All Control Panel Items" resource string.
            </summary>
        </member>
        <member name="P:Jam.Shell.ResourceUtils.ResourceNewShortcut">
            <summary>
            The "New Shortcut" resource string
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellListItem">
            <summary>
            Represents an item of the Windows shell namespace in a <see cref="P:Jam.Shell.ShellListItem.ShellListView"/>
            </summary>
            <seealso cref="P:Jam.Shell.ShellListItem.ShellListView"/>
        </member>
        <member name="F:Jam.Shell.ShellListItem.m_StillExists">
            <summary>
            Used during SmartRefresh to see which items still exists in the file system
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListItem.m_IsFolder">
            <summary>
            <c>true</c>, if this item is a folder; <c>false</c> otherwise.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListItem.#ctor(Jam.Shell.ItemIdList,System.String,System.Boolean)">
            <summary>
            Initalizes a new ShellListItem.
            </summary>
            <param name="p_ItemIdList">The ItemIdList of this shell item.</param>
            <param name="p_Text">The text that should be shown for this shell item.</param>
            <param name="p_IsFolder">Pass <c>true</c>, if this item is a folder; <c>false</c> otherwise.</param>
        </member>
        <member name="M:Jam.Shell.ShellListItem.#ctor(Jam.Shell.ItemIdList,Jam.Shell.ItemIdList,System.String,System.Boolean)">
            <summary>
            Initalizes a new ShellListItem.
            </summary>
            <param name="p_AbsoluteItemIdList">The absolute ItemIdList of this shell item. If initialized with null it will be retrieved lazily when accessing the <see cref="P:Jam.Shell.ShellListBaseItem.AbsoluteItemIdList"/> property.</param>
            <param name="p_ItemIdList">The ItemIdList relative to the parent folder of this shell item.</param>
            <param name="p_Text">The text that should be shown for this shell item.</param>
            <param name="p_IsFolder">Pass <c>true</c>, if this item is a folder; <c>false</c> otherwise.</param>
        </member>
        <member name="P:Jam.Shell.ShellListItem.ListView">
            <summary>
            A <see cref="P:Jam.Shell.ShellListItem.ShellListView"/> that contains this item.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListItem.CreateFolder(System.String)">
            <summary>
            Creates a new Folder if the ShellListNode is a Folder;
            may throw an Exception, see <see cref="M:System.IO.Directory.CreateDirectory(System.String)"/> for the Exceptions that can occur
            </summary>
            <param name="p_FolderName">The folder name of the new sub folder to create</param>
            <returns>true if the folder was created successfully</returns>
        </member>
        <member name="M:Jam.Shell.ShellListItem.GetDataObject">
            <summary>
            Returns the Windows Shell IDataObject interface for this shell item wrapped into an instance of type <see cref="T:System.Windows.Forms.DataObject"/>.
            </summary>
            <returns>The DataObject for this shell list item</returns>
        </member>
        <member name="M:Jam.Shell.ShellListItem.CompleteColumns(System.Boolean)">
            <summary>
            Complete the column information of the item.
            </summary>
            <param name="p_ResetItemDetails">If true, all item details will be refreshed. If false, they will only be refreshed if <see cref="P:Jam.Shell.ShellListBaseItem.ColumnInfoAvailable"/> is false.</param>
        </member>
        <member name="M:Jam.Shell.ShellListItem.FillSubitems">
            <summary>
            Complete the column information of the item.
            In contrast to <see cref="M:Jam.Shell.ShellListItem.CompleteDetails(Jam.Shell.JamBaseShellListView)"/>, this method may not be called from a different thread.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListItem.FillSubitems(System.Int32)">
            <summary>
            Completes the column information of the item.
            In contrast to <see cref="M:Jam.Shell.ShellListItem.CompleteDetails(Jam.Shell.JamBaseShellListView)"/>, this method may not be called from a different thread.
            </summary>
            <param name="index">Just the subitems for the given column index will be updated.</param>
        </member>
        <member name="M:Jam.Shell.ShellListItem.RemoveSubItem(System.Int32)">
            <summary>
            Removes the subitem at the passed position and adjusts the variant array.
            </summary>
            <param name="pPosition">The postion of the subitem to remove.</param>
        </member>
        <member name="M:Jam.Shell.ShellListItem.CompleteDetails(Jam.Shell.JamBaseShellListView)">
            <summary>
            Completes the details of the ShellListItem 
            </summary>
            <param name="listView">The ListView the this ShellListItem is associated with.</param>
        </member>
        <member name="M:Jam.Shell.ShellListItem.InvokeCompleteDetails(Jam.Shell.JamBaseShellListView,Jam.Shell.ItemIdList)">
            <summary>
            Invokes the <see cref="M:Jam.Shell.ShellListItem.CompleteDetails(Jam.Shell.JamBaseShellListView,Jam.Shell.ItemIdList,System.Boolean)"/> method from within the GUI thread
            </summary>
            <param name="listView"></param>
            <param name="absoluteItemIdList">the absoluteItemIdList</param>
        </member>
        <member name="M:Jam.Shell.ShellListItem.CompleteDetails(Jam.Shell.JamBaseShellListView,Jam.Shell.ItemIdList,System.Boolean)">
            <summary>
            Complete the details of the ShellListItem details 
            </summary>
            <param name="listView"></param>
            <param name="absoluteItemIdList">if this reference is not null, the call is from a different thread</param>
            <param name="guiThread">this is true if called from the guithread (CoInitializeEx) false if calling thread is unknown</param>
        </member>
        <member name="P:Jam.Shell.ShellListItem.IsParentFolderItem">
            <summary>
            Returns true, if this item represents the parent folder, which is usually displayed as ".."
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListItem.GetVariantValue(Jam.Shell.SHCOLUMNID,System.Boolean)">
            <summary>Gets the value for the specified column as variant.</summary>
            <param name="pColumnId">Identifier for the column.</param>
            <param name="pForceLoading">true to force loading if the value has not yet been cached.</param>
            <returns>The variant value.</returns>
            <remarks>If pForceLoading is false only values that already been retrieved will be returned. </remarks>
        </member>
        <member name="P:Jam.Shell.ShellListItem.ShellListView">
            <summary>
            The same instance as <see cref="P:Jam.Shell.ShellListItem.ListView"/>ListView but typed as <see cref="P:Jam.Shell.ShellListItem.ShellListView"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListItem.StillExists">
            <summary>
            Can be used internally to flag an item as "present" or "not present"
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListItem.IsFolder">
            <summary>
            Is <c>true</c> if this item is a folder; <c>false</c> otherwise.
            </summary>
        </member>
        <member name="T:Jam.Shell.BackgroundContextMenu">
            <summary>
            This class provides most of the default background context menu
            functionality from the windows explorer.
            </summary>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.BackgroundContextMenu"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.OnBackgroundContextMenuOpening(System.Object,System.ComponentModel.CancelEventArgs)">
            <summary>
            Is called if the background context menu is just opened up.
            Used to determine which items are shown.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">Contains event information.</param>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.ListView">
            <summary>
            Gets or sets the listview this context menu is associated with
            </summary>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.SetupMenuItems">
            <summary>
            Sets up the menu items.
            </summary>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.OnOpening(System.ComponentModel.CancelEventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.ToolStripDropDown.Opening"/> event.
            </summary>
            <param name="e">A <see cref="T:System.ComponentModel.CancelEventArgs"/> that contains the event data.</param>
        </member>
        <member name="F:Jam.Shell.BackgroundContextMenu.c_ViewThumbnail">
            <summary>constant to distinguish between menu items - Thumbnail view </summary>
        </member>
        <member name="F:Jam.Shell.BackgroundContextMenu.c_ViewSmall">
            <summary>constant to distinguish between menu items - small view </summary>
        </member>
        <member name="F:Jam.Shell.BackgroundContextMenu.c_ViewBig">
            <summary>constant to distinguish between menu items - big view </summary>
        </member>
        <member name="F:Jam.Shell.BackgroundContextMenu.c_ViewList">
            <summary>constant to distinguish between menu items - list view </summary>
        </member>
        <member name="F:Jam.Shell.BackgroundContextMenu.c_ViewDetails">
            <summary>constant to distinguish between menu items - details view </summary>
        </member>
        <member name="F:Jam.Shell.BackgroundContextMenu.c_ViewTile">
            <summary>constant to distinguish between menu items - tile view </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.ArrangeIconsString">
            <summary>
            The localizable string of the sort entry in the menu.
            Unfortunately we cannot provide a windows shell default string for this.
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.ArrangeIcons">
            <summary>
            Returns the dynamic collection of ToolStripItems for the sortable columns.
            </summary>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.OnArrangeIconsDropDownOpening(System.Object,System.EventArgs)">
            <summary>
            Updates the drop down items when the user opens the drop down
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">Contains event information.</param>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.View">
            <summary>
            Returns the collection ToolStripItems for different view modes.
            </summary>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.OnItemArrangeClick(System.Object,System.EventArgs)">
            <summary>
            This method is called if the user arranges items (changes the sort order)
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.OnItemClick(System.Object,System.EventArgs)">
            <summary>
            This method is called if the user changes the type of view
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">Contains event information.</param>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.Actualize">
            <summary>
            The ToolStripItem 'refresh'
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.Insert">
            <summary>
            Contains the ToolStripItem 'paste'
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.InsertAsLink">
            <summary>
            The toolstrip item to insert a link to file(s) on the the clipboard, 
            this functionality is not yet available, hence the items is not added to the background 
            context menu per default.
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.NewFolder">
            <summary>
            The menu item to create a new folder in the current directory
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.NewShortcut">
            <summary>
            The menu item to create a new shortcut in the current directory
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.NewFileFolder">
            <summary>
            The drop down menu item containing the new <see cref="P:Jam.Shell.BackgroundContextMenu.NewFolder"/> item.
            </summary>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.OnNewFileFolderDropDownOpening(System.Object,System.EventArgs)">
            <summary>
            Set up the icon of the 'new folder' entry.
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.CreateNewFileDropDownItems">
            <summary>
            This method scans the registry and adds dropdown items for each available new file entry
            </summary>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.InitializeContextMenu">
            <summary>
            Method to initialize the BackgroundContextMenu to generate the RegistryKey
            containing the "New File"-entries.
            Prevents NullPointerException (Bug #2156)
            </summary>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.BuildNewFileSubItem(System.String,System.String)">
            <summary>
            Builds a NewFile-SubItem.
            </summary>
            <param name="p_extension">Extension of the NewFile-Item.</param>
            <param name="p_valueName">Name of the NewFile-Item.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.ByteArrayToExtension(System.Byte[])">
            <summary>Converts a byte-array to a hex string and returns a file extension.</summary>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.RegValueToExtension(System.String)">
            <summary>
            Returns the extension to a given Registryentry-Value for a NewShellEntry (Windows XP).
            </summary>
            <param name="regValue">A Registryentry-Value from NewShell as string.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.SearchTemplate(Microsoft.Win32.RegistryKey)">
            <summary>
            Checks whether a template is given or not.
            </summary>
            <param name="key">The registrykey assiociated to the filextension located in ClassesRoot.</param>
            <returns>Fullpath to the Templatefile or String.Empty</returns>
        </member>
        <member name="T:Jam.Shell.BackgroundContextMenu.TypeOfAction">
            <summary>
            Enumeration of action-types. Besides the default-case (an empty file is created) and a given
            template (that will be copied later on), a special treatment for MS Briefcase
            and the contact-files (vista or later) is required.
            It`s used in the parameter-list of the NewFile-Menu-Subitems
            </summary>
        </member>
        <member name="T:Jam.Shell.BackgroundContextMenu.CreateNewFileParams">
            <summary>
            A class for the Parameters needed to create a new file. Will be used for the "tag"-attribute of
            our ToolStripMenuItems in the create-new-file-section of the contextmenu.
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.CreateNewFileParams.Name">
            <summary>
            Return the Name.
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.CreateNewFileParams.Extension">
            <summary>
            Return the Extension.
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.CreateNewFileParams.ActionType">
            <summary>
            Return the <see cref="T:Jam.Shell.BackgroundContextMenu.TypeOfAction"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.CreateNewFileParams.Template">
            <summary>
            Return the Template.
            </summary>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.OnNewFileSubItemClick(System.Object,System.EventArgs)">
            <summary>
            The event after a create-new-file-item of the contextmenu was clicked.
            </summary>
            <param name="sender">The sender-object.</param>
            <param name="e">The EventArgs.</param>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.CheckFileName(System.String,System.String,System.String)">
            <summary>
            Check if given filename already exists in given path. 
            If true, tries adding a (1), (2), (3) or (4). 
            If they exist too, it returns an empty string.
            </summary>
            <param name="filename">filename to be checked</param>
            <param name="extension">extension of the filename</param>
            <param name="path">path where the file is located</param>
            <returns>A free filename or String.empty</returns>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.ExtensionsHidden">
            <summary>
            Checks whether the Windows-option "Hide extensions of known filetypes" is set
            </summary>
            <returns>True, if extensions are hidden</returns>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.StartProcess(System.String,System.String)">
            <summary>
            Run a command with the given arguments
            </summary>
            <param name="command">command to be executed</param>
            <param name="arguments">arguments for the given command</param>
        </member>
        <member name="P:Jam.Shell.BackgroundContextMenu.Properties">
            <summary>
            Returns the "Properties" toolstrip menu item
            </summary>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.OnNewFolderClick(System.Object,System.EventArgs)">
            <summary>
            This event occurs if the user selected the 'new folder' item
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.BackgroundContextMenu.OnNewShortcutClick(System.Object,System.EventArgs)">
            <summary>
            This event occurs if the user selected the 'new shortcut' item
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e"></param>
        </member>
        <member name="T:Jam.Shell.ShellListView">
            <summary>
            This control displays the contents of a folder in a listview. When the user right clicks on a folder, it will automatically show the context menu.
            Use to <see cref="P:Jam.Shell.ShellListView.Path"/> property to get or set the current folder, use the <see cref="P:Jam.Shell.ShellListView.SpecialFolder"/> property to set a special folder like the Control Panel. 
            The <see cref="P:Jam.Shell.ShellListView.Filter"/> property can be used to filter certain files by extension. The <see cref="M:Jam.Shell.ShellListView.FullRefresh"/> method refreshes the displayed information. 
            You can synchronize a ShellListView with a <see cref="T:Jam.Shell.ShellTreeView"/> by using the <see cref="T:Jam.Shell.ShellControlConnector"/> property.
            By default, a double click is handled by the control and it tries to perform the default action for the selected object.
            <para>&#160;</para>
            Items that are contained in the list are of type <see cref="T:Jam.Shell.ShellListItem"/>. This applies to the <see cref="P:Jam.Shell.ShellListView.Items"/> and the <see cref="P:Jam.Shell.ShellListView.SelectedItems"/> properties.
            <para>&#160;</para>
            Sorting is handled automatically by this list when column headers are clicked. If custom sorting is needed, an <see cref="T:System.Collections.IComparer"/> can be assigned to property <see cref="P:System.Windows.Forms.ListView.ListViewItemSorter"/>.
            See <see cref="M:Jam.Shell.JamBaseShellListView.Sort"/> for an example.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListView.m_UseThreadPool">
            <summary><see cref="P:Jam.Shell.ShellListView.UseThreadPool"/></summary>
        </member>
        <member name="F:Jam.Shell.ShellListView.m_ListChangedAfterDragLeave">
            <summary>
            Indicates that the list changed after a DragLeave was executed; bug #6536
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListView.m_DragLeaveOccurred">
            <summary>
            Indicates that a DragLeave was executed recently; bug #6536
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellListView.m_PendingFileSelection">
            <summary>
            This list contains files that are to be selected when the items are inserted (through <see cref="M:Jam.Shell.ShellListView.UpdateTimerChange(System.Object,System.EventArgs)"/> or ChangeNotification).
            Currently the list is filled when files are dropped.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ListChangedAfterDragLeave">
            <summary>
            Indicates that the list changed after a DragLeave was executed; bug #6536
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.DragLeaveOccurred">
            <summary>
            Indicates that a DragLeave was executed recently; bug #6536
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.GetSelectedItemCollectionType">
            <summary>
            Gets the type of the Selected Item Collection. It is used to create the correct <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1" /> for the inheriting classes.
            </summary>
            <returns>
            A <see cref="T:Jam.Shell.ShellListItem"/> typed <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1" />
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.GetItemCollectionType">
            <summary>
            Gets the type of the Item Collection. It is used to create the correct <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1" /> for the inheriting classes.
            </summary>
            <returns>
            A <see cref="T:Jam.Shell.ShellListItem"/> typed <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1" />
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellListView"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.Dispose(System.Boolean)">
            <summary>
            Remove reference to ShellControlConnector and implicitely remove this control from the list of known controls of the ShellControlConnector
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.EndInit">
            <summary>
            Signals the object that initialization is complete. After this method is called,
            <see cref="F:Jam.Shell.JamBaseShellListView.m_Initialized"/> is true to indicate the state of the control.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnBeforeFullRefresh">
            <summary>
            Fires the BeforeFullRefresh event
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnPopulated">
            <summary>
            Fires the Populated event
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnPathChanged">
            <summary>
            Fires the PathChanged event
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnAddItem(Jam.Shell.ShellListItem)">
            <summary>
            Fires an event if an item is added to the list.
            </summary>
            <param name="pItem">The item that should be added.</param>
            <returns>True if the item should be added, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ListView.OnDrawItem(System.Windows.Forms.DrawListViewItemEventArgs)"/>.
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ListView.OnDrawSubItem(System.Windows.Forms.DrawListViewSubItemEventArgs)"/>.
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.ListView.OnDrawColumnHeader(System.Windows.Forms.DrawListViewColumnHeaderEventArgs)"/>.
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.GetListViewItemSorter">
            <summary>Returns the Comparer to be used when the list is sorted.</summary>
            <returns>The list view item sorter.</returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.CompleteDetails(Jam.Shell.ShellListItem)">
            <summary>
            Completes the details of an item, like image index, sub items etc.
            If <see cref="P:Jam.Shell.ShellListView.UseThreadPool"/> is true, the items image index is obtained via a thread pool.
            </summary>
            <param name="aItem">the item</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.AcquireImageIndecesViaThreadPool(Jam.Shell.ShellListItem)">
            <summary>
            This method enqueues a work item into the system threadpool to 
            get the image indeces of the particular ShellListItem.
            </summary>
            <param name="aItem">The ShellListItem to get the image indexes for</param>
        </member>
        <member name="T:Jam.Shell.ShellListView.UserWorkItemState">
            <summary>
            This structure is used to pass objects to the threadpooled function calls
            <see cref="M:Jam.Shell.ShellListView.CompleteDetailsCallBack(System.Object)"/>
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.CompleteDetailsCallBack(System.Object)">
            <summary>
            This method is called if the user work item gets dequeued from the threadpool.
            </summary>
            <param name="state"></param>
        </member>
        <member name="M:Jam.Shell.ShellListView.TryToAddShellItems">
            <summary>Tries to add the shell items of the current folder to the list.</summary>
            <returns>ShellBrowser.AsyncResult.Error if the items could not be added, e.g. because the Access to the current folder; ShellBrowser.AsyncResult.Async if are are added via notifications; ShellBrowser.AsyncResult.NoMoreItems else.
            was denied.</returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.AddShellItem(Jam.Shell.ShellBrowser)">
            <summary>Adds the currently active item of m_ShellBrowser to the list.</summary>
            <param name="pShellBrowser">The ShellBrowser instance that serves as base for the new item. If null the item is created using the member variable.</param>
            <returns>If successful, returns the added item. If not, returns null.</returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.AddShellItem(Jam.Shell.ItemIdList)">
            <summary>Adds the currently active item of m_ShellBrowser to the list.</summary>
            <param name="pItemIdList">The ItemIdList of the item to add.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.AddParentFolderItem">
            <summary>
            Add an item ".." which represents the parent folder
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.InitColumns">
            <summary>
            Prepares the columns according to the currently active folder.
            If the user set custom columns, these are shown too.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)">
            <summary>
            Overrides the <see cref="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)"/> method. A SmartRefresh is called before the auto resize is executed. 
            </summary>
            <param name="columnIndex">The index of the column that should be resized.</param>
            <param name="headerAutoResize">The resize style.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.AutoResizeColumns(System.Windows.Forms.ColumnHeaderAutoResizeStyle)">
            <summary>
            Overrides the <see cref="M:System.Windows.Forms.ListView.AutoResizeColumn(System.Int32,System.Windows.Forms.ColumnHeaderAutoResizeStyle)"/> method. A SmartRefresh is called before the auto resize is executed.
            </summary>
            <param name="headerAutoResize">The resize style.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Gets called if the active folder should change.
            </summary>
            <param name="p_ItemIdList">The ItemIdList of the new folder.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            Gets called if the selected file should change.
            </summary>
            <param name="p_ItemIdList">The absolute ItemIdList of the newly selected file.</param>
            <seealso cref="M:Jam.Shell.ShellListView.FolderChanged(Jam.Shell.ItemIdList)"/>
        </member>
        <member name="M:Jam.Shell.ShellListView.ItemSelectionChange(System.Object,System.Windows.Forms.ListViewItemSelectionChangedEventArgs)">
            <summary>
            This member handles the <see cref="E:System.Windows.Forms.ListView.ItemSelectionChanged"/> event.
            </summary>
            <param name="source">the source that created the event</param>
            <param name="e">The parameter contains the event data for the ListViewItemSelection changed.
            If it is null, we do not clear the SelectedFiles Datastructure, since the method was called 
            directly from <see cref="M:Jam.Shell.JamBaseShellListView.SelectedListChange(System.Object,System.EventArgs)"/>.
            </param>
        </member>
        <member name="M:Jam.Shell.ShellListView.UpdateTimerChange(System.Object,System.EventArgs)">
            <summary>
            This method is called when the update time for delayed updates elapsed.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.ChangeNotificationHandler(System.Object,Jam.Shell.ChangeNotificationPidlEventArgs)">
            <summary>
            This method gets called by the <see cref="T:Jam.Shell.ShellChangeNotifier"/> object and informs about changes in the current folder.
            </summary>
            <param name="sender">the sender that initiated the event</param>
            <param name="e">the event arguments</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.Sort">
            <summary>
            Sorts the items in the list according to <see cref="P:Jam.Shell.JamBaseShellListView.SortColumn"/> and <see cref="T:System.Windows.Forms.SortOrder"/>.
            This sortorder can be replaced by assigning a <see cref="T:System.Collections.IComparer"/> to property <see cref="P:System.Windows.Forms.ListView.ListViewItemSorter"/>
            </summary>
            <remarks>Usually sorting is done automatically so that calling this method is unnecessary.</remarks>
            <seealso cref="P:Jam.Shell.JamBaseShellListView.SortColumn"/>
            <seealso cref="M:Jam.Shell.JamBaseShellListView.Sort"/>
            <seealso cref="T:System.Windows.Forms.SortOrder"/>
        </member>
        <member name="M:Jam.Shell.ShellListView.FullRefresh">
            <summary>
            Use the <see cref="M:Jam.Shell.ShellListView.FullRefresh"/> method if you want to refresh the contents of a <see cref="T:Jam.Shell.ShellListView"/>. Usually you don't have to call <see cref="M:Jam.Shell.ShellListView.FullRefresh"/> manually. 
            It will be called automatically, when e.g. the <see cref="P:Jam.Shell.ShellListView.Path"/> or <see cref="P:Jam.Shell.ShellListView.Filter"/> property changes, or the connected <see cref="T:Jam.Shell.ShellControlConnector"/> reports a change.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.SmartRefresh">
            <summary>
            Use the SmartRefresh to update the contents of a <see cref="T:Jam.Shell.ShellListView"/>. 
            <remarks>In comparison to the <see cref="M:Jam.Shell.ShellListView.FullRefresh"/> method, SmartRefresh is much faster, 
            but only removes objects which have been deleted and adds objects which have been added. 
            It does not update changed file sizes or dates. Usually this method will be called automatically, 
            when a file was added or deleted.
            </remarks>
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.Compare(System.Object,System.Object)">
            <summary>
            Compares two ShellListItem objects with their ItemIdList with eachother. 
            </summary>
            <param name="x">First ShellListItem.</param>
            <param name="y">Second ShellListItem, which will be compared with first one.</param>
            <returns>
            Returns a value less than 0 if x is less than y, 0 if x is equal to y and a value greater
            than 0 if x is greater than y.
            </returns>
            <remarks>User added columns will be compared by the item's SubItem strings at the SortColumn index.</remarks>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnMouseUp(System.Windows.Forms.MouseEventArgs)">
            <summary>
            Overrides the OnMouseUp event, to handle e.g. double clicks and right clicks on files or folders
            and the selection of files or folders, when the CheckBoxes are switched on.
            </summary>
            <param name="e">Provides data for the OnMouseUp event.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnKeyDown(System.Windows.Forms.KeyEventArgs)">
            <summary>
            Override the OnKeyDown event, to handle e.g. the key press like F2, F5, copy, paste, etc.
            </summary>
            <param name="e">Provides data for the OnKeyDown event.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.SelectAll(System.Boolean)">
            <summary>Use SelectAll to select or unselect all items in a JamShellList.</summary>
            <param name="pUnselect">(Optional) Pass True to unselect instead of selecting.</param>
            <returns>Returns true, if all files were selected.</returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnDoubleClick(System.EventArgs)">
            <summary>
            Override the OnDoubleClick event to try to perform the default action for the selected object.
            </summary>
            <param name="e">The parameter contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.CreateDir(System.String,System.Boolean)">
            <summary>
            Creates a new directory in the current folder.
            </summary>
            <param name="p_Name">The name of the new folder. Do pass a single name only, not a full path.</param>
            <param name="p_EditMode">Pass <b>true</b>, if the user should be able to edit the name of the new folder after its creation.
            Pass <b>false</b> if the new folder should not be in edit mode.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.CreateShortcut(System.String,System.String)">
            <summary>
            Creates a new shortcut in the current folder.
            </summary>
            <param name="pName">The name of the new shortcut. Do pass a single name only, not a full path.
            You may pass an empty name to use the localized string for a new shortcut.
            </param>
            <param name="pTarget">The fullpath of the shortcut target</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnBeforeInvokeCommand(Jam.Shell.BeforeShellCommandEventArgs)">
            <summary>
            Allows deriving classes to handle the command internally in
            <see cref="M:Jam.Shell.JamBaseShellListView.InvokeCommandOnSelected(Jam.Shell.ShellCommand)"/>.
            </summary>
            <param name="e">The eventargs holding the verb and affected elements.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnAfterInvokeCommand(Jam.Shell.ShellCommandEventArgs)">
            <summary>Is called after the command has been called.</summary>
            <param name="e">Contains the command and the items the command was applied upon.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.InvokeCommandOnFolder(Jam.Shell.ShellCommand)">
            <summary>
            Invokes the given command on the currently listed folder.
            </summary>
            <param name="command">A command verb, like "open", "properties", "delete", etc.</param>
            <returns>true if the command was invoked successfully, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.FileChange">
            <summary>
            This method should be called if files in the current view have changed.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.GetUIObject(System.Guid)">
            <summary>
            Returns for the currently selected item a COM object that implements the requested interface
            </summary>
            <param name="riid">the relative item id list</param>
            <returns>the UIObject that is returned be <see cref="M:Jam.Shell.ShellBrowserBase.GetUIObject(System.Guid)"/></returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.GoUp">
            <summary>
            Goes up one directory level.
            </summary>
            <returns>true, if the operation was performed succesfully. false, if the operation could not be perofrmed, which can e.g. happen, if the current folder is the root of the shell namespace.</returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.InformPathChanged">
            <summary>
            Notifies connected controls that the active path of this control has changed
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellListView.GetFullPath(Jam.Shell.ShellListBaseItem)">
            <summary>
            This method returns name, extension and full path of a given ShellListViewItem of a ShellListView. 
            Since the extensions of the file may be not displayed dependant on the user's settings it is 
            important that you use FullPath instead of ShellListViewItem.Text.
            </summary>
            <param name="aItem">ShellListViewItem, for which the full path should be returned.</param>
            <returns>Returns the full path for the passed ShellListViewItem as string.</returns>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)">
            <summary>
            This member overrides <see cref="M:Jam.Shell.JamBaseShellListView.OnItemDrag(System.Windows.Forms.ItemDragEventArgs)"/>
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnDragOver(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)"/>
            </summary>
            <param name="drgevent">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnDragDrop(System.Windows.Forms.DragEventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)"/>
            </summary>
            <param name="drgevent">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.OnDragLeave(System.EventArgs)">
            <summary>
            This member overrides <see cref="M:System.Windows.Forms.Control.OnDragLeave(System.EventArgs)"/>
            </summary>
            <param name="e">Contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ShellListView.GetDropTarget(Jam.Shell.ShellListBaseItem)">
            <summary>
            Gets the IOleDropTarget for the given item.
            </summary>
            <param name="item">A ShellListBaseItem or null for the background.</param>
            <returns>The IOleDropTarget for the given item or the background. 
            Returns null if the item is a ShellListParentFolderItem.</returns>
        </member>
        <member name="P:Jam.Shell.ShellListView.FolderIdList">
            <summary>
            FolderIdList contains a pointer to the ItemIdList of the current folder.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.FileSystemOnly">
            <summary>
            If FileSystemOnly is set to True, objects and virtual folders which do not have a file system path, will not be displayed. Exceptions are 'My Computer', 'Libraries' and 'Network'
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.LabelEdit">
            <summary>
            Gets or sets a value indicating whether the label text of the list items can be edited.
            </summary>
            <value></value>
            <returns>true if the label text of the tree nodes can be edited; otherwise, false. The default is false.
            </returns>
        </member>
        <member name="P:Jam.Shell.ShellListView.Filter">
            <summary>
            You can use a single pattern, e.g. '*.doc' or concatenate several patterns using semicolons to separate them, e.g. '*.exe;*.com'.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.Path">
            <summary>
            This property allows you to get or set the folder, which contents should be displayed. If you want to display a non file system folder, use the SpecialFolder property.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.BackgroundContextMenu">
            <summary>
            Gets or sets the ContextMenuStrip that is displayed if no item of the 
            listview is under the cursor if the user clicks the right mouse button.
            If this value is null, no ContextMenu is shown.
            </summary>
            <remarks>By default the <see cref="T:Jam.Shell.ShellListView"/> uses a context menu similar to the one known by Windows Explorer. To customize subclass <see cref="T:Jam.Shell.BackgroundContextMenu"/> and override <see cref="M:Jam.Shell.BackgroundContextMenu.SetupMenuItems"/>
            and assign it to this property.
            </remarks>.
            <example>
            The following example uses <see cref="P:Jam.Shell.ShellListView.BackgroundContextMenu"/> as base class for a custom background context menu and assigns it in the Load event of a form.
            <code>
            class MyBackgroundContextMenu : BackgroundContextMenu
            {
                protected override void SetupMenuItems()
                {
                     base.SetupMenuItems();
                    ToolStripMenuItem myItem = new ToolStripMenuItem("My Additional Item");
                    myItem.Click += myItem_Click;
                    Items.Add(myItem);
                    //hide a default item:
                    //this.Actualize.Visible = false;
                }
            
                void myItem_Click(object sender, EventArgs e)
                {
                    MessageBox.Show("additional item clicked");
                }
            }
            //Eventhandler for the Load event of a form:
            private void JamExplorerMain_Load(object sender, EventArgs e)
            {
                shellListView1.BackgroundContextMenu = new MyBackgroundContextMenu();
            }
            </code>
            </example>
        </member>
        <member name="P:Jam.Shell.ShellListView.SortColumn">
            <summary>
            The column according to which the listed objects are sorted.
            If this is set to a negative value, sorting is disabled by setting 
            <see cref="T:System.Windows.Forms.SortOrder"/> to SortOrder.None, this is useful to
            insert large amounts of items, e.g. during a search.
            </summary>
            <exception cref="T:System.ArgumentOutOfRangeException">
            If the value is >= Columns.Count</exception>
        </member>
        <member name="P:Jam.Shell.ShellListView.SpecialFolder">
            <summary>
            SpecialFolder allows you to set or get the type of the currently listed folder. 
            You can use the ShellFolder constants here.
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">A COM-Exception is thrown if the special folder selected 
            is not supported by the system the application is running on.</exception>
        </member>
        <member name="P:Jam.Shell.ShellListView.UseThreadPool">
            <summary>
            Whether to use the system threadpool to obtain information on listview items.
            If this property is false, the complete file detail information is retrieved as
            soon as the item is displayed the first time within the listview.
            If the property is true thumbnails and icons are fetched in worker threads in the background.
            The setting of this property affects the control the next time the <see cref="M:Jam.Shell.ShellListView.FullRefresh"/> method is called.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ViewState">
            <summary>
            Gets or sets how items are displayed in the ShellListView control.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.Items">
            <summary>
            Returns a collection containing all ShellListItems in the ShellListView. Items are of type <see cref="T:Jam.Shell.ShellListItem"/>
            </summary>
            <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewItemCollection`1"/>
        </member>
        <member name="P:Jam.Shell.ShellListView.OwnerDraw">
            <summary>
            The value of the OwnerDraw property must always be true. This is why the Property is
            reimplemented here. The setting to false is ignored, and a debug message is shown.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.CopyMode">
            <summary>
            Copy mode allows you to control the behaviour when files or folders get dropped.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.AutoScrollDelay">
            <summary>
            The delay in milliseconds after that the control scrolls automatically during a drag and drop operation.
            A value of 0 disables the auto scroll feature.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.SelectedItems">
            <summary>
            Gets the items that are selected in the control.
            </summary>
            <returns>A <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1" /> that contains the items that are selected in the control. 
            If no items are currently selected, an empty <see cref="T:Jam.Shell.JamBaseShellListView.ShellListViewSelectedItemCollection`1" /> is returned. Contained elements are of type <see cref="T:Jam.Shell.ShellListItem"/></returns>
        </member>
        <member name="E:Jam.Shell.ShellListView.BeforeFullRefresh">
            <summary>
            This event is fired when a <see cref="M:Jam.Shell.ShellListView.FullRefresh"/> has been executed.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellListView.Populated">
            <summary>
            This event is fired after a <see cref="T:Jam.Shell.ShellListView"/> was filled completely.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellListView.PathChanged">
            <summary>
            This event is fired when the users changes the path.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellListView.AddItem">
            <summary>
            This event is fired whenever a new item is added to a <see cref="T:Jam.Shell.ShellListView"/>.
            </summary>
            <example> 
            This example will suppress the "My Music" folder and links to be displayed in the ShellListView.
            <code source ="CodeExamplesWinforms.cs" region = "ShellListView_AddItem" lang="C#" />
            </example>
        </member>
        <member name="M:Jam.Shell.ShellListView.ShowOptionsShouldShow(Jam.Shell.ShellBrowser)">
            <summary>
            Returns if the active shell object in the given ShellBrowser should be shown 
            according to the property settings of this class.
            </summary>
            <param name="shellbrowser">An instance of the ShellBrowser class.</param>
            <returns>true, if the active object in the ShellBrowser should be visible in a control according to the property values. false if it hsould not be visible.</returns>
        </member>
        <member name="P:Jam.Shell.ShellListView.ShowHidden">
            <summary>
            Is set to 'true', hidden elements will also be shown.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ShowNetHood">
            <summary>
            If set to 'false', the Network Neighbourhood is not shown in the component,
            otherwise it is shown (the default value is true).
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ShowOverlayIcons">
            <summary>
            If set to 'false', no overlay icons will be shown, which improves the performance of the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ShowRecycleBin">
            <summary>
            If set to true, the recycle bin will be visible. If set to false, the recycle bin will be hidden
            (the default value is true).
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ShowFiles">
            <summary>
            If set to true, files will be shown in the control.
            If set to false, files will not be visible in the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ShowColorCompressed">
            <summary>
            If set, compressed files and folders will be shown in that particular Color, show normally otherwise (if null).
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ShowColorEncrypted">
            <summary>
            If set, encrypted files and folders will be shown in that particular color, show normally otherwise (if null).
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ShowParentFolder">
            <summary>
            Use this property to show an additional folder with the caption '..' that allows the user to navigate to the parent folder of the current folder.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListView.ShowFolders">
            <summary>
            The property ShowFolders allows you to include the folders in the <see cref="T:Jam.Shell.ShellListView"/>, similar to FrontPage 2000.
            </summary>
        </member>
        <member name="T:Jam.Shell.InvokeCommandEventArgs">
            <summary>
            The event arguments of a <see cref="E:Jam.Shell.SystemListView.BeforeInvokeCommandOnSelected"/>.
            See also <see cref="M:Jam.Shell.JamBaseShellListView.InvokeCommandOnSelected(Jam.Shell.ShellCommand)"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.InvokeCommandEventArgs.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="command">the command-word</param>
        </member>
        <member name="P:Jam.Shell.InvokeCommandEventArgs.Command">
            <summary>
            the command that is to be processed
            </summary>
        </member>
        <member name="P:Jam.Shell.InvokeCommandEventArgs.InvocationProcessed">
            <summary>
            Set this property to true, if the event was processed and
            the InvokeCommand should not handled by the shellbrowser component any further.
            </summary>
        </member>
        <member name="T:Jam.Shell.AddItemEventArgs">
            <summary>
            The AddItemEventArgs contains data for the <see cref="E:Jam.Shell.ShellListView.AddItem"/> event.
            </summary>
        </member>
        <member name="M:Jam.Shell.AddItemEventArgs.#ctor(Jam.Shell.ShellListItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.AddItemEventArgs"/> class.
            </summary>
            <param name="aItem"><see cref="T:Jam.Shell.ShellListItem"/> object, which contains information about the item, which should be added to the <see cref="T:Jam.Shell.ShellListView"/>.</param>
        </member>
        <member name="T:Jam.Shell.ShellListParentFolderItem">
            <summary>
            Helper class for the parent folder icon.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListParentFolderItem.ColumnInfoAvailable">
            <summary>
            We don't need column infos.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellListParentFolderItem.StillExists">
            <summary>
            This item always exists.
            </summary>
        </member>
        <member name="T:Jam.Shell.HeaderMenuItem">
            <summary>
            A class that extends the ToolStripMenuItem with a property for the ShColumnId; used within the header context menu.
            </summary>
        </member>
        <member name="P:Jam.Shell.HeaderMenuItem.ShColumnID">
            <summary>
            Saves the ShColumnID.
            </summary>
        </member>
        <member name="T:Jam.Shell.ThumbnailImage">
            <summary>
            Use this component to display a thumbnail image of a file or folder. The same thumbnail image that the Windows Explorer uses will be shown. 
            The Windows Shell does not supply a thumbnail image for all objects. You may either set the Path property to set a path to a file or folder 
            for which the thumbnail image should be displayed. Or you may synchronize it to a <see cref="T:Jam.Shell.ShellListView"/> or <see cref="T:Jam.Shell.ShellTreeView"/> 
            component using the <see cref="P:Jam.Shell.ThumbnailImage.ShellControlConnector"/> property.
            </summary>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.Version">
            <summary>
            The current version of the ShellBrowser.
            </summary>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.Path">
            <summary>
            The Path property contains the full path of the file or folder which thumbnail image is currently displayed. Assign a value to this property to display a different thumbnail image.
            </summary>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.ShowErrorMessages">
            <summary>
            If set to true the ThumbnailImage component will show a MessageBox if an error occured,
            otherwise the errors will only be logged to the Debug output.
            </summary>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.Enabled">
            <summary>
            Indicates whether the control is enabled.
            </summary>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.Image">
            <summary>
            Readonly property, which contains the currently shown thumbnail image.
            </summary>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.ShellControlConnector">
            <summary>
            Use this property to connect this component to a ShellControlConnector. All shell controls connected to the same ShellControlConnector will automatically synchronize the information they display. That means if a user selects a file in a ShellListView, the ThumbnailImage will automatically display the thumbnail image of the selected object.
            </summary>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.IconsAsThumnbnails">
            <summary>
            If set to true (default) the component uses icons if the shown file system element does not supply a thumbnail.
            Set false if only thumbnails are to be used.
            </summary>
        </member>
        <member name="E:Jam.Shell.ThumbnailImage.ThumbnailLoaded">
            <summary>
            Event is thrown when the control has finished loading the image.
            </summary>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.OnThumnbailLoaded(System.EventArgs)">
            <summary>
            Calls the ThumbnailLoaded event
            </summary>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ThumbnailImage"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.OnHandleCreated(System.EventArgs)">
            <summary>
            Raises the <see cref="E:System.Windows.Forms.Control.HandleCreated" /> event.
            </summary>
            <param name="e">An <see cref="T:System.EventArgs" /> that contains the event data.</param>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.Dispose(System.Boolean)">
            <summary>
            Remove reference to ShellControlConnector and implicitely remove this control from the list of known controls of the ShellControlConnector
            </summary>
            <param name="disposing">
            If disposing equals true, the method has been called directly
            or indirectly by a user's code. Managed and unmanaged resources
            can be disposed.
            If disposing equals false, the method has been called by the 
            runtime from inside the finalizer and you should not reference 
            other objects. Only unmanaged resources can be disposed.</param>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.ClearImage">
            <summary>
            Clear the current Image.
            </summary>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.OnVisibleChanged(System.Object,System.EventArgs)">
            <summary>
            Queries the ThumbnailImage if the control gets visible
            </summary>
            <param name="sender"></param>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.OnPictureBoxClick(System.Object,System.EventArgs)">
            <summary>
            Fire the OnClick event of the panel, when the same event gets fired for the PictureBox.
            </summary>
            <param name="sender">Contains information about the object, which fired the event.</param>
            <param name="e">Contains general event data.</param> 
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.OnPictureDoubleClick(System.Object,System.EventArgs)">
            <summary>
            Fire the OnDoubleClick event of the panel, when the same event gets fired for the PictureBox.
            </summary>
            <param name="sender">Contains information about the object, which fired the event.</param>
            <param name="e">Contains general event data.</param>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.OnResize(System.EventArgs)">
            <summary>
            The Resize event must be overridden, because the PictureBox class has no Align property.
            </summary>
            <param name="e">the event data</param>        
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Gets called if the active folder should change.
            </summary>
            <param name="p_ItemIdList">The ItemIdList of the new folder.</param>
            <remarks>In this class this method does nothing.</remarks>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            Gets called if the active file should change.
            </summary>
            <param name="p_ItemIdList">The ItemIdList of the newly selected file.</param>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.Refresh(Jam.Shell.RefreshLevel)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.Refresh(Jam.Shell.RefreshLevel,Jam.Shell.ItemIdList)">
            <summary>This method indicates that the control should perform a refresh of its contents.</summary>
            <param name="pLevel">The level of refresh that should be performed.</param>
            <param name="pItemIdList">An optional ItemIdList that identifies the file or folder that should be refreshed. This value can be null.</param>
            <seealso cref="T:Jam.Shell.RefreshLevel"/>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.FullRefresh">
            <summary>
            Reloads the thumbnail image.
            </summary>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.SmartRefresh">
            <summary>
            Implements <see cref="T:Jam.Shell.IShellControl"/>IShellControl.SmartRefresh.
            Internally calls <see cref="M:Jam.Shell.ThumbnailImage.FullRefresh"/>FullRefresh.
            </summary>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.GoUp">
            <summary>
            Implements <see cref="T:Jam.Shell.IShellControl"/>IShellControl.GoUp.
            </summary>
            <returns>Returns false always</returns>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.GetThumbnailImage">
            <summary>
            This method starts generating a thumbnail asynchronously
            </summary>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.ImageWidth">
            <summary>
            Returns the width that is used for the image.
            </summary>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.ImageHeight">
            <summary>Gets the height of the image.</summary>
            <value>The height of the image.</value>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.GetThumbnailCallback(System.Drawing.Image,System.Drawing.Bitmap,System.Object)">
            <summary>
            This method is called when the thumbnail image is rendered completely
            </summary>
            <param name="pImage">The bitmap of the thumbnail image</param>
            <param name="pBitmapSource">The source used to create the Image. Only free after freeing the Image. May be null.</param>
            <param name="pState">Not used.</param>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.BeginInit">
            <summary>
            Signals the object that initialization is starting.
            
            </summary>
        </member>
        <member name="M:Jam.Shell.ThumbnailImage.EndInit">
            <summary>
            Signals the object that initialization is complete.
            
            </summary>
        </member>
        <member name="E:Jam.Shell.ThumbnailImage.Initialized">
            <summary>
            Occurs when initialization of the component is completed.
            </summary>
            <seealso cref="P:Jam.Shell.ThumbnailImage.IsInitialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="P:Jam.Shell.ThumbnailImage.IsInitialized">
            <summary>
            Gets a value indicating whether the component is initialized.
            </summary>
            <seealso cref="E:Jam.Shell.ThumbnailImage.Initialized"/>
            <seealso cref="T:System.ComponentModel.ISupportInitializeNotification"/>
        </member>
        <member name="T:Jam.Shell.Resources">
            <summary>
              A strongly-typed resource class, for looking up localized strings, etc.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.ResourceManager">
            <summary>
              Returns the cached ResourceManager instance used by this class.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.Culture">
            <summary>
              Overrides the current thread's CurrentUICulture property for all
              resource lookups using this strongly typed resource class.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.AllControlPanelItems">
            <summary>
              Looks up a localized string similar to All Control Panel Items.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.ArrangeIconsBy">
            <summary>
              Looks up a localized string similar to Arrange Icons by:.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.Blank">
            <summary>
              Looks up a localized string similar to  .
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.ControlPanel">
            <summary>
              Looks up a localized string similar to Control Panel.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.Elipsis">
            <summary>
              Looks up a localized string similar to ....
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.ExtensionsHiddenKey">
            <summary>
              Looks up a localized string similar to Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Advanced.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.ExtensionsHiddenValue">
            <summary>
              Looks up a localized string similar to HideFileExt.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.FileExists">
            <summary>
              Looks up a localized string similar to File already exists..
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.JamComponent_Checkbox_Warning">
            <summary>
              Looks up a localized string similar to A ShellControlConnector must be assigned to the ShellControlConnector property of this .
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.JamShellHistoryToolStripArrowLeft">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.JamShellHistoryToolStripArrowRight">
            <summary>
              Looks up a localized resource of type System.Drawing.Bitmap.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.ListView_OwnerDraw">
            <summary>
              Looks up a localized string similar to OwnerDraw must stay true for the ShellListView to work.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.Location_Unavailable">
            <summary>
              Looks up a localized string similar to Location unavailable.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.NewFolder">
            <summary>
              Looks up a localized string similar to New Folder.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.NewShortcut">
            <summary>
              Looks up a localized string similar to New Shortcut.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.ParentFolder">
            <summary>
              Looks up a localized string similar to ...
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.ShellNewRegistryKey">
            <summary>
              Looks up a localized string similar to Software\\Microsoft\\Windows\\CurrentVersion\\Explorer\\Discardable\\PostSetup\\ShellNew.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.TreeView_DrawMode">
            <summary>
              Looks up a localized string similar to DrawMode must be set to TreeViewDrawMode.OwnerDrawAll for the ShellTreeView to work.
            </summary>
        </member>
        <member name="P:Jam.Shell.Resources.TreeView_ShowLines_Warning">
            <summary>
              Looks up a localized string similar to The ShowLines property can&apos;t be activated, if UseSystemStyles is set to true and the detected operating system is Windows Vista or later. This is to keep the look&amp;feel consistent, ShowLines together with the Vista TreeView..
            </summary>
        </member>
        <member name="T:Jam.Design.OffScreenHelper">
            <summary>
              The <see cref="T:Jam.Design.OffScreenHelper"/> class simplifies the special handling of visual COM objects in designer. 
              It is only used at design time to make such a component interactive editable in designer. It hosts a COM 
              object on an full transparent form and makes screenshots from this form. Those screenshots are painted on 
              a bitmap and shown in designer. So the COM object is resizable in designer but not really usable there. 
              For a working example see <c>ExplorerBrowser</c>.
            </summary>
            <remarks>
              Delegate the <c>OnPaint</c> from the owner to this class.
            </remarks>
        </member>
        <member name="M:Jam.Design.OffScreenHelper.#ctor(System.Windows.Forms.Control)">
            <summary>
            Constructor for creating a <c>OffScreenHelper</c> instance.
            </summary>
            <param name="control">
            The control to create the screenshots from.
            </param>
        </member>
        <member name="M:Jam.Design.OffScreenHelper.Paint(System.Object,System.Windows.Forms.PaintEventArgs)">
            <summary>
            Paints the screenshots on the graphics object.
            </summary>
            <param name="pSender">The sender.</param>
            <param name="e">The event arguments.</param>
        </member>
        <member name="P:Jam.Design.OffScreenHelper.Control">
            <summary>
              Gets or sets the control to create the screenshots from.
            </summary>
            <returns>
              The control.
            </returns>
        </member>
        <member name="P:Jam.Design.OffScreenHelper.ParentHandle">
            <summary>
              Gets the handle to the off-screen form of which the screenshots are made at design time.
            </summary>
            <returns>
              The handle to the off-screen form at design time. At run time the handle of the parent window is returned.
            </returns>
        </member>
        <member name="T:Resfinder">
            <summary>
            This class is used to locate the resource files correctly. It needs to be place outside the namespace in order to work.
            </summary>
        </member>
    </members>
</doc>
