<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ShellBrowser.Core</name>
    </assembly>
    <members>
        <member name="T:Jam.Shell.BaseShellItem">
            <summary>
            Base wrapper class for items in system list classes, like <c>ExplorerBrowser</c>.
            </summary>
        </member>
        <member name="F:Jam.Shell.BaseShellItem.m_ItemIdList">
            <summary>
            Absolute ItemIdList of the Item
            </summary>
        </member>
        <member name="M:Jam.Shell.BaseShellItem.#ctor">
            <summary>
            For compatibility with <see cref="T:Jam.Shell.SystemShellListItemCollection`1"/>
            </summary>
            <remarks>Empty constructor is needed to create instances of the class given in generic type parameter</remarks>
        </member>
        <member name="M:Jam.Shell.BaseShellItem.#ctor(Jam.Shell.ItemIdList)">
            <summary>
            Construct a new item.
            </summary>
            <param name="p_ItemIdList">The ItemIdList that specifies the item within the system. Parameter may not be null.</param>
        </member>
        <member name="P:Jam.Shell.BaseShellItem.FullPath">
            <summary>
            Return the full path within the filesystem.
            This may be empty, if the item has no filesystem path.
            </summary>
        </member>
        <member name="P:Jam.Shell.BaseShellItem.AbsoluteItemIdList">
            <summary>
            Get the absolute ItemIdList of the item.
            </summary>
        </member>
        <member name="M:Jam.Shell.BaseShellItem.Rename(System.String)">
            <summary>
            Rename a file item
            </summary>
            <param name="p_NewName">The new name the item will be renamed to.</param>
            <returns>true if the item was renamed successfully</returns>
        </member>
        <member name="P:Jam.Shell.BaseShellItem.Cut">
            <summary>
            Defines if the item's image should be shown ghosted or not.
            </summary>
        </member>
        <member name="P:Jam.Shell.BaseShellItem.OverlayImage">
            <summary>
            The index of the overlay image in the system image list that should be shown in front of the normal icon.
            </summary>
        </member>
        <member name="T:Jam.Shell.SystemShellListItemCollection`1">
            <summary>
            Generic collection class for items implementing IShellItem. 
            </summary>
            <typeparam name="T">The type of the list items contained, must implement <see cref="T:Jam.Shell.IShellItem"/></typeparam>
        </member>
        <member name="F:Jam.Shell.SystemShellListItemCollection`1.m_IsReadOnly">
            <summary>
            Is the ItemCollection readonly?
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.IndexOf(`0)">
            <summary>
            Searches for the specified object and returns the zero-based index of the
            first occurrence within the entire Collections.
            </summary>
            <param name="item">The object to locate in the Collection. The value
            can be null for reference types.</param>
            <returns>The zero-based index of the first occurrence.</returns>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.IndexOfPath(System.String)">
            <summary>
            Searches item collection for the specified path.
            </summary>
            <param name="path">A complete path to be searched</param>
            <returns>-1 if the element couldn't be found, the position in the item collection otherwise</returns>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.Insert(System.Int32,`0)">
            <summary>
            Part of the <see cref="T:System.Collections.Generic.IList`1"/> interface. Inserts the passed item at the passed index.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the list is readonly.</exception>
            <param name="index">The index to insert the item.</param>
            <param name="item">The item to insert.</param>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.RemoveAt(System.Int32)">
            <summary>
            Part of the <see cref="T:System.Collections.Generic.IList`1"/> interface. Removes the item at the passed index.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the list is readonly.</exception>
            <param name="index">The index to remove.</param>
        </member>
        <member name="P:Jam.Shell.SystemShellListItemCollection`1.Item(System.Int32)">
            <summary>
            Get a item at the specified index. The setter currently always throws an exception.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the requested operation is invalid.</exception>
            <param name="index">The index to get or set.</param>
            <returns>The item at the specified index.</returns>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.Add(`0)">
            <summary>
            Part of the <see cref="T:System.Collections.Generic.ICollection`1"/> interface. Adds an element to the
            collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the collection is readonly.</exception>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.AddInternal(`0)">
            <summary>
            Internal <see cref="M:Jam.Shell.SystemShellListItemCollection`1.Add(`0)"/> method for the <see cref="T:Jam.Shell.SystemShellListItemCollection`1"/>.
            </summary>
            <param name="item">The item to add</param>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.Clear">
            <summary>
            Part of the <see cref="T:System.Collections.Generic.ICollection`1"/> interface, clears the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the collection is readonly.</exception>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.ClearInternal">
            <summary>
            Internal <see cref="M:Jam.Shell.SystemShellListItemCollection`1.Clear"/> method. Clears all items from the collection.
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.Contains(`0)">
            <summary>
            Determines whether an element is in the collection
            </summary>
            <param name="item">the item</param>
            <returns>true, if the item is returned</returns>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.CopyTo(`0[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Jam.Shell.SystemShellListItemCollection`1"/> to a compatible
            one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="P:Jam.Shell.SystemShellListItemCollection`1.Count">
            <summary>
            Returns the number of items in the collection
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemShellListItemCollection`1.IsReadOnly">
            <summary>
            Returns true
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.Remove(`0)">
            <summary>
            Part of the <see cref="T:System.Collections.Generic.ICollection`1"/> interface. Removes an element from the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the list is readonly.</exception>
            <param name="item">The object to remove from the
            <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>true if the item was removed, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator for the items.</returns>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.SystemShellListItemCollection`1"/> class.
            </summary>
            <param name="isReadOnly">if set to <c>true</c> the collection is readonly.</param>
        </member>
        <member name="M:Jam.Shell.SystemShellListItemCollection`1.GetFilePaths">
            <summary>
            returns the Filepaths contained in this collection as string array. 
            </summary>
            <returns>a string array of filepaths</returns>
        </member>
        <member name="T:Jam.Shell.ItemEventArgs`1">
            <summary>
            Event arguments for adding an item to a control. See also <see cref="T:Jam.Shell.AddItemEventArgsBase`1"/>.
            </summary>
            <typeparam name="T">The list item type, derived from <see cref="T:Jam.Shell.IShellItem"/></typeparam>
        </member>
        <member name="P:Jam.Shell.ItemEventArgs`1.Item">
            <summary>
            Object which contains information about the item that should be added to the shell view.
            </summary>
        </member>
        <member name="M:Jam.Shell.ItemEventArgs`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="aItem">Object which contains information about the item that should be added to the shell view.</param>
        </member>
        <member name="T:Jam.Shell.AddItemEventArgsBase`1">
            <summary>
            Event arguments for adding an item to a control.
            </summary>
            <typeparam name="T">The list item type, derived from <see cref="T:Jam.Shell.IShellItem"/></typeparam>
        </member>
        <member name="P:Jam.Shell.AddItemEventArgsBase`1.CanAdd">
            <summary>
            With the CanAdd variable it can be decided individually, which items should be shown in the shell view.
            </summary>
        </member>
        <member name="M:Jam.Shell.AddItemEventArgsBase`1.#ctor(`0)">
            <summary>
            Initializes a new instance of the class.
            </summary>
            <param name="aItem">Object which contains information about the item that should be added to the shell view.</param>
        </member>
        <member name="T:Jam.Shell.AddBaseItemEventArgs">
            <summary>
            Contains data for adding an item to the shell view.
            </summary>
        </member>
        <member name="M:Jam.Shell.AddBaseItemEventArgs.#ctor(Jam.Shell.BaseShellItem)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.AddBaseItemEventArgs"/> class.
            </summary>
            <param name="aItem"><see cref="T:Jam.Shell.BaseShellItem"/> object, which contains information about the item, 
            which should be added to the shell view.</param>
        </member>
        <member name="T:Jam.Shell.ShellItemFilter">
            <summary>
            Provides filtering to the containing control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellItemFilter.m_FilePatternFilter">
            <summary>
            <see cref="P:Jam.Shell.ShellItemFilter.FilePatternFilter"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellItemFilter.m_FilePatternFilterRegex">
            <summary>
            <see cref="P:Jam.Shell.ShellItemFilter.FilePatternFilter"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItemFilter.ShowFiles">
            <summary>
            If set to true, files will be shown in the control.
            If set to false, files will not be visible in the control.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItemFilter.ShowFolders">
            <summary>
            The property ShowFolders allows you to include or hide the folders in the shell view.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItemFilter.ShowHidden">
            <summary>
            Is set to 'true', hidden elements will also be shown.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItemFilter.ShowNethood">
            <summary>
            If set to 'false', the Network Neighbourhood is not shown in the component,
            otherwise it is shown (the default value is true).
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItemFilter.ShowRecycleBin">
            <summary>
            If set to true, the recycle bin will be visible. If set to false, the recycle bin will be hidden
            (the default value is true).
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItemFilter.FileSystemOnly">
            <summary>
            If FileSystemOnly is set to True, objects and virtual folders which do not have a file system path, will not be displayed.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItemFilter.FilePatternFilter">
            <summary>
            You can use a single pattern, e.g. '*.doc' or concatenate several patterns using semicolons to separate them, e.g. '*.exe;*.com'.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellItemFilter.FilterRegex">
            <summary>
            Set this property to a regular expression if you want to only show those files that match the regex.
            This value also changes  if the property <see cref="P:Jam.Shell.ShellItemFilter.FilePatternFilter"/> is set.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellItemFilter.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellItemFilter"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellItemFilter.#ctor(Jam.Shell.ShellBrowserBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellItemFilter"/> class.
            </summary>
            <param name="pShellBrowser">A ShellBrowser instance holding the data to filter</param>
        </member>
        <member name="M:Jam.Shell.ShellItemFilter.OnFilterChanged">
            <summary>
            Raises the FilterChanged event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellItemFilter.IsIncluded(Jam.Shell.ItemIdList)">
            <summary>
            Main method that checks if the relativePidl is contained in the filter.
            </summary>
            <param name="relativePidl">Pidl relative to this instance's Folder</param>
            <returns>true if the item represented by relativePidl passed the filter criteria, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellItemFilter.IsSet">
            <summary>
            Checks if a filter is set or if the Filter is at its default state.
            </summary>
            <returns>true if any filtering is set</returns>
        </member>
        <member name="E:Jam.Shell.ShellItemFilter.FilterChanged">
            <summary>
            Raised when one of the filter criteria was changed
            </summary>
        </member>
        <member name="T:Jam.Shell.IShellItem">
            <summary>
            Defines a common interface for ShellListItem and ShellTreeNode.
            </summary>
        </member>
        <member name="P:Jam.Shell.IShellItem.FullPath">
            <summary>
            Get the full path of the item.
            </summary>
        </member>
        <member name="P:Jam.Shell.IShellItem.AbsoluteItemIdList">
            <summary>
            Get the absolute ItemIdList of the item.
            </summary>
        </member>
        <member name="T:Jam.Shell.IJamShellItemVisuals">
            <summary>Interface for visual presentation of shell items.</summary>
        </member>
        <member name="P:Jam.Shell.IJamShellItemVisuals.Cut">
            <summary>
            Show the icon of a the item "ghosted" if the user has
            performed the cut operation (Ctrl-X)
            </summary>
        </member>
        <member name="P:Jam.Shell.IJamShellItemVisuals.OverlayImage">
            <summary>
            The index of the overlay image in the system image list 
            that should be shown in front of the normal icon.
            </summary>
        </member>
        <member name="T:Jam.Shell.IJamShellItemOperations">
            <summary>Interface for operations items presented in the shell components can support. </summary>
        </member>
        <member name="M:Jam.Shell.IJamShellItemOperations.Rename(System.String)">
            <summary>
            Rename a file item
            </summary>
            <param name="p_NewName">The new name the item will be renamed to.</param>
            <returns>true if the item was renamed successfully</returns>
        </member>
        <member name="T:Jam.Shell.IDropTarget">
            <summary>
            Implemented for items that support dropping.
            </summary>
        </member>
        <member name="P:Jam.Shell.IDropTarget.IsDropTarget">
            <summary>
            If this property is set to true, then the item is formatted as a highlighted drop target.
            </summary>
        </member>
        <member name="T:Jam.Shell.IShellControlConnectorTarget">
            <summary>Interface that is used by ShellControlConnector, that is implemented by controls and called when the common path or centrally selected item changes.</summary>
        </member>
        <member name="M:Jam.Shell.IShellControlConnectorTarget.FolderChanged(Jam.Shell.ItemIdList)">
            <summary>
            Changes the displayed folder in all connected controls.
            </summary>
            <param name="p_ItemIdList">An absolute <see cref="T:Jam.Shell.ItemIdList"/> representing the path that was selected and should be synchronized in a component if it supports it.</param>
        </member>
        <member name="M:Jam.Shell.IShellControlConnectorTarget.SelectedFileChange(Jam.Shell.ItemIdList)">
            <summary>
            Changes the displayed file in all connected controls.
            </summary>
            <param name="p_ItemIdList">An absolute <see cref="T:Jam.Shell.ItemIdList"/> representing the file that was selected and should be synchronized in a component if it supports it.</param>
        </member>
        <member name="T:Jam.Shell.ICheckableItem">
            <summary>Interface for checkable item.</summary>
        </member>
        <member name="P:Jam.Shell.ICheckableItem.Checked">
            <summary>Gets or sets a value indicating whether the item is checked.</summary>
            <value>True if checked, false if not.</value>
        </member>
        <member name="T:Jam.Shell.IShellControlConnector">
            <summary>Interface for ShellControlConnector that is used by WPF controls to inform on path changes/>.</summary>
        </member>
        <member name="M:Jam.Shell.IShellControlConnector.RegisterShellControl(Jam.Shell.IShellControlConnectorTarget)">
            <summary>
            Registers a control with the ShellControlConnector
            </summary>
            <param name="p_Control">A shell control that implements the <see cref="T:Jam.Shell.IShellControlConnectorTarget"/> interface</param>
        </member>
        <member name="M:Jam.Shell.IShellControlConnector.DeregisterShellControl(Jam.Shell.IShellControlConnectorTarget)">
            <summary>
            Deregisters a control with the ShellControlConnector
            </summary>
            <param name="p_Control">A shell control that implements the <see cref="T:Jam.Shell.IShellControlConnectorTarget"/> interface</param>
        </member>
        <member name="M:Jam.Shell.IShellControlConnector.PathChanged(Jam.Shell.IShellControlConnectorTarget,Jam.Shell.ItemIdList)">
            <summary>
            Used by the connected controls for synchronization. Sets a new path in the ShellControlConnector.
            </summary>
            <param name="p_Sender">Contains the sender, which triggered the change of the folder.</param>
            <param name="p_ItemIdList">Contains an absolute <see cref="T:Jam.Shell.ItemIdList"/> representing the selected folder.</param>
        </member>
        <member name="M:Jam.Shell.IShellControlConnector.SelectedFileChanged(Jam.Shell.IShellControlConnectorTarget,Jam.Shell.ItemIdList)">
            <summary>
            Used by the connected controls for synchronization. Usually this method should not be called by the user directly.
            </summary>
            <param name="p_Sender">Contains the sender, which triggered the change of the file.</param>
            <param name="p_ItemIdList">Contains an absolute <see cref="T:Jam.Shell.ItemIdList"/> representing the selected file.</param>
        </member>
        <member name="T:Jam.Shell.Dialogs.ControlPanelItem">
            <summary>
            Possible control panel items.
            </summary>
            <remarks>
            Bitness of calling application and OS must match to show control panel items. Ensure application is targeted architecture \"Any CPU\"!
            </remarks>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.AllTasks">
            <summary>
            All tasks
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.QuickAccess">
            <summary>
            Quick access
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.Favorites">
            <summary>
            Favorites
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.PowerOptions">
            <summary>
            Power Options
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.Taskbar">
            <summary>
            Taskbar
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.CredentialManager">
            <summary>
            Credential Manager
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.DefaultPrograms">
            <summary>
            Set User Defaults
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.RemoteAppAndDesktopConnections">
            <summary>
            Workspaces Center
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.WindowsFirewall">
            <summary>
            Windows Defender Firewall
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.PhoneAndModem">
            <summary>
            Phone and Modem Control Panel
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.SpeechRecognition">
            <summary>
            Speech Recognition
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.UserAccounts">
            <summary>
            User Accounts
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.RegionAndLanguage">
            <summary>
            Region and Language
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.HomeGroup">
            <summary>
            HomeGroup Control Panel
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.Mouse">
            <summary>
            Mouse Control Panel
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.FolderOptions">
            <summary>
            Folder Options
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.Keyboard">
            <summary>
            Keyboard Control Panel
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.Display">
            <summary>
            Display Control Panel
            </summary>
            <remarks>
            Only present on Windows Vista and 7.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.DeviceManager">
            <summary>
            Device Manager
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.ProgramsAndFeatures">
            <summary>
            Programs and Features
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.TabletPCSettings">
            <summary>
            Tablet PC Settings Control Panel
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.IndexingOptions">
            <summary>
            Indexing Options Control Panel
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.NetworkAndSharingCenter">
            <summary>
            Network and Sharing Center
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.AutoPlay">
            <summary>
            AutoPlay
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.SyncCenter">
            <summary>
            Sync Center Folder
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.Recovery">
            <summary>
            System Recovery
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.InternetOptions">
            <summary>
            Internet Options
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.DevicesAndPrinters">
            <summary>
            Device Center
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.ColorManagement">
            <summary>
            Color Management
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.BackupAndRestore">
            <summary>
            Windows 7 File Recovery
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.System">
            <summary>
            System
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.ActionCenter">
            <summary>
            Security and Maintenance CPL
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.Fonts">
            <summary>
            Microsoft Windows Font Folder
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.Language">
            <summary>
            Language Settings
            </summary>
            <remarks>
            Only since Windows 10.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.Troubleshooting">
            <summary>
            Troubleshooting
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.TextToSpeech">
            <summary>
            Text to Speech Control Panel
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.AdministrativeTools">
            <summary>
            Administrative Tools
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.EaseOfAccessCenter">
            <summary>
            Ease of Access
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.BitLockerDriveEncryption">
            <summary>
            Secure Startup
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.DateAndTime">
            <summary>
            Date and Time Control Panel
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.Personalization">
            <summary>
            Personalization Control Panel
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.Sound">
            <summary>
            Sound Control Panel
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.FileHistory">
            <summary>
            History Vault
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.PenAndTouch">
            <summary>
            Pen and Touch Control Panel
            </summary>
        </member>
        <member name="F:Jam.Shell.Dialogs.ControlPanelItem.StorageSpaces">
            <summary>
            Storage Spaces
            </summary>
        </member>
        <member name="M:Jam.Shell.Dialogs.ControlPanelItemGuid.GetGuid(Jam.Shell.Dialogs.ControlPanelItem)">
            <summary>
            Gets the GUID for a <see cref="T:Jam.Shell.Dialogs.ControlPanelItem"/>.
            </summary>
            <param name="pItem">The <see cref="T:Jam.Shell.Dialogs.ControlPanelItem"/></param>
            <returns>The GUID</returns>
        </member>
        <member name="T:Jam.Shell.Dialogs.FileOperation">
            <summary>
              Perform file operations.
            </summary>
        </member>
        <member name="M:Jam.Shell.Dialogs.FileOperation.Copy(Jam.Shell.ItemIdList,Jam.Shell.ItemIdList)">
            <summary>
              Copies a file or folder.
            </summary>
            <param name="pFileName">
              The file or folder that should be copied.
            </param>
            <param name="pFolder">
              An existing folder where the specified file or folder should be copied.
            </param>
            <remarks>
              <example>
                The following example shows how to copy a file:
                <code>
                  ItemIdList File = new ItemIdList("C:\\file.exe");
                  ItemIdList Folder = new ItemIdList("D:\\");
                  FileOperation.Copy(File, Folder);
                </code>
              </example>
            </remarks>
            <exception cref="T:System.ArgumentNullException">if any argument is null or invalid.</exception>
        </member>
        <member name="T:Jam.Shell.FolderChangingEventArgs">
            <summary>
            Event arguments for the <c>ExplorerBrowser.NavigationPending</c> event. To cancel the navigation operation <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> can be set to true.
            </summary>
        </member>
        <member name="P:Jam.Shell.FolderChangingEventArgs.FolderIdList">
            <summary>Gets an ItemIdList representing the target folder of the navigation.</summary>
            <value>An ItemIdList representing the target folder. See <see cref="P:Jam.Shell.ItemIdList.Path"/> or <see cref="P:Jam.Shell.ItemIdList.DisplayPath"/>.</value>
        </member>
        <member name="T:Jam.Shell.CheckMode">
            <summary>
            Values that represent check modes for <c>ExplorerBrowser</c> and <c>ShellSystemList</c>.
            </summary>
        </member>
        <member name="F:Jam.Shell.CheckMode.None">
            <summary>No checkboxes are used. </summary>
        </member>
        <member name="F:Jam.Shell.CheckMode.Checkboxes">
            <summary>Checkboxes are displayed. </summary>
        </member>
        <member name="F:Jam.Shell.CheckMode.AutoSelect">
            <summary>Checkboxes are displayed that can be used to control the selection of items. </summary>
        </member>
        <member name="T:Jam.Shell.ExplorerShowHeader">
            <summary>
            Possible column header states.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerShowHeader.Always">
            <summary>
            Column header is always visible
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerShowHeader.Never">
            <summary>
            Column header is hidden
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerShowHeader.Auto">
            <summary>
            Column header is visible in viewmode details only.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowserNativeWrapper.m_ExplorerBrowser">
            <summary>
            The ComObject that is used internally
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowserNativeWrapper.m_VisiblePanes">
            <summary>
            Keeps track of the visible panes.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowserNativeWrapper.m_FolderView">
            <summary>
            Holds the IFolderView interface for the ExplorerBrowser instance.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowserNativeWrapper.m_ShellView">
            <summary>
            Holds the IShellView interface for the ExplorerBrowser instance.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowserNativeWrapper.m_ExplorerBrowserHandle">
            <summary>
            The hWnd of the ExplorerBrowser-Control
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowserNativeWrapper.m_ShellTreeHandle">
            <summary>
            The hWnd of the TreeView32 in ExplorerBrowserControl
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerBrowserNativeWrapper.m_ShellViewHandle">
            <summary>
            The hWnd of the ShellView in ExplorerBrowserControl
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowserNativeWrapper.VisiblePanes">
            <summary>
            Gets or sets the panes that are/should be visible. <see cref="T:Jam.Shell.ExplorerPane"/> for values.
            Flags can be added by "|", i.e. VisiblePanes |= ExplorerPane.PreviewPane removed by VisiblePanes &amp;= ~ExplorerPane.PreviewPane
            Not all panes are currently supported.
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowserNativeWrapper.GetViewModeAndIconSizeFromControl(System.Boolean)">
            <summary>
            Updates the internal viewMode and iconsize from the control used
            </summary>
            <param name="forceUpdate">overwrites viewMode "Auto"</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowserNativeWrapper.GetItems(Jam.Shell.Com.IFolderView,Jam.Shell.Com.SVGIO,Jam.Shell.SystemShellListItemCollection{Jam.Shell.BaseShellItem}@)">
            <summary>
            Retrieves the items in the specified IFolderView.
            </summary>
            <param name="pFolderView">The IFolderView instance to use</param>
            <param name="pItemType">Specifies what items to fetch: SVGIO_ALLVIEW for all items, SVGIO_SELECTION for selected items</param>
            <param name="pItems">The item collection.</param>
            <returns><c>True</c> if successful or <c>False</c> otherwise.</returns>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowserNativeWrapper.Items">
            <summary>
            Gets the current visible items.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowserNativeWrapper.SelectedItems">
            <summary>
            Gets the current selected items.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowserNativeWrapper.CheckedItems">
            <summary>
            Gets the current checked items.
            </summary>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowserNativeWrapper.Columns">
            <summary>
            Gets the <see cref="T:Jam.Shell.ShellViewColumns"/> the control currently displays. Not supported on Windows XP.
            </summary>
            <value>
            An <see cref="T:Jam.Shell.ShellViewColumns"/> collection containing the visible columns.
            </value>
            <example> 
            The following examples control the columns displayed in the ExplorerBrowser. 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_AddColumns" lang="C#" /> 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_SetColumns" lang="C#" /> 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_ShowColumns" lang="C#" /> 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_RemoveColumns" lang="C#" /> 
            </example>
        </member>
        <member name="P:Jam.Shell.ExplorerBrowserNativeWrapper.AllColumns">
            <summary>
            Gets a list of all columns that are supported in the current view. These depend on what the control currently displays. Not supported on Windows XP.
            </summary>
            <value>
            A <see cref="T:Jam.Shell.ShellViewColumns"/> collection containing all columns supported by the current view. 
            </value>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowserNativeWrapper.AddItem">
            <summary>
            This event occurs if a ListItem is to be added to the list.
            If the "CanAdd" property of the event args is set to false in an 
            event handler, the item will not be added to the listview.
            </summary>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowserNativeWrapper.NavigationFailed">
            <summary>
            Occurs when navigating to a folder has failed.
            </summary>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowserNativeWrapper.NavigationPending">
            <summary>
            Occurs before navigating to a folder. The operation can be cancelled using <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/>
            </summary>
        </member>
        <member name="E:Jam.Shell.ExplorerBrowserNativeWrapper.SelectionChanged">
            <summary>
            This event occurs, if a selection changed in the listview
            </summary>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowserNativeWrapper.OnNavigationPending(System.IntPtr)">
            <summary>Executes the navigation pending action.</summary>
            <param name="pFolderPidl">The folder PIDL.</param>
            <returns>false if navigation was intercepted, true if navigation should continue.</returns>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowserNativeWrapper.OnAddItem(Jam.Shell.AddBaseItemEventArgs)">
            <summary>
            Issues the <see cref="E:Jam.Shell.ExplorerBrowserNativeWrapper.AddItem"/> event.
            </summary>
            <param name="pArgs">The event arguments that will be passed as a parameter.</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowserNativeWrapper.IndexOf(Jam.Shell.ItemIdList,Jam.Shell.SystemShellListItemCollection{Jam.Shell.BaseShellItem})">
            <summary>
            Searches for the index of the ItemIdList within a specified list.
            </summary>
            <param name="pItemIdList">The ItemIdList that will be searched.</param>
            <param name="pItems">The list that will be searched for the ItemIdList.</param>
            <returns>The index of the item or -1 if the item is not in the list.</returns>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowserNativeWrapper.CreateInstance(System.IntPtr,Jam.Shell.RECT,System.Boolean)">
            <summary>Creates an instance of an ExplorerBrowserWrapper.</summary>
            <param name="pHostHandle">Handle of the host.</param>
            <param name="pRect">The rectangle.</param>
            <param name="pTrackInPropertyBag">True to track in property bag.</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowserNativeWrapper.Resize(Jam.Shell.RECT)">
            <summary>Resizes the native ExplorerBrowser control to the passed RECT.</summary>
            <param name="pNewRect">The new rectangle.</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowserNativeWrapper.IsPaneVisible(Jam.Shell.ExplorerPane)">
            <summary>Query if 'pPane' is available.</summary>
            <param name="pPane">The pane.</param>
            <returns>True if pane is visible, false if not.</returns>
            <remarks>This method checks the <see cref="P:Jam.Shell.ExplorerBrowserNativeWrapper.VisiblePanes"/>. For the navigation pane it also checks the physical existance of a TreeView in the control.</remarks>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowserNativeWrapper.IsPaneVisible(System.IntPtr)">
            <summary>Query if 'pPane' is available.</summary>
            <param name="pPaneHandle">Handle of the pane.</param>
            <returns>True if pane is visible, false if not.</returns>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowserNativeWrapper.UpdateFilter(Jam.Shell.ItemIdList)">
            <summary>
            Updates the filter.
            </summary>
            <param name="pFolderIdList">The folder where the filter should be applied.</param>
        </member>
        <member name="M:Jam.Shell.ExplorerBrowserNativeWrapper.Focus">
            <summary>
            Sets the input focus to the ShellView of this control.
            </summary>
        </member>
        <member name="F:Jam.Shell.CommonLicenseChecking`1.c_JamBinDir">
            <summary>
            Path to the Dll-Binaries in the installed location
            </summary>
        </member>
        <member name="F:Jam.Shell.CommonLicenseChecking`1.c_DefaultRegKey">
            <summary>
            The registry path to the ShellBrowser Software
            </summary>
        </member>
        <member name="F:Jam.Shell.CommonLicenseChecking`1.c_JamDesignDll">
            <summary>
            In design mode the fullversion must provide the file JamDesign.dll to be fully functional
            </summary>
        </member>
        <member name="F:Jam.Shell.CommonLicenseChecking`1.c_MessageDevelopmentLicenseContent">
            <summary>
            The content of the development license messagebox that appears if <see cref="F:Jam.Shell.CommonLicenseChecking`1.c_JamDesignDll"/> is not found
            </summary>
        </member>
        <member name="F:Jam.Shell.CommonLicenseChecking`1.c_MessageDevelopmentLicenseHeader">
            <summary>
            The header text field of the development license messagebox that appears if <see cref="F:Jam.Shell.CommonLicenseChecking`1.c_JamDesignDll"/> is not found
            </summary>
        </member>
        <member name="M:Jam.Shell.CommonLicenseChecking`1.VerifyPublicKey(System.Object)">
            <summary>
            This method verifies the public keys (parameters are obfuscated).
            It does so by checking the public-key of the ExecutingAssembly against
            the public key given in the parameter.
            </summary>
            <param name="pkey">the public key to check for, needs to be of type byte[]</param>
            <returns>true if both public keys match</returns>
        </member>
        <member name="F:Jam.Shell.CommonLicenseChecking`1.m_RegKeyShellBrowser">
            <summary>
            The registry path to the ShellBrowser Software
            </summary>
        </member>
        <member name="F:Jam.Shell.CommonLicenseChecking`1.m_DesignAssembly">
            <summary>
            This holds a reference to the JamDesign.dll assembly, it is only set if it 
            was found in VerifyDevelopmentLicense
            </summary>
        </member>
        <member name="T:Jam.Shell.ICommonPreviewHandlerHost">
            <summary>Interface for the host of a PreviewHandler, i.e. the control hosing a CommonPreviewHandler. 
            It is used to provide the handle and displayRect to the system's PreviewHandler. Also it must provide an "OnLoaded" eventhandler that is called after the preview has been loaded asynchronously.
            </summary>
        </member>
        <member name="M:Jam.Shell.ICommonPreviewHandlerHost.GetSynchronizationContext">
            <summary>PreviewHost must provide its SynchronizationContext to be used by async events.</summary>
            <returns>The SynchronizationContext valid for the thread the HostControl was created in, e.g. SynchronizationContext.Current or DispatcherSynchronizationContext.Current</returns>
        </member>
        <member name="M:Jam.Shell.ICommonPreviewHandlerHost.GetDisplayRect">
            <summary>Gets display rectangle.</summary>
            <returns>The display rectangle.</returns>
        </member>
        <member name="M:Jam.Shell.ICommonPreviewHandlerHost.GetWindowHandle">
            <summary>Gets window handle.</summary>
            <returns>The window handle.</returns>
        </member>
        <member name="M:Jam.Shell.ICommonPreviewHandlerHost.OnCommonPreviewHandlerLoaded(Jam.Shell.IShellPreviewHandler,Jam.Shell.ItemIdList,System.Boolean,System.Exception)">
            <summary>Controls implementing this interface must implement this eventhandler, which is called after the preview has been loaded.</summary>
            <param name="sender">The sender.</param>
            <param name="pItemIdList">The ItemIdList that has been loaded.</param>
            <param name="succeeded">true if loading was a success, false if it failed.</param>
            <param name="loadException">The exception that happened during loading or null if there wasn't any.</param>
        </member>
        <member name="T:Jam.Shell.IShellPreviewHandler">
            <summary>
            Interface that is used by a host control implementing <see cref="T:Jam.Shell.ICommonPreviewHandlerHost"/> for the preview of different file types
            </summary>
        </member>
        <member name="M:Jam.Shell.IShellPreviewHandler.Load(Jam.Shell.ICommonPreviewHandlerHost,System.String,Jam.Shell.ItemIdList)">
            <summary>
            Loads the file given through the parameters
            </summary>
            <param name="p_Parent">The host control of the PreviewHandlers.</param>
            <param name="p_Path">The file path to be displayed</param>
            <param name="p_AbsolutePidl">The absolute ItemIdList of the file to be displayed.</param>
            <returns>true if loading succeeded</returns>
        </member>
        <member name="M:Jam.Shell.IShellPreviewHandler.Unload">
            <summary>
            Unloads the file and the preview.
            </summary>
        </member>
        <member name="M:Jam.Shell.IShellPreviewHandler.Show">
            <summary>
            Displays the Preview. 
            </summary>
        </member>
        <member name="M:Jam.Shell.IShellPreviewHandler.Resize">
            <summary>
            Resizes the preview
            </summary>
        </member>
        <member name="F:Jam.Shell.CommonPreviewHandler.cWebPreviewHandler">
            <summary>The GUID of the WebPreviewHandler class. </summary>
        </member>
        <member name="M:Jam.Shell.Log.LogException(System.String,System.Exception)">
            <summary>
            Logs the exception if Debug Build is used.
            </summary>
            <param name="msg">The message.</param>
            <param name="e">The exception to log.</param>
        </member>
        <member name="M:Jam.Shell.Log.LogDebugMessage(System.String)">
            <summary>
            Writes a message if Debug build is used.
            </summary>
            <param name="msg"></param>
        </member>
        <member name="M:Jam.Shell.Log.LogMessage(System.String)">
            <summary>
            Writes a message if TRACE is defined (in Debug and Release Builds).
            </summary>
            <param name="msg"></param>
        </member>
        <member name="T:Jam.Shell.StreamWrapper">
            <summary>
            Provides a very basic implementation of System.Runtime.InteropServices.IStream that wraps an System.IO.Stream.
            </summary>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.#ctor(System.IO.Stream)">
            <summary>
            Initialises a new instance of the StreamWrapper class, using the specified System.IO.Stream.
            </summary>
            <param name="inner"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.Clone(System.Runtime.InteropServices.ComTypes.IStream@)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="ppstm"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.Commit(System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="grfCommitFlags"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.CopyTo(System.Runtime.InteropServices.ComTypes.IStream,System.Int64,System.IntPtr,System.IntPtr)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="pstm"></param>
            <param name="cb"></param>
            <param name="pcbRead"></param>
            <param name="pcbWritten"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.LockRegion(System.Int64,System.Int64,System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="libOffset"></param>
            <param name="cb"></param>
            <param name="dwLockType"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.Read(System.Byte[],System.Int32,System.IntPtr)">
            <summary>
            Reads a sequence of bytes from the underlying System.IO.Stream.
            </summary>
            <param name="pv"></param>
            <param name="cb"></param>
            <param name="pcbRead"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.Revert">
            <summary>
            This operation is not supported.
            </summary>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.Seek(System.Int64,System.Int32,System.IntPtr)">
            <summary>
            Advances the stream to the specified position.
            </summary>
            <param name="dlibMove"></param>
            <param name="dwOrigin"></param>
            <param name="plibNewPosition"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.SetSize(System.Int64)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="libNewSize"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.Stat(System.Runtime.InteropServices.ComTypes.STATSTG@,System.Int32)">
            <summary>
            Returns details about the stream, including its length, type and name.
            </summary>
            <param name="pstatstg"></param>
            <param name="grfStatFlag"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.UnlockRegion(System.Int64,System.Int64,System.Int32)">
            <summary>
            This operation is not supported.
            </summary>
            <param name="libOffset"></param>
            <param name="cb"></param>
            <param name="dwLockType"></param>
        </member>
        <member name="M:Jam.Shell.StreamWrapper.Write(System.Byte[],System.Int32,System.IntPtr)">
            <summary>
            Writes a sequence of bytes to the underlying System.IO.Stream.
            </summary>
            <param name="pv"></param>
            <param name="cb"></param>
            <param name="pcbWritten"></param>
        </member>
        <member name="T:Jam.Shell.AfterLoadedPreviewEventArgs">
            <summary>EventArgs for the ShellFilePreview.AfterPreviewLoaded event.</summary>
        </member>
        <member name="P:Jam.Shell.AfterLoadedPreviewEventArgs.Path">
            <summary>
            Contains the path of the file that was loaded.
            </summary>
        </member>
        <member name="P:Jam.Shell.AfterLoadedPreviewEventArgs.Failed">
            <summary>Gets a value indicating whether loading a preview or a thumbnail as fallback was successful or not.</summary>
            <value>True if no preview could be loaded, false if not.</value>
        </member>
        <member name="T:Jam.Shell.ThumbnailUnavailableHandler">
            <summary>
            A delegate to execute if the shell doesn't supply a real thumbnail of the element.
            </summary>
            <param name="pPath">The path of the file to load a thumbnail for.</param>
            <param name="pSize">The requested size of the thumbnail.</param>
            <param name="pBitmap">A Bitmap representing the the thumbnail of the file. Null if not supplied</param>
        </member>
        <member name="T:Jam.Shell.GetThumbnailArgs">
            <summary>Arguments that specify the retrieval of thumbnails.</summary>
        </member>
        <member name="F:Jam.Shell.GetThumbnailArgs.IconInstead">
            <summary>Specifies if the icon should be returned if there is no thumbnail for the file.</summary>
        </member>
        <member name="F:Jam.Shell.GetThumbnailArgs.DesiredSize">
            <summary>Specifies the desired size.</summary>
        </member>
        <member name="F:Jam.Shell.GetThumbnailArgs.OnThumbnailUnavailable">
            <summary>A delegate to execute if the shell doesn't supply a real thumbnail of the element.</summary>
        </member>
        <member name="M:Jam.Shell.GetThumbnailArgs.Default">
            <summary>Gets the default specification of GetThumbnailArgs.</summary>
            <returns>Default GetThumbnailArgs.</returns>
        </member>
        <member name="M:Jam.Shell.GetThumbnailArgs.#ctor(System.Drawing.Size,System.Boolean,Jam.Shell.ThumbnailUnavailableHandler)">
            <summary>Fills a GetThumbnailArgs struct with the passed values.</summary>
            <param name="pDesiredSize">Destination size of the thumbnail to be retrieved.</param>
            <param name="pIconInstead">true if an icon should be returned if no thumbnail is available.</param>
            <param name="pThumbnailUnavailable">What to do if the shell doesn't provide a thumbnail.</param>
        </member>
        <member name="T:Jam.Shell.ShellThumbnailExtractor">
            <summary>Internal Helper class that extracts thumbnails or icons from the Shell.</summary>
        </member>
        <member name="M:Jam.Shell.ShellThumbnailExtractor.GetBitmapFromHBitmap(System.IntPtr)">
            <summary>Creates a Bitmap from the passed nativeHBitmap. As opposed to Bitmap.FromHBitmap this method preserves the Alpha channel. </summary>
            <param name="nativeHBitmap">The native h bitmap. </param>
            <returns>The bitmap from h bitmap. </returns>
            <remarks>Method was copied and adapted (not requiring unsafe code) from .NET code to get an Image from an ImageList that has been put there using an image handle. </remarks>
        </member>
        <member name="M:Jam.Shell.ShellThumbnailExtractor.FromHbitmap(System.IntPtr,System.Drawing.Size)">
            <summary>
            Converts a handle to a HBITMAP structure to an Image instance.
            If the size given is lesser than 256 pixels in width and height,
            the alpha channel is preserved.
            </summary>
            <param name="pHBitmap">bitmap handle</param>
            <param name="pSize">size structure</param>
            <exception cref="T:System.Runtime.InteropServices.ExternalException">Might be raised, e.g. on Windows PE.</exception>
            <returns>An instance of <see cref="T:System.Drawing.Bitmap"/></returns>
        </member>
        <member name="M:Jam.Shell.ShellThumbnailExtractor.GetThumbnail(System.String,Jam.Shell.GetThumbnailArgs)">
            <summary>Gets a thumbnail for the passed path.</summary>
            <exception cref="T:System.ArgumentException">Thrown when one or more arguments have unsupported or
            illegal values.</exception>
            <param name="pPath">Full pathname of the file.</param>
            <param name="pArgs">The arguments.</param>
            <returns>The thumbnail.</returns>
        </member>
        <member name="M:Jam.Shell.ShellThumbnailExtractor.GetThumbnail(Jam.Shell.ItemIdList,Jam.Shell.GetThumbnailArgs)">
            <summary>Gets a thumbnail for the passed ItemIdList.</summary>
            <exception cref="T:System.ArgumentException">Thrown when one or more arguments have unsupported or
            illegal values.</exception>
            <param name="pItemIdList">The absolute ItemIdList identifying the shell object.</param>
            <param name="pArgs">Arguments that control thumbnail creation.</param>
            <returns>The thumbnail.</returns>
        </member>
        <member name="M:Jam.Shell.ShellThumbnailExtractor.GetThumbnailAsHBitmap(Jam.Shell.ItemIdList,Jam.Shell.GetThumbnailArgs)">
            <summary>Gets thumbnail from the system and returns the HBitmap.</summary>
            <exception cref="T:System.ArgumentException">Thrown when one or more arguments have unsupported or
            illegal values.</exception>
            <param name="pItemIdList">The absolute ItemIdList identifying the shell object.</param>
            <param name="pArgs">Arguments that control thumbnail creation.</param>
            <returns>The thumbnail as HBitmap.</returns>
        </member>
        <member name="T:Jam.Shell.IThumbnailExtractor">
            <summary>Interface for supporting different ways of extracting thumbnails.</summary>
        </member>
        <member name="M:Jam.Shell.IThumbnailExtractor.GetHBitmap(Jam.Shell.ItemIdList,System.Drawing.Size,System.Boolean)">
            <summary>Gets HBitmap for the passed ItemIdList. It must be released using ShellApi.NativeMethods.DeleteObject when the handle is not needed anymore to avoid GDI leak.</summary>
            <param name="pItemIdList">List of item identifiers.</param>
            <param name="pSize">The size.</param>
            <param name="pIconInstead">True to icon instead.</param>
            <returns>The h bitmap.</returns>
        </member>
        <member name="T:Jam.Shell.ImageFactoryThumbnailExtractorImpl">
            <summary>An implementation using the IShellItemImageFactory interface of the IShellItem.</summary>
        </member>
        <member name="M:Jam.Shell.ImageFactoryThumbnailExtractorImpl.GetHBitmap(Jam.Shell.ItemIdList,System.Drawing.Size,System.Boolean)">
            <summary>
            Gets HBitmap for the passed ItemIdList. It must be released using
            ShellApi.NativeMethods.DeleteObject when the handle is not needed anymore to avoid GDI leak.
            </summary>
            <exception cref="T:System.ComponentModel.Win32Exception">Thrown when a Window 32 error condition occurs.</exception>
            <param name="pItemIdList">List of item identifiers.</param>
            <param name="pSize">The size.</param>
            <param name="pIconInstead">True to icon instead.</param>
            <returns>The h bitmap.</returns>
        </member>
        <member name="T:Jam.Shell.ExtractImageThumbnailExctractorImpl">
            <summary>An implementation using the IExtractImage interface returned by ShellFolder.GetUIObject</summary>
        </member>
        <member name="T:Jam.Shell.ViewSortDirection">
            <summary>
            View sort direction
            </summary>
        </member>
        <member name="F:Jam.Shell.ViewSortDirection.Ascending">
            <summary>
            Ascending sort direction
            </summary>
        </member>
        <member name="F:Jam.Shell.ViewSortDirection.Descending">
            <summary>
            Descending sort direction
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellViewColumn">
            <summary>
            Item inside a <see cref="T:Jam.Shell.ShellViewColumns"/> collection.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellViewColumn.AutoSizeWidth">
            <summary>
            Resizes the <see cref="P:Jam.Shell.ShellViewColumn.Width"/> to fit the content width.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellViewColumn.DefaultSizeWidth">
            <summary>
            Resets the <see cref="P:Jam.Shell.ShellViewColumn.Width"/> to it's default value.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellViewColumn.Caption">
            <summary>
            Gets or sets the caption of the column.
            </summary>
            <value>
            The caption.
            </value>
        </member>
        <member name="P:Jam.Shell.ShellViewColumn.Width">
            <summary>
            Gets or sets the width in pixels of the column.
            </summary>
            <value>
            The width.
            </value>
        </member>
        <member name="P:Jam.Shell.ShellViewColumn.ShellColumnId">
            <summary>
            Gets the key of the column.
            </summary>
            <value>
            A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.
            </value>
        </member>
        <member name="M:Jam.Shell.ShellViewColumn.#ctor(Jam.Shell.ShellViewColumns,Jam.Shell.SHCOLUMNID,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellViewColumn"/> class.
            </summary>
            <param name="pParent">The p parent.</param>
            <param name="pShellColumnId">The p key.</param>
            <param name="pCaption">The p caption.</param>
        </member>
        <member name="M:Jam.Shell.ShellViewColumn.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumn.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Jam.Shell.ShellViewColumns">
            <summary>
            Class representing a collection of <see cref="T:Jam.Shell.ShellViewColumn"/>s. It serves to control the visible columns in supported controls.
            Not supported on Windows XP.
            </summary>
            <example> 
            The following examples control the columns displayed in the ExplorerBrowser. 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_AddColumns" lang="C#" /> 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_SetColumns" lang="C#" /> 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_ShowColumns" lang="C#" /> 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_RemoveColumns" lang="C#" /> 
            </example>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.LoadSHColumnIDs(System.Boolean)">
            <summary>
            Gets the columns that are shown/available in the current view in their order of appearance.
            </summary>
            <param name="pAll">if set to <c>true</c> all available columns are returned; if set to false only the columns currently displayed are returned.</param>
            <returns>An array of <see cref="T:Jam.Shell.SHCOLUMNID"/>s that are available or displayed in the current view.</returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.GetColumnWidth(Jam.Shell.SHCOLUMNID)">
            <summary>
            Returns the width of the column identified by the passed id.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>The width of the column or 0 if it's not displayed.</returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.GetColumnName(Jam.Shell.SHCOLUMNID)">
            <summary>
            Gets the caption of the column with the passed column key.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>The caption of the column.</returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.SetColumnWidth(Jam.Shell.SHCOLUMNID,System.Int32)">
            <summary>
            Sets the width of the column identified by the passed id.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <param name="pNewWidth">The width in pixel.</param>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.SetColumnName(Jam.Shell.SHCOLUMNID,System.String)">
            <summary>
            Changes the name of the column identified by the passed id.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <param name="pNewName">New name of the column.</param>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Show(Jam.Shell.SHCOLUMNID,System.Int32)">
            <summary>
            Displays the column identified by the passed <see cref="T:Jam.Shell.SHCOLUMNID"/> at the position passed. If the column is already being displayed it will be moved to the passed position.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <param name="pPos">The position (starting at 0) to add the column. If the value is -1 column position is detemined automatically.</param>
            <returns>True if the column was added, inserted or moved, false if it's not available or could not be inserted.</returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Show(Jam.Shell.SHCOLUMNID)">
            <summary>
            Adds the column at its default position.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>True if the column was added, inserted or moved, false if it's not available or could not be inserted.</returns>
            <example> 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_ShowColumns" lang="C#" /> 
            </example>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Hide(Jam.Shell.SHCOLUMNID)">
            <summary>
            Removes the given column from the current view.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>True, if the column was hidden, false if wasn't available or removing failed.</returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.AutoSize">
            <summary>
              Resizes all columns to the auto-size width.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.DefaultSize">
            <summary>
              Resizes all columns to the default-size width.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Sort(Jam.Shell.SHCOLUMNID,Jam.Shell.ViewSortDirection)">
            <summary>
              Sorts the items inside the current view by the specified column.
            </summary>
            <param name="pShellColumnId">
              A <c>SHCOLUMNID</c> that serves as identifier of the column.
            </param>
            <param name="pSortDirection">
              The sort direction.
            </param>
            <returns>
              <c>True</c>, if the view was sorted successfully by the column or <c>False</c> otherwise.
            </returns>
        </member>
        <member name="P:Jam.Shell.ShellViewColumns.SortBy">
            <summary>
              Gets or sets the column the view is sorted by.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellViewColumns.SortDirection">
            <summary>
              Gets or sets the sort direction.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.SetColumns(System.Collections.Generic.IList{Jam.Shell.SHCOLUMNID})">
            <summary>
            Replaces the currently shown columns by the columns passed.
            </summary>
            <param name="pShellColumnIds">A list of <see cref="T:Jam.Shell.SHCOLUMNID"/>s that serve as identifier of the columns.</param>
            <returns>true if the operation succeeded, false otherwise</returns>
            <remarks>If more columns should be added at once, this method is far more performant than adding single columns with <see cref="M:Jam.Shell.ShellViewColumns.Add(Jam.Shell.SHCOLUMNID)"/>, <see cref="M:Jam.Shell.ShellViewColumns.Show(Jam.Shell.SHCOLUMNID)"/> or <see cref="M:Jam.Shell.ShellViewColumns.Insert(System.Int32,Jam.Shell.SHCOLUMNID)"/></remarks>
            <example> 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_SetColumns" lang="C#" /> 
            </example>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.GetSHColumnIds">
            <summary>
            Returns the columns the keys of the columns in collection.
            </summary>
            <returns>A list of SHCOLUMNIDs</returns>
        </member>
        <member name="E:Jam.Shell.ShellViewColumns.CollectionChanged">
            <summary>
            Occurs when collection has changed.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.IndexOf(Jam.Shell.ShellViewColumn)">
            <summary>
            Determines the index of a specific item in the <see cref="T:System.Collections.Generic.IList`1" />.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.IList`1" />.</param>
            <returns>
            The index of <paramref name="item" /> if found in the list; otherwise, -1.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.IndexOf(Jam.Shell.SHCOLUMNID)">
            <summary>
            Returns the index of the column with the passed <see cref="T:Jam.Shell.SHCOLUMNID"/>.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>The index of <paramref name="pShellColumnId" /> if found in the list; otherwise, -1. </returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Insert(System.Int32,Jam.Shell.ShellViewColumn)">
            <summary>
            Inserts an item to the <see cref="T:System.Collections.Generic.IList`1" /> at the specified index.
            </summary>
            <param name="index">The zero-based index at which <paramref name="item" /> should be inserted.</param>
            <param name="item">The object to insert into the <see cref="T:System.Collections.Generic.IList`1" />.</param>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Insert(System.Int32,Jam.Shell.SHCOLUMNID)">
            <summary>
            Inserts a new column representing the passed <see cref="T:Jam.Shell.SHCOLUMNID"/> at the passed index.
            </summary>
            <param name="index">The index.</param>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.RemoveAt(System.Int32)">
            <summary>
            Removes the <see cref="T:System.Collections.Generic.IList`1" /> item at the specified index.
            </summary>
            <param name="index">The zero-based index of the item to remove.</param>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Remove(Jam.Shell.SHCOLUMNID)">
            <summary>
            Removes the specified column.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>True, if the column was hidden, false if wasn't available or removing failed.</returns>
        </member>
        <member name="P:Jam.Shell.ShellViewColumns.Item(System.Int32)">
            <summary>
            Gets or sets the element at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The ShellViewColumn at the specified index.</returns>
            <exception cref="T:System.NotSupportedException">NotSupportedException</exception>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Add(Jam.Shell.ShellViewColumn)">
            <summary>
            Adds a column to the collection.
            </summary>
            <param name="pColumn">The column to add.</param>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Add(Jam.Shell.SHCOLUMNID)">
            <summary>
            Adds the specified column at the last position.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <example> 
            The following examples control the columns displayed in the ExplorerBrowser. 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_AddColumns" lang="C#" /> 
            </example>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Clear">
            <summary>
            Removes all items from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <example> 
            The following examples control the columns displayed in the ExplorerBrowser. 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_AddColumns" lang="C#" /> 
            </example>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Contains(Jam.Shell.ShellViewColumn)">
            <summary>
            Determines whether the <see cref="T:System.Collections.Generic.ICollection`1" /> contains a specific value.
            </summary>
            <param name="item">The object to locate in the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> is found in the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Contains(Jam.Shell.SHCOLUMNID)">
            <summary>
            Determines whether the passed column is contained in the collection.
            </summary>
            <param name="pShellColumnId">A <see cref="T:Jam.Shell.SHCOLUMNID"/> that serves as identifier of the column.</param>
            <returns>true, if the column is found the collection, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.CopyTo(Jam.Shell.ShellViewColumn[],System.Int32)">
            <summary>
            Copies the entire list to the array passed, starting at the passed index of the target array.
            </summary>
            <param name="array">The array to copy the collection to.</param>
            <param name="arrayIndex">The start index in the array.</param>
        </member>
        <member name="P:Jam.Shell.ShellViewColumns.Count">
            <summary>
            Gets the number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <returns>The number of elements contained in the <see cref="T:System.Collections.Generic.ICollection`1" />.</returns>
        </member>
        <member name="P:Jam.Shell.ShellViewColumns.IsReadOnly">
            <summary>
            Gets a value indicating whether the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only.
            </summary>
            <returns>true if the <see cref="T:System.Collections.Generic.ICollection`1" /> is read-only; otherwise, false.</returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.Remove(Jam.Shell.ShellViewColumn)">
            <summary>
            Removes the first occurrence of a specific object from the <see cref="T:System.Collections.Generic.ICollection`1" />.
            </summary>
            <param name="item">The object to remove from the <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>
            true if <paramref name="item" /> was successfully removed from the <see cref="T:System.Collections.Generic.ICollection`1" />; otherwise, false. This method also returns false if <paramref name="item" /> is not found in the original <see cref="T:System.Collections.Generic.ICollection`1" />.
            </returns>
            <example> 
            <code source ="CodeExamples.cs" region = "ShellViewColumns_RemoveColumns" lang="C#" /> 
            </example>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>
            A <see cref="T:System.Collections.Generic.IEnumerator`1" /> that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellViewColumns.System#Collections#IEnumerable#GetEnumerator">
            <summary>
            Returns an enumerator that iterates through a collection.
            </summary>
            <returns>
            An <see cref="T:System.Collections.IEnumerator" /> object that can be used to iterate through the collection.
            </returns>
        </member>
        <member name="T:Jam.Shell.NotificationEvents">
            <summary>
            The types of notification events that may occur
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.AssociationChange">
            <summary>
            A file type association has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.AttributesChange">
            <summary>
            The attributes of an item or folder have changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.FileChange">
            <summary>
            An existing nonfolder item has changed, but the item still exists and has not been renamed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.FileCreate">
            <summary>
            A nonfolder item has been created.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.FileDelete">
            <summary>
            A nonfolder item has been deleted.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.FileRename">
            <summary>
            The name of a nonfolder item has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.DriveAdd">
            <summary>
            A drive has been added.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.DriveRemove">
            <summary>
            A drive has been removed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.ShellDriveAdd">
            <summary>
            A drive has been added and the Shell should create a new window for the drive.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.DriveSpaceChange">
            <summary>
            The amount of free space on a drive has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.MediaInsert">
            <summary>
            Storage media has been inserted into a drive.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.MediaRemove">
            <summary>
            Storage media has been removed from a drive.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.FolderCreate">
            <summary>
            A folder has been created.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.FolderDelete">
            <summary>
            A folder has been removed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.FolderRename">
            <summary>
            The name of a folder has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.FolderUpdate">
            <summary>
            An existing item (a folder or a nonfolder) has changed, but the item still exists and has not been renamed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.NetShare">
            <summary>
            A folder on the local computer is being shared via the network.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.NetUnshare">
            <summary>
            A folder on the local computer is no longer being shared via the network.
            </summary>
            <remarks>It`s deprecated, use NetShare instead.</remarks>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.ServerDisconnect">
            <summary>
            The computer has disconnected from a server.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.ImageListChange">
            <summary>
            An image in the system image list has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.Unknown">
            <summary>
            All events have occurred.
            </summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.AsyncResult">
            <summary>An enum constant representing the internally used asynchronous result option.</summary>
        </member>
        <member name="F:Jam.Shell.NotificationEvents.Populated">
            <summary>An enum constant representing the internally used populated option.</summary>
        </member>
        <member name="T:Jam.Shell.IShellChangeNotifier">
            <summary>Interface for shell change notifier.</summary>
        </member>
        <member name="E:Jam.Shell.IShellChangeNotifier.ChangePIDL">
            <summary>Event queue for all listeners interested in ChangePIDL events.</summary>
        </member>
        <member name="E:Jam.Shell.IShellChangeNotifier.Change">
            <summary>Event queue for all listeners interested in Change events.</summary>
        </member>
        <member name="M:Jam.Shell.IShellChangeNotifier.OnChange(Jam.Shell.NotificationEvents,System.String,System.String)">
            <summary>Executes the change action.</summary>
            <param name="pEvent">The event.</param>
            <param name="pPath1">The first p path.</param>
            <param name="pPath2">The second p path.</param>
        </member>
        <member name="M:Jam.Shell.IShellChangeNotifier.OnChangePIDL(Jam.Shell.NotificationEvents,Jam.Shell.ItemIdList,Jam.Shell.ItemIdList)">
            <summary>Executes the change PIDL action.</summary>
            <param name="pEvent">The event.</param>
            <param name="pItemIdList1">The first p item identifier list.</param>
            <param name="pItemIdList2">The second p item identifier list.</param>
        </member>
        <member name="P:Jam.Shell.Win32ShellChangeNotifier.AllDrivesWatched">
            <summary>
            Returns true if the instance was started with no explicit directories or pidl to watch. In this case all drives are watched recursively for changes.
            </summary>
            <value><c>true</c> if all drives are watched for changes recursively otherwise, <c>false</c>.</value>
        </member>
        <member name="M:Jam.Shell.Win32ShellChangeNotifier.#ctor(System.IntPtr,Jam.Shell.IShellChangeNotifier)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.Win32ShellChangeNotifier"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.Win32ShellChangeNotifier.Dispose">
            <summary>
            Clean up.
            </summary>
        </member>
        <member name="M:Jam.Shell.Win32ShellChangeNotifier.DirectoriesChanged(System.Object,System.EventArgs)">
            <summary>
            This method is called when the paths in the Directories property have changed
            </summary>
        </member>
        <member name="M:Jam.Shell.Win32ShellChangeNotifier.ExcludeMyComputer">
            <summary>
            Excludes the empty string from the observed directories
            </summary>
        </member>
        <member name="M:Jam.Shell.Win32ShellChangeNotifier.ShellNotifyRegister(Jam.Shell.ItemIdList,System.Boolean)">
            <summary>
            Registers the given ItemIdList in order to receive change notifications for it.
            </summary>
            <param name="pIdList">ItemIdList of the folder to receive chnage notifications for</param>
            <param name="pWatchSubTree">true, if notifications for subfolders are desired as well</param>
            <returns>Handle, that can be used to call ShellNotifiyUnregister() later</returns>
        </member>
        <member name="M:Jam.Shell.Win32ShellChangeNotifier.ShellNotifyUnregister(System.Int32)">
            <summary>
            Unregisters the saved handle to receive no more change notifications.
            </summary>
            <param name="pNotifyHandle">The NotifyHandle that should be unregistered.</param>
        </member>
        <member name="M:Jam.Shell.Win32ShellChangeNotifier.Start">
            <summary>
            Starts monitoring the paths in the Directories property
            </summary>
        </member>
        <member name="M:Jam.Shell.Win32ShellChangeNotifier.Stop">
            <summary>
            Stops monitoring the paths in the Directories property
            </summary>
        </member>
        <member name="M:Jam.Shell.Win32ShellChangeNotifier.Clear">
            <summary>
            Removes all directories from the <see cref="P:Jam.Shell.Win32ShellChangeNotifier.Directories"/> property and so watches the entire file system again.
            </summary>
        </member>
        <member name="M:Jam.Shell.Win32ShellChangeNotifier.Restart">
            <summary>
            Restarts the change notifier if it is already started
            </summary>
        </member>
        <member name="M:Jam.Shell.Win32ShellChangeNotifier.SendChangeNotify(Jam.Shell.NotificationEvents,System.String)">
            <summary>
            Sends a shell change notification to the system that informs other processes about a achange.
            </summary>
            <param name="p_Event">The event shat should be send.</param>
            <param name="p_Path">The path that is affected by the change.</param>
        </member>
        <member name="M:Jam.Shell.Win32ShellChangeNotifier.SendChangeNotify(Jam.Shell.NotificationEvents,System.String,System.String)">
            <summary>
            Sends a shell change notification to the system that informs other processes about a achange.
            </summary>
            <param name="p_Event">The event shat should be send.</param>
            <param name="p_Path1">The first path that is affected by the change.</param>
            <param name="p_Path2">The second path that is affected by the change.</param>
        </member>
        <member name="P:Jam.Shell.Win32ShellChangeNotifier.PIDL">
            <summary>
            Allows th set a Shell ItemIdList that should be monitored. Intended for internal use only.
            If this property is set, the default is "My Computer" as an empty string, is then not monitored.
            </summary>
        </member>
        <member name="P:Jam.Shell.Win32ShellChangeNotifier.Enabled">
            <summary>
            Set to true to enable listening to change notifications.
            </summary>
        </member>
        <member name="P:Jam.Shell.Win32ShellChangeNotifier.Recursive">
            <summary>
            Set to true, if change notifications for subfolders are desired as well.
            </summary>
        </member>
        <member name="P:Jam.Shell.Win32ShellChangeNotifier.EventFilter">
            <summary>
            Allows to define which shell change events should be reported.
            </summary>
        </member>
        <member name="P:Jam.Shell.Win32ShellChangeNotifier.Directories">
            <summary>
            The directories to receive change notifications for. Leave empty to receive change notifications for the whole file system.
            </summary>
        </member>
        <member name="T:Jam.Shell.ChangeNotificationEventArgs">
            <summary>
            The ChangeNotificationEventArgs contains data for the ShellChangeNotifier.Change event.
            </summary>
        </member>
        <member name="M:Jam.Shell.ChangeNotificationEventArgs.#ctor(Jam.Shell.NotificationEvents,System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ChangeNotificationEventArgs"/> class.
            </summary>
            <param name="aEvent">Contains the type of the event.</param>
            <param name="aPath1">The variable path1 contains the path of the file or folder for that the event occurred, except for event types that do not refer to a certain file system type: AssociationChange, ImageListChange.</param>
            <param name="aPath2">The variable path2 contains the destination path for the events: FolderRename, FileRename. For all other events, path2 should be ignored.</param>
        </member>
        <member name="P:Jam.Shell.ChangeNotificationEventArgs.Event">
            <summary>
            Contains the type of the event.
            </summary>
        </member>
        <member name="P:Jam.Shell.ChangeNotificationEventArgs.Path1">
            <summary>
            The variable path1 contains the path of the file or folder for that the event occurred, except for event types that do not refer to a certain file system type: AssociationChange, ImageListChange.
            </summary>
        </member>
        <member name="P:Jam.Shell.ChangeNotificationEventArgs.Path2">
            <summary>
            The variable path2 contains the destination path for the events: FolderRename, FileRename. For all other events, path2 should be ignored.
            </summary>
        </member>
        <member name="T:Jam.Shell.ChangeNotificationPidlEventArgs">
            <summary>
            The ChangeNotificationEventArgs contains data for the ShellChangeNotifier.ChangePIDL event.
            </summary>
        </member>
        <member name="P:Jam.Shell.ChangeNotificationPidlEventArgs.Event">
            <summary>
            Contains the type of the event.
            </summary>
        </member>
        <member name="P:Jam.Shell.ChangeNotificationPidlEventArgs.Pidl1">
            <summary>
            The variable path1 contains the path of the file or folder for that the event occurred, except for event types that do not refer to a certain file system type: AssociationChange, ImageListChange.
            </summary>
        </member>
        <member name="P:Jam.Shell.ChangeNotificationPidlEventArgs.Pidl2">
            <summary>
            The variable path2 contains the destination path for the events: FolderRename, FileRename. For all other events, path2 should be ignored.
            </summary>
        </member>
        <member name="T:Jam.Shell.IShellCommandInvokable">
            <summary>Interface for components supporting to invoke shell commands.</summary>
        </member>
        <member name="M:Jam.Shell.IShellCommandInvokable.InvokeCommandOnSelected(Jam.Shell.ShellCommand)">
            <summary>
            Executes the given command on the selected items. Not implemented in base-class.
            </summary>
            <param name="pCommand">The command. </param>
            <returns>True if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:Jam.Shell.IShellCommandInvokable.OnBeforeInvokeCommand(Jam.Shell.BeforeShellCommandEventArgs)">
            <summary>Is called before the command is called.</summary>
            <param name="e">EventArgs holding the verb that is to be executed and the affected elements. If <see cref="P:System.ComponentModel.CancelEventArgs.Cancel"/> is set to true, the command is not further executed.</param>
        </member>
        <member name="M:Jam.Shell.IShellCommandInvokable.OnAfterInvokeCommand(Jam.Shell.ShellCommandEventArgs)">
            <summary>Is called after the command has been called.</summary>
            <param name="e">Contains the command and the items the command was applied upon.</param>
        </member>
        <member name="T:Jam.Shell.IContextMenuMessageHandler">
            <summary>Interface for handling context menu messages.</summary>
        </member>
        <member name="T:Jam.Shell.ShellCommand">
            <summary>
            This class provides identifies shell context menu commands that are to be executed or that the user has chosen.
            A command is represented by a string or a <see cref="T:Jam.Shell.ShellContextMenuCommand"/> value - they are assignment compatible.
            A ShellCommand also has a property "Caption" that stores the localized caption of a menu item the user has chosen.
            It is however not possible to create a command from a caption.
            </summary>
            <seealso cref="M:Jam.Shell.Win32ShellContextMenuProvider.ExecuteCommand(Jam.Shell.ShellCommand)"/>
            <seealso cref="E:Jam.Shell.Win32ShellContextMenuProvider.BeforeCommandExecute"/>
        </member>
        <member name="F:Jam.Shell.ShellCommand.EmptyCommand">
            <summary>An empty command.</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Default">
            <summary>This is a constant string that represents the default shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Open">
            <summary>This is a constant string that represents the 'open' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Copy">
            <summary>This is a constant string that represents the 'copy' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Cut">
            <summary>This is a constant string that represents the 'cut' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Delete">
            <summary>This is a constant string that represents the 'delete' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Paste">
            <summary>This is a constant string that represents the 'paste' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Rename">
            <summary>This is a constant string that represents the 'rename' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.RunAs">
            <summary>This is a constant string that represents the 'runas' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Explore">
            <summary>This is a constant string that represents the 'explore' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Undelete">
            <summary>This is a constant string that represents the 'undelete' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Properties">
            <summary>This is a constant string that represents the 'properties' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.EmptyBitBucket">
            <summary>This is a constant string that represents the 'empty' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.Link">
            <summary>This is a constant string that represents the 'Link' shell command.</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.PinToHome">
            <summary>This is a constant string that represents the 'Pin to home' shell command in Windows 10 and later.</summary>
        </member>
        <member name="F:Jam.Shell.ShellCommand.UnpinFromHome">
            <summary>This is a constant string that represents the 'Unpin from home' shell command in Windows 10 and later.</summary>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsEmpty(Jam.Shell.ShellCommand)">
            <summary>Checks if the given command is the default shell command.</summary>
            <param name="command">The command to check.</param>
            <returns><c>true</c> if the given command is the default shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsDefault(Jam.Shell.ShellCommand)">
            <summary>Checks if the given command is the default shell command.</summary>
            <param name="command">The command to check.</param>
            <returns><c>true</c> if the given command is the default shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsOpen(Jam.Shell.ShellCommand)">
            <summary>Checks if the given command is the 'open' shell command.</summary>
            <param name="command">The command to check.</param>
            <returns><c>true</c> if the given command is the open shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsCopy(Jam.Shell.ShellCommand)">
            <summary>Checks if the given command is the 'copy' shell command.</summary>
            <param name="command">The command to check.</param>
            <returns><c>true</c> if the given command is the copy shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsCut(Jam.Shell.ShellCommand)">
            <summary>Checks if the given command is the 'cut' shell command.</summary>
            <param name="command">The command to check.</param>
            <returns><c>true</c> if the given command is the 'cut' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsDelete(Jam.Shell.ShellCommand)">
            <summary>Checks if the given command is the 'delete' shell command.</summary>
            <param name="command">The command to check.</param>
            <returns><c>true</c> if the given command is the 'delete' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsUndelete(Jam.Shell.ShellCommand)">
            <summary>Checks if the given command is the 'undelete' shell command.</summary>
            <param name="command">The command to check.</param>
            <returns><c>true</c> if the given command is the 'undelete' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsPaste(Jam.Shell.ShellCommand)">
            <summary>Checks if the given command is the 'paste' shell command.</summary>
            <param name="command">The command to check.</param>
            <returns><c>true</c> if the given command is the 'paste' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsRename(Jam.Shell.ShellCommand)">
            <summary>Checks if the given command is the 'rename' shell command.</summary>
            <param name="command">The command to check.</param>
            <returns><c>true</c> if the given command is the 'rename' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsRunAs(Jam.Shell.ShellCommand)">
            <summary>Checks if the given command is the 'runas' shell command.</summary>
            <param name="command">The command to check.</param>
            <returns><c>true</c> if the given command is the 'runas' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsExplore(Jam.Shell.ShellCommand)">
            <summary>Checks if the given command is the 'explore' shell command.</summary>
            <param name="command">The command to check.</param>
            <returns><c>true</c> if the given command is the 'explore' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsProperties(Jam.Shell.ShellCommand)">
            <summary>Checks if the given command is the 'properties' shell command.</summary>
            <param name="command">The command to check.</param>
            <returns><c>true</c> if the given command is the 'properties' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsEmptyBitBucket(Jam.Shell.ShellCommand)">
            <summary>Checks if the given command is the 'empty' shell command.</summary>
            <param name="command">The command to check.</param>
            <returns><c>true</c> if the given command is the 'empty' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsLink(Jam.Shell.ShellCommand)">
            <summary>Checks if the given command is the 'link' shell command.</summary>
            <param name="command">The command to check.</param>
            <returns><c>true</c> if the given command is the 'Link' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsPinToHome(Jam.Shell.ShellCommand)">
            <summary>Checks if the given command is the 'PinToHome' shell command.</summary>
            <param name="command">The command to check.</param>
            <returns><c>true</c> if the given command is the 'PinToHome' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.IsUnpinFromHome(Jam.Shell.ShellCommand)">
            <summary>Checks if the given command is the 'UnpinFromHome' shell command.</summary>
            <param name="command">The command to check.</param>
            <returns><c>true</c> if the given command is the 'UnpinFromHome' shell command;<c>false</c> otherwise</returns>
        </member>
        <member name="P:Jam.Shell.ShellCommand.Verb">
            <summary>Gets the verb.</summary>
            <value>The verb.</value>
        </member>
        <member name="P:Jam.Shell.ShellCommand.Command">
            <summary>Gets the command.</summary>
            <value>The command.</value>
        </member>
        <member name="P:Jam.Shell.ShellCommand.Caption">
            <summary>Gets the caption of the menu item.</summary>
            <value>The caption.</value>
        </member>
        <member name="M:Jam.Shell.ShellCommand.#ctor(System.String)">
            <summary>Constructor that creates an instance from a verb.</summary>
            <exception cref="T:System.ArgumentNullException">Thrown when no or an empty verb is passed.</exception>
            <param name="pVerb">The verb.</param>
        </member>
        <member name="M:Jam.Shell.ShellCommand.#ctor(Jam.Shell.ShellContextMenuCommand)">
            <summary>Constructor that creates an instance from a verb.</summary>
            <exception cref="T:System.ArgumentException">Thrown when an invalid <see cref="T:Jam.Shell.ShellContextMenuCommand"/> is passed.</exception>
            <param name="pCommand">The command.</param>
        </member>
        <member name="M:Jam.Shell.ShellCommand.GetHashCode">
            <summary>Serves as a hash function for a particular type.</summary>
            <returns>A hash code for the current <see cref="T:System.Object" />.</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object" /> is equal to the current
            <see cref="T:System.Object" />.
            </summary>
            <param name="obj">The object to compare with the current object.</param>
            <returns>
            true if the specified <see cref="T:System.Object" /> is a <see cref="T:Jam.Shell.ShellCommand"/> holding the same verb; otherwise, false.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.op_Equality(Jam.Shell.ShellCommand,Jam.Shell.ShellCommand)">
            <summary>Equality operator.</summary>
            <param name="pCommand1">The first command.</param>
            <param name="pCommand2">The second command.</param>
            <returns>True if both <see cref="T:Jam.Shell.ShellCommand"/> instances are null or if they represent the same Command; false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.op_Inequality(Jam.Shell.ShellCommand,Jam.Shell.ShellCommand)">
            <summary>Inequality operator.</summary>
            <param name="pCommand1">The first command.</param>
            <param name="pCommand2">The second command.</param>
            <returns>True if the commands are not equal./></returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.op_Implicit(System.String)~Jam.Shell.ShellCommand">
            <summary>Implicit cast that converts the given string representing a verb to a ShellCommand.</summary>
            <param name="pVerb">The verb.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.op_Implicit(Jam.Shell.ShellCommand)~System.String">
            <summary>Implicit cast that converts the given ShellCommand to a string.</summary>
            <param name="pCommand">The command.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.op_Implicit(Jam.Shell.ShellCommand)~Jam.Shell.ShellContextMenuCommand">
            <summary>
            Implicit cast that converts the given ShellCommand to a ShellContextMenuCommand.
            </summary>
            <param name="pShellCommand">The shell command.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="M:Jam.Shell.ShellCommand.op_Implicit(Jam.Shell.ShellContextMenuCommand)~Jam.Shell.ShellCommand">
            <summary>
            Implicit cast that converts the given ShellContextMenuCommand to a ShellCommand.
            </summary>
            <param name="pShellContextMenuCommand">The shell context menu command.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="T:Jam.Shell.ShellContextMenuCommand">
            <summary>Values that represent shell context menu commands.</summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuCommand.Default">
            <summary>An enum constant representing the default option.</summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuCommand.Open">
            <summary>This is a constant string that represents the 'open' shell command.</summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuCommand.Copy">
            <summary>This is a constant string that represents the 'copy' shell command.</summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuCommand.Cut">
            <summary>This is a constant string that represents the 'cut' shell command.</summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuCommand.Delete">
            <summary>This is a constant string that represents the 'delete' shell command</summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuCommand.Paste">
            <summary>This is a constant string that represents the 'paste' shell command.</summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuCommand.Rename">
            <summary>This is a constant string that represents the 'rename' shell command.</summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuCommand.RunAs">
            <summary>This is a constant string that represents the 'runas' shell command.</summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuCommand.Explore">
            <summary>This is a constant string that represents the 'explore' shell command.</summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuCommand.Undelete">
            <summary>This is a constant string that represents the 'undelete' shell command.</summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuCommand.Properties">
            <summary>This is a constant string that represents the 'properties' shell command.</summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuCommand.EmptyBitBucket">
            <summary>This is a constant string that represents the 'empty' shell command for Bitbucket.</summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuCommand.Link">
            <summary>This is a constant string that represents the 'Link' shell command.</summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuCommand.PinToHome">
            <summary>This is a constant string that represents the 'Pin to home' shell command in Windows 10 and later.</summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuCommand.UnpinFromHome">
            <summary>This is a constant string that represents the 'Unpin from home' shell command in Windows 10 and later.</summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuCommand.Custom">
            <summary>This is a constant string that represents a custom command. It is used internally.</summary>
        </member>
        <member name="T:Jam.Shell.ShellContextMenuOptions">
            <summary>A bit-field of flags for specifying context menu options.</summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuOptions.Extended">
            <summary>Show the extended context menu like if the SHIFT key is pressed.</summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuOptions.Rename">
            <summary>Include the rename context menu item. 
            To work correctly also <see cref="E:Jam.Shell.Win32ShellContextMenuProvider.RenameItemSelected"/> must be assigned to handle the renaming. 
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuOptions.DefaultOnly">
            <summary>Only show a basic default menu. Other flags are ignored, if this option is set.</summary>
        </member>
        <member name="F:Jam.Shell.ShellContextMenuOptions.ReadOnly">
            <summary>If set, some shell operations are suppressed (delete, cut, paste).</summary>
        </member>
        <member name="T:Jam.Shell.Win32ShellContextMenuProvider">
            <summary>Class that allows to show and execute shell context menus.</summary>
        </member>
        <member name="E:Jam.Shell.Win32ShellContextMenuProvider.BeforeCommandExecute">
            <summary>
            This event is fired before a command that was selected from the context menu or passed to 
            <see cref="M:Jam.Shell.Win32ShellContextMenuProvider.ExecuteCommand(Jam.Shell.ShellContextMenuCommand)"/> is processed.
            </summary>
        </member>
        <member name="E:Jam.Shell.Win32ShellContextMenuProvider.AfterCommandExecute">
            <summary>
            This event is fired after a command that was selected from the context menu or passed to 
            <see cref="M:Jam.Shell.Win32ShellContextMenuProvider.ExecuteCommand(Jam.Shell.ShellContextMenuCommand)"/> is processed.
            </summary>
        </member>
        <member name="E:Jam.Shell.Win32ShellContextMenuProvider.RenameItemSelected">
            <summary>
            This event is fired when the context menu option "Rename" is selected from the context menu or passed to <see cref="M:Jam.Shell.Win32ShellContextMenuProvider.ExecuteCommand(Jam.Shell.ShellContextMenuCommand)"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.Win32ShellContextMenuProvider.ShellMenuStartsAt">
            <summary>Gets or sets a position of the first item of the shell menu.</summary>
            <value>The index the shell menu starts at.</value>
            <remarks>Needed if the shell context menu is merged with an existing menu.</remarks>
        </member>
        <member name="P:Jam.Shell.Win32ShellContextMenuProvider.SourceItems">
            <summary>Gets or sets source items.</summary>
            <value>The source items.</value>
        </member>
        <member name="P:Jam.Shell.Win32ShellContextMenuProvider.AsyncOperation">
            <summary>Gets or sets a value indicating whether context menu operations are executed asynchronously.</summary>
            <value>True if asynchronous operations should be executed asynchronously, false if not.</value>
        </member>
        <member name="M:Jam.Shell.Win32ShellContextMenuProvider.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Jam.Shell.Win32ShellContextMenuProvider.#ctor(Jam.Shell.JamItemIdListCollection)">
            <summary>
            Creates a context menu for the passed <see cref="T:Jam.Shell.JamItemIdListCollection"/>.
            </summary>
            <param name="pSourceItems">A collection of ItemIdLists the context menu is applied upon.</param>
        </member>
        <member name="M:Jam.Shell.Win32ShellContextMenuProvider.#ctor(Jam.Shell.ItemIdList)">
            <summary>Creates a context menu for the passed <see cref="T:Jam.Shell.ItemIdList"/>.</summary>
            <param name="pItemIdList">The <see cref="T:Jam.Shell.ItemIdList"/> the context menu is applied upon.</param>
        </member>
        <member name="M:Jam.Shell.Win32ShellContextMenuProvider.ExecuteContextMenuCommand(System.String,System.Int32,Jam.Shell.IContextMenu)">
            <summary>Executes the context menu command operation.</summary>
            <exception cref="T:System.ArgumentException">Thrown when one or more arguments have unsupported or
            illegal values.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown when one or more required arguments are null.</exception>
            <exception cref="T:System.ComponentModel.Win32Exception">Thrown when a Window 32 error condition occurs.</exception>
            <param name="pVerb">The context menu verb that should be processed.</param>
            <param name="pCommandId">Identifier for the command.</param>
            <param name="pContextMenu">The context menu.</param>
        </member>
        <member name="M:Jam.Shell.Win32ShellContextMenuProvider.GetMenuCaption(System.IntPtr,System.Int32)">
            <summary>Gets menu caption.</summary>
            <param name="pMenu">The menu.</param>
            <param name="pCommandId">Identifier for the command.</param>
            <returns>The menu caption.</returns>
        </member>
        <member name="M:Jam.Shell.Win32ShellContextMenuProvider.OnBeforeCommandExecute(System.String,System.String)">
            <summary>Executes the <see cref="E:Jam.Shell.Win32ShellContextMenuProvider.BeforeCommandExecute"/> event.</summary>
            <param name="pVerb">The context menu verb that should be processed.</param>
            <param name="pCaption">The caption of the menu item.</param>
            <returns>True if the command can be executed, false if it should be skipped.</returns>
        </member>
        <member name="M:Jam.Shell.Win32ShellContextMenuProvider.OnAfterCommandExecute(Jam.Shell.ShellCommand)">
            <summary>Executes the <see cref="E:Jam.Shell.Win32ShellContextMenuProvider.AfterCommandExecute"/> event.</summary>
            <param name="pCommand">The command.</param>
        </member>
        <member name="M:Jam.Shell.Win32ShellContextMenuProvider.CreatePopupMenu">
            <summary>Creates popup menu.</summary>
            <returns>The handle of the new popup menu.</returns>
            <remarks>Deriving classes can return a already existing menu here. </remarks>
        </member>
        <member name="M:Jam.Shell.Win32ShellContextMenuProvider.HandleMenuItem(System.Int32)">
            <summary>Handles the menu item described by pCommandId.</summary>
            <param name="pCommandId">Identifier for the command.</param>
            <returns>True if the menu item was handled, false if not.</returns>
            <remarks>Deriving classes can pass the command to a custom menu.</remarks>
        </member>
        <member name="M:Jam.Shell.Win32ShellContextMenuProvider.Release">
            <summary>Releases this object.</summary>
        </member>
        <member name="M:Jam.Shell.Win32ShellContextMenuProvider.OnRenameItemSelected">
            <summary>
            Fires the RenameItemSelected event
            </summary>
        </member>
        <member name="M:Jam.Shell.Win32ShellContextMenuProvider.ExecuteCommand(Jam.Shell.ShellCommand)">
            <summary>Executes the command operation on the <see cref="P:Jam.Shell.Win32ShellContextMenuProvider.SourceItems"/> .</summary>
            <param name="pCommand">The command.</param>
            <exception cref="T:System.ArgumentNullException">Thrown if there are no source items </exception>
            <exception cref="T:System.ArgumentException">Thrown if one of the source items isn't valid or doesn't support the operation requested.</exception>
            <exception cref="T:System.ComponentModel.Win32Exception">Might be thrown if creating the context menu didn't succeed or for errors happening during invoking the command.</exception>
        </member>
        <member name="M:Jam.Shell.Win32ShellContextMenuProvider.ExecuteCommand(Jam.Shell.ShellContextMenuCommand)">
            <summary>
            Executes the command operation on the <see cref="P:Jam.Shell.Win32ShellContextMenuProvider.SourceItems"/>.
            </summary>
            <param name="pCommand">The command.</param>
        </member>
        <member name="M:Jam.Shell.Win32ShellContextMenuProvider.ShowContextMenu(System.Int32,System.Int32,Jam.Shell.ShellContextMenuOptions)">
            <summary>
            Shows the context menu at the specified location and executes the menu item the user has
            chosen.
            </summary>
            <param name="posX">The x coordinate to display the context menu at.</param>
            <param name="posY">The y coordinate to display the context menu at.</param>
            <param name="pOptions">A set of <see cref="T:Jam.Shell.ShellContextMenuOptions"/> for controlling the operation.</param>
            <returns>The command of the menu item that has been executed. Its verb might be String.Empty, if nothing has been executed or a custom menu item or the command without verb.</returns>
        </member>
        <member name="T:Jam.Shell.BeforeShellCommandEventArgs">
            <summary>
            The BeforeShellCommandEventArgs contains data for the <see cref="E:Jam.Shell.Win32ShellContextMenuProvider.BeforeCommandExecute"/> event.
            You can permit the execution of the shell command by registering to the event, then setting
            <see cref="P:Jam.Shell.BeforeShellCommandEventArgs.ExecuteShellCommand"/> to false if necessary.
            </summary>
        </member>
        <member name="P:Jam.Shell.BeforeShellCommandEventArgs.Cancel">
            <summary>Gets or sets a value indicating whether the command should be cancelled.</summary>
            <value>True to cancel, false if not.</value>
        </member>
        <member name="P:Jam.Shell.BeforeShellCommandEventArgs.ExecuteShellCommand">
            <summary>
            Set to true if the selected command should be executed or set to false if not.
            </summary>
        </member>
        <member name="M:Jam.Shell.BeforeShellCommandEventArgs.#ctor(Jam.Shell.ShellCommand,Jam.Shell.JamItemIdListCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.BeforeShellCommandEventArgs"/> class.
            </summary>
            <param name="pCommandVerb">Contains the context menu item, which has been selected.</param>
            <param name="pItemIdLists">The <see cref="T:Jam.Shell.JamItemIdListCollection"/> that will be affected by the operation.</param>
        </member>
        <member name="T:Jam.Shell.ShellCommandEventArgs">
            <summary>
            The ShellCommandEventArgs contains which <see cref="P:Jam.Shell.ShellCommandEventArgs.Verb"/> is applied to what <see cref="P:Jam.Shell.ShellCommandEventArgs.Items"/> or <see cref="P:Jam.Shell.ShellCommandEventArgs.Paths"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellCommandEventArgs.#ctor(Jam.Shell.ShellCommand,Jam.Shell.JamItemIdListCollection)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.BeforeShellCommandEventArgs"/> class.
            </summary>
            <param name="pCommand">Contains the context menu item, which has been selected.</param>
            <param name="pItemIdLists">The <see cref="T:Jam.Shell.JamItemIdListCollection"/> that will be affected by the operation.</param>
        </member>
        <member name="M:Jam.Shell.ShellCommandEventArgs.#ctor(Jam.Shell.ShellCommand,Jam.Shell.PathCollection)">
            <summary>
            Default constructor.
            </summary>
            <param name="pCommand">The command verb</param>
            <param name="pPaths">The paths affected</param>
        </member>
        <member name="P:Jam.Shell.ShellCommandEventArgs.Verb">
            <summary>
            Contains the context menu item, which has been selected.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellCommandEventArgs.Paths">
             <summary>
             The paths the shell command will affect. (readonly)
             </summary>
             <remarks>
             For the <see cref="F:Jam.Shell.ShellCommand.Paste"/> operation the paths don't contain the files that will be pasted, 
             but instead the element that receives the pasted contents of clipboard. Use (Windows.Forms/System.Windows) Clipboard functions to check the pasted contents instead./>
            </remarks>
        </member>
        <member name="P:Jam.Shell.ShellCommandEventArgs.Items">
             <summary>Gets the ItemIdLists that will be affected by the ShellCommand.</summary>
             <value>Returns the ItemIdLists that will be affected by the ShellCommand.</value>
             <remarks>
             For the <see cref="F:Jam.Shell.ShellCommand.Paste"/> operation the paths don't contain the files that will be pasted, 
             but instead the element that receives the pasted contents of clipboard. Use (Windows.Forms/System.Windows) Clipboard functions to check the pasted contents instead./>
            </remarks>
        </member>
        <member name="T:Jam.Shell.IJamItemIdList">
            <summary>
            Interface of a ShellItem that is used as data object in the ShellBrowser controls.
            </summary>
        </member>
        <member name="P:Jam.Shell.IJamItemIdList.IsInvalid">
            <summary>True if this object is invalid.</summary>
        </member>
        <member name="P:Jam.Shell.IJamItemIdList.DisplayPath">
            <summary>
            Get the full displayable path of the item.
            </summary>
        </member>
        <member name="P:Jam.Shell.IJamItemIdList.Path">
            <summary>Gets the full physical path of an item.</summary>
            <value>The full physical path of the item.</value>
        </member>
        <member name="P:Jam.Shell.IJamItemIdList.Caption">
            <summary>Get the caption of the item.</summary>
            <value>The caption.</value>
        </member>
        <member name="P:Jam.Shell.IJamItemIdList.SpecialFolder">
            <summary>Gets special folder of the item.</summary>
            <value>The special folder.</value>
        </member>
        <member name="P:Jam.Shell.IJamItemIdList.IsFolder">
            <summary>Gets a value indicating whether this object is a folder and can be enumerated.</summary>
            <value>True if this object is folder, false if not.</value>
        </member>
        <member name="M:Jam.Shell.ShellApiHelpers.CreateDirectory(System.String)">
            <summary>
            Creates a directory
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Jam.Shell.ShellApiHelpers.GetDefaultSavePathFromLibrary(Jam.Shell.ItemIdList)">
            <summary>For a given Windows 7+ library, this function returns the default save path.</summary>
            <param name="p_AbsoluteItemIdList">The absolute ItemIdList of the Windows 7 Library</param>
            <returns>The default save path for a given Windows 7+ library path, an empty string if the given p_ItemIdList was not a library or an other error occurred.</returns>
            <author>ternes@jam-software.com, marder@jam-software.com, Paolo Righi</author>
        </member>
        <member name="M:Jam.Shell.ShellApiHelpers.GetDomainFromIdList(Jam.Shell.IShellFolder,Jam.Shell.ItemIdList)">
            <summary>
            Returns the domain name of the passed relative IShellFolder and relative ItemIdList.
            </summary>
            <returns>If the passed ItemIdList represents a domain, then the domain name is returned. Otherwise an empty string is returned.</returns>
        </member>
        <member name="T:Jam.Shell.ItemIdListBase2">
            <summary>
            Used as base class for the <see cref="T:Jam.Shell.ItemIdList"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.ItemIdListBase2.#ctor(System.IntPtr)">
            <summary>
            Initializes a new instance of this class. This constuctor should not be called directly.
            </summary>
            <param name="p_Handle">The Pointer to an Win32 ItemIdList.</param>
        </member>
        <member name="M:Jam.Shell.ItemIdListBase2.ReleaseHandle">
            <summary>
            Free the current Win32 ItemIdList.
            </summary>
            <returns><c>true</c> if the handle is released successfully; otherwise, in the event of a catastrophic failure, <b>false</b></returns>
        </member>
        <member name="P:Jam.Shell.ItemIdListBase2.IsInvalid">
            <summary>
            Returns <c>true</c> if the currently stores ItemIdList is valid; <c>false</c> otherwise;
            </summary>
        </member>
        <member name="M:Jam.Shell.ItemIdListBase2.Finalize">
            <summary>
            Finalizes an instance of the <see cref="T:Jam.Shell.ItemIdListBase2"/> class.
            Releases unmanaged ressources before the instance is reclaimed by the Garbage Collection.
            </summary>
        </member>
        <member name="M:Jam.Shell.ItemIdListBase2.Dispose">
            <summary>
            Releases ressources.
            </summary>
        </member>
        <member name="M:Jam.Shell.ItemIdListBase2.Dispose(System.Boolean)">
            <summary>
            Releases the handle that the ItemIdList instance keeps is released-
            </summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="T:Jam.Shell.ItemIdListComparison">
            <summary>
              Available modes to compare two <c>ItemIdList</c>s.
            </summary>
        </member>
        <member name="F:Jam.Shell.ItemIdListComparison.Display">
            <summary>
              Indicates that the comparison is based on the display in a folder view.
            </summary>
        </member>
        <member name="F:Jam.Shell.ItemIdListComparison.Exact">
            <summary>
              Exact comparison of two instances of an ItemIdList.
            </summary>
        </member>
        <member name="T:Jam.Shell.ItemIdList">
            <summary>
            Wrapper class for ItemIdList structures of the Win32 Shell.
            </summary>
        </member>
        <member name="T:Jam.Shell.ItemIdList.DisplayNameFormat">
            <summary>Values that represent display name formats.</summary>
        </member>
        <member name="F:Jam.Shell.ItemIdList.DisplayNameFormat.Relative">
            <summary>The name relative to the parent folder.</summary>
        </member>
        <member name="F:Jam.Shell.ItemIdList.DisplayNameFormat.RelativeWithExtensions">
            <summary>The name relative to the parent folder. Compared to <see cref="F:Jam.Shell.ItemIdList.DisplayNameFormat.Relative"/> includes file extensions, even if they are hidden in Windows Explorer.</summary>
        </member>
        <member name="F:Jam.Shell.ItemIdList.DisplayNameFormat.DisplayPath">
            <summary>The whole path in an displayable and editable version.</summary>
        </member>
        <member name="F:Jam.Shell.ItemIdList.DisplayNameFormat.PhysicalPath">
            <summary>The absolute physical path.</summary>
        </member>
        <member name="F:Jam.Shell.ItemIdList.DisplayNameFormat.InternalName">
            <summary>Returns a the relative "internal" name of the object. This value is not suitable for display. ShellBrowser needs it internally.</summary>
        </member>
        <member name="M:Jam.Shell.ItemIdList.#ctor">
            <summary>
            Initializes a new empty instance of the <see cref="T:Jam.Shell.ItemIdList"/> class.
            </summary>
        </member>
        <member name="M:Jam.Shell.ItemIdList.#ctor(Jam.Shell.ItemIdList)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ItemIdList"/> class that contains a copy of the given ItemIdList.
            </summary>
            <param name="sourceItemIdList">An instance of the <see cref="T:Jam.Shell.ItemIdList"/> class that should be copied to initalize the new instance.</param>
        </member>
        <member name="M:Jam.Shell.ItemIdList.#ctor(System.Environment.SpecialFolder)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ItemIdList"/> class that contains an ItemIdList to the given special folder.
            </summary>
            <param name="aSpecialFolder">An enumerated constant that identifies a system special folder.</param>
        </member>
        <member name="M:Jam.Shell.ItemIdList.#ctor(Jam.Shell.ShellFolder)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ItemIdList"/> class that contains an ItemIdList for the given special folder.
            </summary>
            <param name="aSpecialFolder">An enumerated constant that identifies a system special folder from the <see cref="T:Jam.Shell.ShellFolder"/></param>
            <exception cref="T:System.Runtime.InteropServices.COMException">A COM-Exception is thrown if the special folder selected is not supported by the system the application is running on.</exception>
            <remarks>If a cached instance is sufficient, use <see cref="M:Jam.Shell.ItemIdList.GetForSpecialFolder(Jam.Shell.ShellFolder)"/> directly</remarks>
        </member>
        <member name="M:Jam.Shell.ItemIdList.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ItemIdList"/> class that contains an ItemIdList for the given path.
            </summary>
            <param name="aPath">A path for that the ItemIdList should be created.</param>
        </member>
        <member name="M:Jam.Shell.ItemIdList.#ctor(Jam.Shell.IShellItemNative)">
            <summary>Creates an ItemIdList instance from the passed IShellItem</summary>
            <param name="pShellItem">A IShellItemNative instance.</param>
        </member>
        <member name="M:Jam.Shell.ItemIdList.#ctor(Jam.Shell.IShellFolder,System.String)">
            <summary>
            Creates an ItemIdList for given path in a Win32 IShellFolder.
            </summary>
            <param name="shlf">A reference to the IShellFolder interface.</param>
            <param name="aPath">The path relative to the given IShellFolder.</param>
            <remarks>Attention: The resulting ItemIdList might be invalid. Check the <see cref="P:Jam.Shell.ItemIdList.IsInvalid"/> property</remarks>
        </member>
        <member name="M:Jam.Shell.ItemIdList.CreateForShellFolderAndPath(Jam.Shell.IShellFolder,System.String)">
            <summary>
            Factory method that creates an ItemIdList for given path in a Win32 IShellFolder.
            Without path the ItemIdList for Drives is returned
            </summary>
            <param name="shlf">A reference to the IShellFolder interface.</param>
            <param name="aPath">The path relative to the given IShellFolder.</param>
        </member>
        <member name="M:Jam.Shell.ItemIdList.ItemIdListForShellFolderName(System.String)">
            <summary>
            Returns the ItemIdList of the passed pShellFolderName, if it matches one.
            </summary>
            <param name="pShellFolderName">Name of the ShellFolder (e.g. "Libraries", "This PC").</param>
            <returns>The ItemIdList if available</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.Parse(System.String)">
            <summary>
            Parses the specified p_DisplayPath and returns an <see cref="T:Jam.Shell.ItemIdList"/> instance.
            Finds physical paths, SpecialFolder names like "My PC" or concatenations of Special Folders and physical paths ("Libraries\Pictures\...", "My PC\c:\windows")
            Also resolves paths in zip files.
            </summary>
            <param name="p_DisplayPath">The path to parse.</param>
            <returns>A valid ItemIdList or null if the path could not be found.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.FromIShellItem(Jam.Shell.IShellItemNative)">
            <summary>
            Creates an ItemIdList instance from the ShellItem passed.
            </summary>
            <param name="pShellItem">A IShellItemNative instance.</param>
            <returns>An ItemIdList or null if something went wrong.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.Dispose(System.Boolean)">
            <summary>Releases Com-Interfaces associated with this ItemIdList.</summary>
            <param name="disposing">true to release both managed and unmanaged resources; false to release only unmanaged resources.</param>
        </member>
        <member name="F:Jam.Shell.ItemIdList.m_SpecialFolder">
            <summary>
            Used for caching the result of SpecialFolder.get
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemIdList.IsInvalid">
            <summary>
            Returns <c>true</c> if the currently stored ItemIdList is valid; <c>false</c> otherwise;
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemIdList.IsInNetwork">
            <summary>
            <c>true</c> if this <see cref="T:Jam.Shell.ItemIdList"/> is part of the nethood; <c>false</c>
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemIdList.IsSlow">
            <summary>Gets a value indicating whether this object is slow.</summary>
            <value>True if this object is slow, false if not.</value>
            <remarks>Slow elements are handled specifically, e.g. list items are loaded asynchronously.</remarks>
        </member>
        <member name="P:Jam.Shell.ItemIdList.IsSearchFolder">
            <summary>Gets a value indicating whether this object represents a search folder.</summary>
            <value>True if this object represents a search folder, false if not.</value>
        </member>
        <member name="M:Jam.Shell.ItemIdList.IsParentOf(Jam.Shell.ItemIdList)">
            <summary>
            Determines whether the passed ItemIdList is a child of this instance or if it represents the same element as the callee.
            </summary>
            <param name="p_ItemIdList">The child ItemIdList</param>
            <returns>true, if this instance is the parent of the passed ItemIdList or if both ItemIdLists represent the same element.</returns>
        </member>
        <member name="P:Jam.Shell.ItemIdList.Parent">
            <summary>
            Returns the parent ItemIdList, or an invalid ItemIdList if no parent exists.
            </summary>
            <seealso cref="P:Jam.Shell.ItemIdList.ParentPath"/>
        </member>
        <member name="P:Jam.Shell.ItemIdList.NativeShellFolder">
            <summary>Gets IShellFolder interface of the ItemIdList. Might be null if IShellItem cannot be retrieved.</summary>
            <value>The native shell folder.</value>
        </member>
        <member name="P:Jam.Shell.ItemIdList.Count">
            <summary>
            Returns the number of parts this ItemIdList consists of.
            </summary>
            <returns>The number of parts of this ItemIdList.</returns>
        </member>
        <member name="P:Jam.Shell.ItemIdList.IsRootOfNamespace">
            <summary>
            Returns true if the current ItemIdList is the root of the shell name space. This is commonly the "Desktop"
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemIdList.Path">
            <summary>
            The corresponding file system path of this ItemIdList.
            This property may be empty if the current ItemIdList does not belong to a file system object.
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemIdList.DisplayPath">
            <summary>
            Returns a string representing the path for this item suitable for displaying.
            </summary>
            <value>
            A string representing the path of the item suitable for displaying.
            </value>
            <remarks>Compared to <see cref="P:Jam.Shell.ItemIdList.Caption"/> it returns the item's path. Compared to <see cref="P:Jam.Shell.ItemIdList.Path"/> that only returns physical paths and might be empty
            result of DisplayPath will contain a string suitable for displaying in the UI.
            </remarks>
            <seealso cref="P:Jam.Shell.ItemIdList.Caption"/>
            <seealso cref="P:Jam.Shell.ItemIdList.Path"/>
        </member>
        <member name="P:Jam.Shell.ItemIdList.IsFolder">
            <summary>
            Does this ItemIdList element represent a directory?
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemIdList.ParentPath">
            <summary>
            Returns the parent directory of the element represented by this ItemIdList.
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemIdList.Caption">
            <summary>
            Returns the display name of the object for that this ItemIdList stands for. This does not 
            neccessarily return the complete filename of the object, refer to <see cref="P:Jam.Shell.ItemIdList.Path"/> if this
            functionality is required.
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemIdList.Name">
            <summary>Returns the physical name of the ItemIdList. </summary>
            <value>The physical name of the ItemIdList. </value>
        </member>
        <member name="P:Jam.Shell.ItemIdList.SpecialFolder">
            <summary>
            SpecialFolder allows you to get the type of the currently listed folder.
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemIdList.NativeShellItem">
            <summary>
            Returns the ShellItem for the ItemIdList.
            Only works for AbsoluteItemIdLists.
            </summary>
            <value>
            An <see cref="T:Jam.Shell.IShellItemNative"/> instance representing this ItemIdList.
            </value>
        </member>
        <member name="P:Jam.Shell.ItemIdList.NativeStream">
            <summary>Retrieves the native IStream interface for an ItemIdList.</summary>
            <value>The IStream interface (not cached, but retrieved on any call).</value>
        </member>
        <member name="M:Jam.Shell.ItemIdList.ReleaseHandle">
            <summary>
            Free the current Win32 ItemIdList.
            </summary>
            <returns><c>true</c> if the handle is released successfully; otherwise, in the event of a catastrophic failure, <b>false</b></returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetForSpecialFolder(Jam.Shell.ShellFolder)">
            <summary>
            Returns an ItemIdList for a SpecialFolder.
            </summary>
            <param name="aSpecialFolder">The SpecialFolder.</param>
            <returns>The ItemIdList of the SpecialFolder or null if not successful.</returns>
            <remarks>Don't dispose the result. It's the cached instance</remarks>
        </member>
        <member name="M:Jam.Shell.ItemIdList.IsSpecialFolder(Jam.Shell.ShellFolder)">
            <summary>
            Compares the ItemIdList to a <see cref="T:Jam.Shell.ShellFolder"/>.
            </summary>
            <param name="pSpecialFolderToCheck">The shell folder to that the ItemIdList should be compared.</param>
            <returns>true if the ItemIdList represents the given shell folder, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.IsSpecialFolder(Jam.Shell.ShellFolder[])">
            <summary>Compares the ItemIdList to the set of <see cref="T:Jam.Shell.ShellFolder"/> instances.</summary>
            <param name="pShellFolders">The shell folders.</param>
            <returns>true if the ItemIdList represents one of the given shell folder, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.IsInSpecialFolder(Jam.Shell.ShellFolder)">
            <summary>Query if 'pShellFolder' is either itself the passed special folder or if one if its parents is.</summary>
            <param name="pShellFolder">A ShellFolder representing the value to check.</param>
            <returns>true if the current itemIdList or one of its parents is special folder, false if not.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetHashCode">
            <summary>
            Serves as a hash function for a particular type.
            </summary>
            <returns>A hash code for the current <see cref="T:Jam.Shell.ItemIdList"/>.</returns>
            <seealso cref="M:System.Object.GetHashCode"/>
        </member>
        <member name="M:Jam.Shell.ItemIdList.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:Jam.Shell.ItemIdList"/> references the same object in the Windows Shell namespace.
            </summary>
            <param name="obj">The <see cref="T:Jam.Shell.ItemIdList"/> to compare the current <c>ItemIdList</c> with.</param>
            <returns><c>true</c> if the specified <see cref="T:Jam.Shell.ItemIdList"/> references the same shell object; otherwise false.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.Equals(Jam.Shell.ItemIdList)">
            <summary>
            Determines whether the specified <see cref="T:Jam.Shell.ItemIdList" /> references the same object in the Windows Shell namespace.
            <seealso cref="M:Jam.Shell.ItemIdList.Equals(System.Object)" />
            </summary>
            <param name="other">The <see cref="T:Jam.Shell.ItemIdList" /> to compare the current <c>ItemIdList</c> with.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:Jam.Shell.ItemIdList" /> references the same shell object; otherwise false.
            </returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.Equals(Jam.Shell.ItemIdList,Jam.Shell.ItemIdListComparison)">
            <summary>
            Determines whether the specified <see cref="T:Jam.Shell.ItemIdList" /> references the same object in the Windows Shell namespace.
            <seealso cref="M:Jam.Shell.ItemIdList.Equals(System.Object)" />
            </summary>
            <param name="other">The <see cref="T:Jam.Shell.ItemIdList" /> to compare the current <c>ItemIdList</c> with.</param>
            <param name="comparison">The comparsion to perform.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:Jam.Shell.ItemIdList" /> references the same shell object; otherwise false.
            </returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.CompareTo(Jam.Shell.ItemIdList)">
            <summary>
            Determines the relative order of "this" and "other".
            </summary>
            <param name="other">The ItemIdList to compare with.</param>
            <exception cref="T:System.ArgumentNullException">If argument was null.</exception>
            <returns>Negative return value if "other" should follow "this", zero if the two items are the same, a positive value otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.CompareTo(Jam.Shell.ItemIdList,Jam.Shell.ItemIdListComparison)">
            <summary>
            Determines the relative order of "this" and "other".
            </summary>
            <param name="other">The ItemIdList to compare with.</param>
            <param name="comparison">The comparsion to perform.</param>
            <exception cref="T:System.ArgumentNullException">If argument was null.</exception>
            <returns>Negative return value if "other" should follow "this", zero if the two items are the same, a positive value otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.LastPart">
            <summary>
            Returns the last part of an ItemIdList as new ItemIdList.
            </summary>
            <returns>The last part of an ItemIdList.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetPart(System.Int32,System.Int32)">
            <summary>
            Returns a new instance of the <see cref="T:Jam.Shell.ItemIdList"/> class that contains only a part of the current ItemIdList.
            </summary>
            <param name="from">The index of the element of the ItemIdList where to start.</param>
            <param name="length">The number of elements of the ItemIdList that should be copied.</param>
            <returns>A new instance of the <see cref="T:Jam.Shell.ItemIdList"/> class the contains te</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.Concat(Jam.Shell.ItemIdList)">
            <summary>
            Concatenates the specified <see cref="T:Jam.Shell.ItemIdList"/> to the current one.
            </summary>
            <param name="toConcat"><see cref="T:Jam.Shell.ItemIdList"/> that should be concatenated.</param>
            <returns>A new instance of the <see cref="T:Jam.Shell.ItemIdList"/> class which consists of the current ItemIdList and the specified <see cref="T:Jam.Shell.ItemIdList"/> concatenated.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.ConcatRelativeIdList(System.IntPtr)">
            <summary>
            Concatenates a relative item idlist to the current one returning a new object
            </summary>
            <param name="idList">pointer to the relative item id list</param>
            <returns>a new ItemIdList</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.HasAttributes(Jam.Shell.SFGAOF)">
            <summary>
            Determines whether the object represented by this ItemIdList has the specified attributes.
            </summary>
            <param name="pAttributes">The attributes.</param>
            <returns>True if the object has the attributes, false otherwise.</returns>
        </member>
        <member name="P:Jam.Shell.ItemIdList.LinkTarget">
            <summary>
            Gets the link target if the element represented by this ItemIdList is a link.
            </summary>
            <value>
            The <see cref="T:Jam.Shell.ItemIdList"/> this instance links to, or this if an error occurred.
            </value>
        </member>
        <member name="M:Jam.Shell.ItemIdList.Reload">
            <summary>Reloads the ItemIdList by updating the ShellItem and reassigning the pidl. Turns non-functional ItemIdLists as they are sent by ShellNotifications into functional ones.</summary>
            <returns>True, if reloading the ItemIdList was successful. False if updating failed (e.g. because the associated item doesn't exist anymore).</returns>
            <remarks>If the itemIdList cannot be reloaded or the element to refresh is not existing anymore, nothing happens, the old ItemIdList stays in place, but the function returns false.</remarks>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetPropertyValue(Jam.Shell.SHCOLUMNID)">
            <summary>Gets property value.</summary>
            <param name="pShellColumnId">Identifier for the property.</param>
            <returns>The property value.</returns>
            <remarks>Only works on Vista and higher</remarks> 
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetPropertyVariantValue(Jam.Shell.SHCOLUMNID)">
            <summary>Gets property value of the shell item represented by this ItemIdList. The value is converted into a variant.</summary>
            <param name="pShellColumnID">Identifier for the property.</param>
            <returns>An object representing the variant value of the property or null if there is no value or the property is not supported.</returns>
            <remarks>Only works on Vista and higher</remarks>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetPropertyDisplayValue(Jam.Shell.SHCOLUMNID)">
            <summary>Gets property value converted to a string.</summary>
            <param name="pShellColumnId">Identifier for the property.</param>
            <returns>The formatted property value or an empty string if the property doesn't have a value or is not supported by the item.</returns>
            <remarks>Only works on Vista and higher. The value is converted using Shell API function FormatForDisplay, so it returns the same string Windows Explorer is displaying.</remarks> 
        </member>
        <member name="M:Jam.Shell.ItemIdList.SetPropertyValue(Jam.Shell.SHCOLUMNID,System.String)">
            <summary>Sets a property value.</summary>
            <param name="pShellColumnID">Identifier for the property.</param>
            <param name="pValue">The value.</param>
        </member>
        <member name="F:Jam.Shell.ItemIdList.lockObj">
            <summary>
            Lock object that is used when releasing the handle.
            </summary>
        </member>
        <member name="F:Jam.Shell.ItemIdList.EmptyIdList">
            <summary>
            An empty ItemIdList.
            </summary>
            <remarks>Useful everywhere you need to pass a NULL PItemIdList to Windows API function. IItemIdList.IsInvalid returns True for this instance.</remarks>
            <seealso cref="P:Jam.Shell.ItemIdList.IsInvalid"/>
        </member>
        <member name="M:Jam.Shell.ItemIdList.IsNullOrInvalid(Jam.Shell.ItemIdList)">
            <summary>Query if 'pItemIdList' is null or invalid.</summary>
            <param name="pItemIdList">An ItemIdList. This value can be NULL.</param>
            <returns>True if null or the passed ItemIdList is invalid, false if not.</returns>
        </member>
        <member name="F:Jam.Shell.ItemIdList.m_SpecialFolder2ItemIdList">
            <summary>
            Static dictionary to cache the SpecialFolder --> ItemIdList mapping.
            </summary>
            <seealso cref="P:Jam.Shell.ItemIdList.SpecialFolder"/>
        </member>
        <member name="P:Jam.Shell.ItemIdList.DESKTOP_ITEMIDLIST">
            <summary>
            Static instance of an ItemIDList to the desktop which is needed frequently in this class
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemIdList.SpecialFolder2ItemIdList">
            <summary>
            Lazy getter for the ShellFolder --> ItemIdList dictionary.
            </summary>
        </member>
        <member name="P:Jam.Shell.ItemIdList.IsExpandable">
            <summary>Gets a value indicating whether this object is expandable.</summary>
            <value>true if this object is expandable, false if not.</value>
        </member>
        <member name="M:Jam.Shell.ItemIdList.AllocMem(System.Int32)">
            <summary>
            Allocates memory for storing an ItemIdList.
            </summary>
            <param name="size">The memory size that is required.</param>
            <returns>The pointer to the allocated memory.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetPidlSize(System.IntPtr)">
            <summary>
            Calculates the size of the given Win32 ItemIdList in bytes.
            </summary>
            <param name="idList">Pointer to the Win32 ItemIdList.</param>
            <returns>The size of the given Win32 ItemIdList in Bytes.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetPidlCount(System.IntPtr)">
            <summary>
            Returns the number of parts of that a Win32 ItemIdList consists.
            </summary>
            <param name="idList">A Win32 ItemIdList.</param>
            <returns>The number of parts of the given Win32 ItemIdList</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetStringFromStrRet(Jam.Shell.STRRET)">
            <summary>
            Returns the display name for the given STRRET structure.
            </summary>
            <param name="str_ret">A pointer to the STRRET structure. When the function returns, this pointer will no longer be valid.</param>
            <returns>A display name.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetStringFromStrRet(Jam.Shell.ItemIdList,Jam.Shell.STRRET)">
            <summary>
            Returns the display name for the given ItemIdList and STRRET structure.
            </summary>
            <param name="pItemIdList">A pointer to the item's ItemIdList. This value can be NULL.</param>
            <param name="str_ret">A pointer to the STRRET structure. When the function returns, this pointer will no longer be valid.</param>
            <returns>A display name.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.CopyItemIdList(System.IntPtr)">
            <summary>
            Creates a copy of a Win32 ItemIdList in the memory.
            </summary>
            <param name="source">The Win32 ItemIdList that should be copied.</param>
            <returns>The pointer to the copied Win32 ItemIdList.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.CreateItemIdListForSpecialFolder(Jam.Shell.ShellFolder)">
            <summary>
            Returns an ItemIdList for a special shell folder.
            </summary>
            <param name="p_SpecialFolder">An enumerated constant that identifies a system special folder.</param>
            <returns>An instance of the ItemIdList class that represents the requested <see cref="T:Jam.Shell.ShellFolder"/>.</returns>
            <remarks>The returned instances must not be disposed!! They are static.</remarks>
        </member>
        <member name="M:Jam.Shell.ItemIdList.GetPidlFromPath(Jam.Shell.IShellFolder,System.String)">
            <summary>
            Returns a Pointer to a PIDL for the specified path, relative to the specified ShellFolder
             If null is passed for Shlfolder, then the Desktopfolder is used.
            </summary>
            <param name="pShellFolder">If the path is realtive, you need to supply the IShellFolder interface of the folder here, to which the path is realtive. Pass null for absolute paths.</param>
            <param name="pPath">The path of the element for that an PIDL should be returned.</param>
            <returns>A IntPtr representing the ItemIdList or IntPtr.Zero if the pidl could not be retrieved.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.ScanFolderForPath(Jam.Shell.ItemIdList,System.String,System.Int32)">
            <summary>Scans the given folder for passed path. </summary>
            <param name="pParentFolder">An ItemIdList representing the folder to scan. </param>
            <param name="pPath">A file-path.</param>
            <param name="pStartIndex">If > 0 doesn't try to find all elements of pPath, but starts at the given position.</param>
            <returns>A ItemIdList-Pointer if the element was found.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.ResolveNonFileSystemPath(System.String)">
            <summary>
            Tries to select a non-filesystem path like Computer\\Iphone\\Cam; bug #10117
            </summary>
            <param name="pPath">A path to a location.</param>
            <returns>An ItemIdList for the given path. An empty ItemIdList, if it could not be found.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.InitSpecialFolderList">
            <summary>
            Initializes the private field m_SpecialFolder2ItemIdList and m_ItemIdList2SpecialFolder if necessary.
            This method can be called multiple times, it will do its work only once.
            </summary>
        </member>
        <member name="M:Jam.Shell.ItemIdList.TestForSpecialFolder">
            <summary>
            Check if the given ItemIdList is a SpecialFolder.
            </summary>
            <returns>The SpecialFolder that is represented by the ItemIdList.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdList.CompareTo(System.Object)">
            <summary>Determines the relative order of "this" and "other".</summary>
            <param name="obj">The <see cref="T:Jam.Shell.ItemIdList"/> to compare the current <c>ItemIdList</c> with.</param>
            <returns>
            Negative return value if "other" should follow "this", zero if the two items are the same, a
            positive value otherwise.
            </returns>
        </member>
        <member name="T:Jam.Shell.ItemIdListConverter">
            <summary>A TypeConverter for <see cref="T:Jam.Shell.IJamItemIdList"/>s and <see cref="T:Jam.Shell.ItemIdList"/>s . Used to allow to bindings between string and Shellfolder fields to dependency properties of type IJamItemIdList or ItemIdList.</summary>
            <remarks>If a string is bound to an ItemIdList or IJamItemIdList, it is interpreted as parsable path. If a <see cref="T:Jam.Shell.ShellFolder"/> is bound to an ItemIdList or ItemIdList it is converted to the ItemIdList of the ShellFolder.</remarks>
        </member>
        <member name="M:Jam.Shell.ItemIdListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Specifies the types that can be converted into an <see cref="T:Jam.Shell.ItemIdList"/>.</summary>
            <param name="context">The context.</param>
            <param name="sourceType">Type of the source.</param>
            <returns>True if the passed type can be converted into an <see cref="T:Jam.Shell.ItemIdList"/>, false if not.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)">
            <summary>Specifies the types we can convert to.</summary>
            <param name="context">The context.</param>
            <param name="destinationType">Type of the destination.</param>
            <returns>True if the <see cref="T:Jam.Shell.ItemIdList"/> can be converted into the destination type, false if not.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)">
            <summary>Converts the value into an <see cref="T:Jam.Shell.ItemIdList"/>.</summary>
            <param name="context">The context.</param>
            <param name="culture">The culture.</param>
            <param name="value">The value.</param>
            <returns>The <see cref="T:Jam.Shell.ItemIdList"/> created from the passed value.</returns>
        </member>
        <member name="M:Jam.Shell.ItemIdListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)">
            <summary>Converts the <see cref="T:Jam.Shell.ItemIdList"/> into the destinationType.</summary>
            <param name="context">The context.</param>
            <param name="culture">The culture.</param>
            <param name="value">The value to convert.</param>
            <param name="destinationType">Type of the destination.</param>
            <returns>A destinationType typed object representing the converted <see cref="T:Jam.Shell.ItemIdList"/>.</returns>
        </member>
        <member name="T:Jam.Shell.IO.SystemIOFile">
            <summary>
            Class implementing IFile, IDirectory using methods from System.IO
            </summary>
        </member>
        <member name="T:Jam.Shell.IO.IOFactory">
            <summary>
            Factory class creating the right class objects to use as IFile, IDirectory, etc.
            </summary>
        </member>
        <member name="M:Jam.Shell.IO.File.Exists(System.String)">
            <summary>
            See <see cref="M:System.IO.File.Exists(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns>See return value of <see cref="M:System.IO.File.Exists(System.String)"/></returns>
        </member>
        <member name="M:Jam.Shell.IO.File.Delete(System.String)">
            <summary>
            Deletes the specified path. See <see cref="M:System.IO.File.Delete(System.String)"/>
            </summary>
            <param name="path">The path.</param>
        </member>
        <member name="M:Jam.Shell.IO.File.Copy(System.String,System.String)">
            <summary>
            Copies the specified source. See <see cref="M:System.IO.File.Copy(System.String,System.String)"/>
            </summary>
            <param name="src">The source.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="M:Jam.Shell.IO.File.Move(System.String,System.String)">
            <summary>
            Moves the specified source. See <see cref="M:System.IO.File.Move(System.String,System.String)"/>
            </summary>
            <param name="src">The source.</param>
            <param name="destination">The destination.</param>
        </member>
        <member name="M:Jam.Shell.IO.File.Create(System.String)">
            <summary>
            Creates the specified path. See <see cref="M:System.IO.File.Create(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns> See <see cref="M:System.IO.File.Create(System.String)"/></returns>
        </member>
        <member name="M:Jam.Shell.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)">
            <summary>
            Opens the specified path. See <see cref="M:System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)"/>
            </summary>
            <param name="path">The path.</param>
            <param name="filemode">The filemode.</param>
            <param name="fileAccess">The file access.</param>
            <param name="fileshare">The fileshare.</param>
            <returns>See <see cref="M:System.IO.File.Open(System.String,System.IO.FileMode,System.IO.FileAccess,System.IO.FileShare)"/></returns>
        </member>
        <member name="M:Jam.Shell.IO.File.GetAttributes(System.String)">
            <summary>
            Gets the attributes. See <see cref="M:System.IO.File.GetAttributes(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns>See <see cref="M:System.IO.File.GetAttributes(System.String)"/></returns>
        </member>
        <member name="M:Jam.Shell.IO.File.GetCreationTime(System.String)">
            <summary>
            Gets the creation time. See <see cref="M:System.IO.File.GetCreationTime(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns>See <see cref="M:System.IO.File.GetCreationTime(System.String)"/></returns>
        </member>
        <member name="M:Jam.Shell.IO.File.GetLastAccessTime(System.String)">
            <summary>
            Gets the last access time. See <see cref="M:System.IO.File.GetLastAccessTime(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns>See <see cref="M:System.IO.File.GetLastAccessTime(System.String)"/></returns>
        </member>
        <member name="M:Jam.Shell.IO.File.GetLastWriteTime(System.String)">
            <summary>
            Gets the last write time. See <see cref="M:System.IO.File.GetLastWriteTime(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns>See <see cref="M:System.IO.File.GetLastWriteTime(System.String)"/></returns>
        </member>
        <member name="M:Jam.Shell.IO.File.GetSize(System.String)">
            <summary>
            Gets the file size in byte. Not part of the normal System.IO.File 
            </summary>
            <param name="path">The path.</param>
            <returns>The file size for the given path in byte.</returns>
        </member>
        <member name="M:Jam.Shell.IO.Directory.Exists(System.String)">
            <summary>
            See <see cref="M:System.IO.Directory.Exists(System.String)"/>
            </summary>
            <param name="filename">The filename.</param>
            <returns>See return value of <see cref="M:System.IO.Directory.Exists(System.String)"/></returns>
        </member>
        <member name="M:Jam.Shell.IO.Directory.Delete(System.String,System.Boolean)">
            <summary>
            Deletes the specified path. See <see cref="M:System.IO.Directory.Delete(System.String,System.Boolean)"/>
            </summary>
            <param name="path">The path.</param>
            <param name="recursive">if true, recursively deletes subelements</param>
        </member>
        <member name="M:Jam.Shell.IO.Directory.CreateDirectory(System.String)">
            <summary>
            Creates the directory. See <see cref="M:System.IO.Directory.CreateDirectory(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns>See <see cref="M:System.IO.Directory.CreateDirectory(System.String)"/></returns>
        </member>
        <member name="M:Jam.Shell.IO.Directory.GetFiles(System.String)">
            <summary>
            See <see cref="M:System.IO.Directory.GetFiles(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns>See return value of <see cref="M:System.IO.Directory.GetFiles(System.String)"/></returns>
        </member>
        <member name="M:Jam.Shell.IO.Directory.GetFileSystemEntries(System.String)">
            <summary>
            See <see cref="M:System.IO.Directory.GetFileSystemEntries(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns>See return value of <see cref="M:System.IO.Directory.GetFileSystemEntries(System.String)"/></returns>
        </member>
        <member name="M:Jam.Shell.IO.Directory.GetDirectories(System.String)">
            <summary>
            See <see cref="M:System.IO.Directory.GetDirectories(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns>See return value of <see cref="M:System.IO.Directory.GetDirectories(System.String)"/></returns>
        </member>
        <member name="M:Jam.Shell.IO.Directory.SetCurrentDirectory(System.String)">
            <summary>
            Sets the current directory. Even in AlphaFS only works with short paths!!!
            </summary>
            <param name="path"></param>
        </member>
        <member name="M:Jam.Shell.IO.Path.Combine(System.String,System.String)">
            <summary>
            See <see cref="M:System.IO.Path.Combine(System.String,System.String)"/>
            </summary>
            <param name="path1">The path1.</param>
            <param name="path2">The path2.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.Path.GetDirectoryName(System.String)">
            <summary>
            See <see cref="M:System.IO.Path.GetDirectoryName(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.Path.GetExtension(System.String)">
            <summary>
            See <see cref="M:System.IO.Path.GetExtension(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.Path.GetFileName(System.String)">
            <summary>
            See <see cref="M:System.IO.Path.GetFileName(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.Path.GetPathRoot(System.String)">
            <summary>
            See <see cref="M:System.IO.Path.GetPathRoot(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.Path.GetTempPath">
            <summary>
            See <see cref="M:System.IO.Path.GetTempPath"/>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IO.Path.IsPathRooted(System.String)">
            <summary>
             See <see cref="M:System.IO.Path.IsPathRooted(System.String)"/>
            </summary>
            <param name="path">The path.</param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.JamItemIdListCollection">
            <summary>
            Collection class for items implementing <see cref="T:Jam.Shell.IJamItemIdList"/>.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamItemIdListCollection.m_IsReadOnly">
            <summary>
            Is the ItemCollection readonly?
            </summary>
        </member>
        <member name="P:Jam.Shell.JamItemIdListCollection.BaseFolder">
            <summary>Gets or sets the base folder.</summary>
            <value>The base folder.</value>
            <remarks>When adding paths Add it is possible to pass relative paths or ItemIdLists refering to this BaseFolder.</remarks>>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.GetUIObject(System.Guid)">
            <summary>
            Queries and returns COM interfaces from the currently active Folder and object. If object names are assigned to the MultiObject collection, then they will be used.
            </summary>
            <param name="riid">IID of the interface that should be returned</param>
            <returns>The requested COM object, which needs to be casted.</returns>
            <exception cref="T:System.ComponentModel.Win32Exception">The exception is thrown, if no ShellFolder could be retrieved for the parent.</exception>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.IndexOf(Jam.Shell.IJamItemIdList)">
            <summary>
            Searches for the specified object and returns the zero-based index of the
            first occurrence within the entire Collections.
            </summary>
            <param name="item">The object to locate in the Collection. The value
            can be null for reference types.</param>
            <returns>The zero-based index of the first occurrence.</returns>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.IndexOfPath(System.String)">
            <summary>
            Searches item collection for the specified path.
            </summary>
            <param name="pDisplayPath">A complete path to be searched</param>
            <returns>-1 if the element couldn't be found, the position in the item collection otherwise</returns>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.Insert(System.Int32,Jam.Shell.IJamItemIdList)">
            <summary>
            Part of the <see cref="T:System.Collections.Generic.IList`1"/> interface. Inserts the passed item at the passed index.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the list is readonly.</exception>
            <param name="index">The index to insert the item.</param>
            <param name="item">The item to insert.</param>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.RemoveAt(System.Int32)">
            <summary>
            Part of the <see cref="T:System.Collections.Generic.IList`1"/> interface. Removes the item at the passed index.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the list is readonly.</exception>
            <param name="index">The index to remove.</param>
        </member>
        <member name="P:Jam.Shell.JamItemIdListCollection.Item(System.Int32)">
            <summary>
            Get a item at the specified index. The setter currently always throws an exception.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the requested operation is invalid.</exception>
            <param name="index">The index to get or set.</param>
            <returns>The item at the specified index.</returns>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.Add(Jam.Shell.IJamItemIdList)">
            <summary>
            Part of the <see cref="T:System.Collections.ICollection"/> interface. Adds an element to the
            collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the collection is readonly.</exception>
            <param name="item">The item to add.</param>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.Add(System.String)">
            <summary>
            Adds an element to the collection.
            </summary>
            <param name="pPath">The path to add.</param>
            <remarks>When passing filenames only make sure to set the <see cref="P:Jam.Shell.JamItemIdListCollection.BaseFolder"/>.</remarks>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.AddRange(System.String[])">
            <summary>Adds the items in the passed StringCollection..</summary>
            <param name="pPaths">A StringCollection of items to append to this.</param>
            <remarks>When passing filenames only make sure to set the <see cref="P:Jam.Shell.JamItemIdListCollection.BaseFolder"/>.</remarks>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.AddRange(System.Collections.Generic.IEnumerable{Jam.Shell.IJamItemIdList})">
            <summary>Adds a range of items.</summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the requested operation is invalid.</exception>
            <param name="pCollection">An IEnumerable&lt;IJamItemIdList&gt; of items to append to this instance.</param>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.AddInternal(Jam.Shell.IJamItemIdList)">
            <summary>
            Internal <see cref="M:Jam.Shell.JamItemIdListCollection.Add(Jam.Shell.IJamItemIdList)"/> method.
            </summary>
            <param name="item">The item to add</param>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.Clear">
            <summary>
            Part of the <see cref="T:System.Collections.Generic.ICollection`1"/> interface, clears the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the collection is readonly.</exception>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.ClearInternal">
            <summary>
            Internal <see cref="M:Jam.Shell.JamItemIdListCollection.Clear"/> method. Clears all items from the collection.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.Contains(Jam.Shell.IJamItemIdList)">
            <summary>
            Determines whether an element is in the collection
            </summary>
            <param name="item">the item</param>
            <returns>true, if the item is returned</returns>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.CopyTo(Jam.Shell.IJamItemIdList[],System.Int32)">
            <summary>
            Copies the entire <see cref="T:Jam.Shell.JamItemIdListCollection"/> to a compatible
            one-dimensional array, starting at the specified index of the target array.
            </summary>
            <param name="array"></param>
            <param name="arrayIndex"></param>
        </member>
        <member name="P:Jam.Shell.JamItemIdListCollection.Count">
            <summary>
            Returns the number of items in the collection
            </summary>
        </member>
        <member name="P:Jam.Shell.JamItemIdListCollection.IsReadOnly">
            <summary>
            Returns true
            </summary>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.Remove(Jam.Shell.IJamItemIdList)">
            <summary>
            Part of the <see cref="T:System.Collections.Generic.ICollection`1"/> interface. Removes an element from the collection.
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when the list is readonly.</exception>
            <param name="item">The object to remove from the
            <see cref="T:System.Collections.Generic.ICollection`1" />.</param>
            <returns>true if the item was removed, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.GetEnumerator">
            <summary>
            Returns an enumerator that iterates through the collection.
            </summary>
            <returns>An enumerator for the items.</returns>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.#ctor">
            <summary>Initializes a new empty collection. ItemIdLists can be added using <see cref="M:Jam.Shell.JamItemIdListCollection.Add(Jam.Shell.IJamItemIdList)"/> or <see cref="M:Jam.Shell.JamItemIdListCollection.AddRange(System.Collections.Generic.IEnumerable{Jam.Shell.IJamItemIdList})"/>.</summary>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.#ctor(System.Boolean)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.JamItemIdListCollection"/> class.
            </summary>
            <param name="isReadOnly">if set to <c>true</c> the collection is readonly.</param>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.#ctor(System.Runtime.InteropServices.ComTypes.IDataObject)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.JamItemIdListCollection"/> class and adds the elements contained in the IDataObject.
            </summary>
            <param name="pDataObject">The data object. It must contain a "Shell IdList Array" section, else an empty list created.</param>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.#ctor(Jam.Shell.ShellBrowserBase)">
            <summary>Creates a new collection including the elements contained in the passed ShellBrowser.</summary>
            <param name="pParentShellBrowser">A ShellBrowser instance of the parent element.</param>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.#ctor(Jam.Shell.ItemIdList)">
            <summary>Creates a new collection including the elements contained in the passed item.</summary>
            <param name="pParent">ItemIdList of the parent element.</param>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.#ctor(Jam.Shell.ItemIdList,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.JamItemIdListCollection"/>
             class including elements in the passed parent item matching the passed filter.
            </summary>
            <param name="pParent">ItemIdList of the parent element.</param>
            <param name="pFilter">Specifies the filter. See <see cref="P:Jam.Shell.ShellBrowserBase.Filter"/> for valid
            filters.</param>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.#ctor(Jam.Shell.ItemIdList,System.String,System.Boolean,System.Func{Jam.Shell.ShellBrowserBase,System.Boolean})">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.JamItemIdListCollection"/>
             class including elements in the passed parent item matching the passed filter.
            </summary>
            <param name="pParent">ItemIdList of the parent element.</param>
            <param name="pFilter">Specifies the filter. See <see cref="P:Jam.Shell.ShellBrowserBase.Filter"/>
            for valid filters.</param>
            <param name="pFileSystemOnly">True to exlude no file system objects from the list.</param>
            <param name="pCanAdd">A filter method that decides whether items are included or not.</param>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.GetFilePaths">
            <summary>
            returns the Filepaths contained in this collection as string array. 
            </summary>
            <returns>a string array of filepaths</returns>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.GetPathCollection">
            <summary>Creates a <see cref="T:Jam.Shell.PathCollection"/> containing the paths of the elements in this collection.</summary>
            <returns>A <see cref="T:Jam.Shell.PathCollection"/>.</returns>
            <remarks>A fresh list is created on every call.</remarks>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.Sort">
            <summary>Sorts this collection using the default ItemIdList comparer, i.e. <see cref="M:Jam.Shell.ItemIdList.CompareTo(Jam.Shell.ItemIdList)"/>.</summary>
        </member>
        <member name="M:Jam.Shell.JamItemIdListCollection.ToArray">
            <summary>Convert this object into an array representation.</summary>
            <returns>An array that represents the data in this object.</returns>
        </member>
        <member name="T:Jam.Shell.PathCollection">
            <summary>
            A class that allows to store paths and prevents duplicates
            </summary>
        </member>
        <member name="F:Jam.Shell.PathCollection.m_UpdateCounter">
            <summary>
            Indicates whether the list is changing at the moment; bug #9923
            </summary> 
        </member>
        <member name="F:Jam.Shell.PathCollection.m_AllowDuplicates">
            <summary>
            Normally list only takes unique paths. In certain cases (e.g. in the BeforeShellDrop/OperationPerformed EventArgs, allowing duplicates is required).
            </summary>
        </member>
        <member name="M:Jam.Shell.PathCollection.#ctor">
            <summary>
            Initializes a new instance of the <b><see cref="T:Jam.Shell.PathCollection"/></b> class 
            </summary>
        </member>
        <member name="M:Jam.Shell.PathCollection.#ctor(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Initializes a new instance of the <b>PathCollection</b> class and fills it with the given enumerable string collection.
            </summary>
            <param name="p_StringCollection">Items with that the list should be filled initially.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.#ctor(System.Collections.Specialized.StringCollection)">
            <summary>
            Initializes a new instance of the <b>PathCollection</b> class and fills it with the given <b>StringCollection</b>
            </summary>
            <param name="p_StringCollection">Items with that the list should be filled initially.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <b>PathCollection</b> class and fills it with the given <c>String</c>.
            </summary>
            <param name="p_InitialMember">A string which should be the first item in the <see cref="T:Jam.Shell.PathCollection"/>.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.#ctor(Jam.Shell.JamItemIdListCollection)">
            <summary>
            Initializes a new instance of the <b>PathCollection</b> class and fills it with the given
            enumerable ItemIdList collection.
            </summary>
            <param name="pCollection">The collection.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.Dispose">
            <summary>
            Releases ressources.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathCollection.Dispose(System.Boolean)">
            <summary>
            Releases managed ressources.
            </summary>
            <param name="disposing">The handle that the ItemIdList instance keeps is released if this parameter is true</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.ToString">
            <summary>
            Override the inherited method ToString().
            </summary>
            <returns>Returns a string, which contains all entries of the <see cref="T:Jam.Shell.PathCollection"/> list.</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.OnChanged">
            <summary>
            Fires the Change event.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathCollection.OnChanging">
            <summary>
            Fires the Changing event.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathCollection.AddPath(System.String)">
            <summary>
            Adds the given path to the list of path. It does not fire the Changing and Change event.
            </summary>
            <param name="aPath">The file system path that should be added.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.Add(System.String)">
            <summary>
            Adds the given path to the list of path.
            </summary>
            <param name="item">The file system path that should be added.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.Add(System.Collections.IEnumerable)">
            <summary>
            Add all items of the given enumrable class to the list.
            </summary>
            <param name="eEnum"><b>IEnumerable</b> interface of the items that should be added. The "ToString" method of the implementing objects is interpreted as path.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.Add(System.Collections.Generic.IEnumerable{Jam.Shell.IJamItemIdList})">
            <summary>Adds the paths of the passed ItemIdLists to the list.</summary>
            <param name="pItemIdLists">The ItemIdLists to add.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.Delete(System.Int32)">
            <summary>
            Removes the path with the given index from the list.
            </summary>
            <param name="index">The index of the path that should be removed.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.Remove(System.String)">
            <summary>
            Removes a path from the list.
            </summary>
            <param name="item">The path that should be removed</param>
            <returns><b>true</b> if <paramref name="item"/> was found and removed successfully; otherwise <b>false</b>.</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.PathWasRenamed(System.String,System.String)">
            <summary>
            Call this method to update the collection, e.g. upon path rename.
            </summary>
            <param name="p_OldName">The old name of the item</param>
            <param name="p_NewName">The new name of the item</param>
        </member>
        <member name="T:Jam.Shell.PathCollection.CastEnumerator">
            <summary>Helper class to cast the existing Enumerator.</summary>
        </member>
        <member name="M:Jam.Shell.PathCollection.System#Collections#Generic#IEnumerable{System#String}#GetEnumerator">
            <summary>
            Returns the enumerator for the entire list.
            </summary>
            <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1"/> for the entire list.</returns>
        </member>
        <member name="P:Jam.Shell.PathCollection.Item(System.Int32)">
            <summary>
            Returns a path with a certain index. 
            </summary>
            <param name="index">The index of the path that should be returned.</param>
            <returns>The path with the given index.</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.Objects(System.Int32)">
            <summary>
            Returns the object associated with a path.
            </summary>
            <param name="index">The index of the path for that the associated object should be returned</param>
            <returns>The object associated with this path.</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.Update(System.Int32,System.Object)">
            <summary>
            Updates the object associated with a path.
            </summary>
            <param name="index">The index of the item that should be updated.</param>
            <param name="o">The new object that should be associated with the this item.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.Contains(System.String)">
            <summary>
            Returns true if the given path is in the list
            </summary>
            <param name="item">A file system path</param>
            <returns>true, if the path is contained in the list, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.IndexOf(System.String)">
            <summary>
            Returns the index of the given path.
            </summary>
            <param name="item">The path for that the index should be returned.</param>
            <returns>The index of the path in this collection if the given path was found; -1 otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.Clear">
            <summary>
            Removes all elements from the list
            </summary>
        </member>
        <member name="M:Jam.Shell.PathCollection.Clone">
            <summary>
            Creates a copy of the current PathCollection
            </summary>
            <returns>A PathCollection object with the same elements as the current one</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.CopyTo(System.String[],System.Int32)">
            <summary>
            Copies the elements of the <see cref="T:Jam.Shell.PathCollection"/> to an Array, starting at a particular Array index.
            </summary>
            <param name="array">The one-dimensional Array that is the destination of the elements copied from <see cref="T:Jam.Shell.PathCollection"/>. The Array must have zero-based indexing.</param>
            <param name="arrayIndex">The zero-based index in array at which copying begins.</param>
        </member>
        <member name="M:Jam.Shell.PathCollection.UnifyPath(System.String)">
            <summary>
            Brings the path into a unified format. This makes it easier to eliminate duplicates.
            </summary>
            <param name="aPath">the path that should be formated</param>
            <returns>The given path in a unified format</returns>
        </member>
        <member name="F:Jam.Shell.PathCollection.DOUBLE_SLASH">
            <summary>
            Contains a pair of slashes as it appears at the beginning of UNC paths.
            </summary>
        </member>
        <member name="M:Jam.Shell.PathCollection.IncludeTrailingPathDelimiter(System.String)">
            <summary>
            Makes sure that the given paths end with System.IO.Path.DirectorySeparatorChar.
            </summary>
            <param name="aPath">A directory path</param>
            <returns>The given path with one trailing DirectorySeparatorChar</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.ExcludeTrailingPathDelimiter(System.String)">
            <summary>
            Makes sure that the given paths does not end with System.IO.Path.DirectorySeperatorChar.
            </summary>
            <param name="aPath">A directory path</param>
            <returns>The given path without a trailing DirectorySeperatorChar</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.FileOrFolderExists(System.String)">
            <summary>
            Checks if the given path exists.
            </summary>
            <param name="aPath">A path to a file or directory</param>
            <returns>true, if the given path exists on the current PC, false if it does not exist.</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.IsAbsolutePath(System.String)">
            <summary>
            Determines if the given path is absolute.s
            </summary>
            <param name="pPath">The path to check.</param>
            <returns>true if the path is absolute</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.IsLocalPath(System.String)">
            <summary>
            Checks if the given path is an absolute local path (including mapped network drives), i.e. if it starts with a drive letter and is followed by a colon and a backslash ("c:\")
            </summary>
            <param name="pPath">The path to check.</param>
            <returns>true if the given path is an absolute local path or mapped network drive, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.IsDrive(System.String)">
            <summary>
            Checks if the given path is a drive.
            </summary>
            <param name="pPath">A file system path</param>
            <returns>true, if the given path is a directory like "C:\", flase otherwise</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetLongPath(System.String)">
            <summary>
            A wrapper for ShellApi.GetLongPathName
            </summary>
            <param name="pPath">A file system path that is suspected to be in 8.3 stye (c:\docume~1\filexy~2.txt)</param>
            <returns>The long file name</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.SamePath(System.String,System.String)">
            <summary>
            Checks if two paths are identical
            </summary>
            <param name="path1">A file system path</param>
            <param name="path2">Another file system path</param>
            <returns>true, if both paths are identical, false if they differ</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.IsUNCPath(System.String)">
            <summary>
            Checks if the given path is a UNC path like \\Server\share. It does not check if the path really exists.
            see also http://msdn2.microsoft.com/en-us/library/aa365247.aspx#maximum_path_length
            </summary>
            <param name="aPath">A path that should be checked</param>
            <returns>ture, if the given path is a UNC path, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetDomainFromUNCPath(System.String)">
            <summary>
            Returns the domain name from a UNC path
            </summary>
            <param name="aPath">A UNC path.</param>
            <returns>The domain part of a UNC path. null if the given path is not a UNC path.</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetUNCPathFromMappedDrive(System.String)">
            <summary>
            This method needs the mpr.dll to work. (UNCPath length = max 1024 chars)
            This method should only be used with mapped drives, e.g. for a fixed drive an IOException occurs (Not Connected)
            See <see cref="P:System.IO.DriveInfo.DriveType"/> to determine whether the drive is a network share.
            </summary>
            <param name="filePath">The path to be converted</param>
            <returns>converted path </returns>
            <exception cref="T:System.ArgumentException">If the argument is not a valid path</exception>
            <exception cref="T:System.IO.IOException">If the windows system call fails</exception>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetParentPathFromPath(System.String)">
            <summary>
            Returns the parent path of the given path.
            </summary>
            <param name="aPath">The path of a file or directory.</param>
            <returns>A <see cref="T:System.String"/> containing the parent path for <paramref name="aPath"/>, or a null reference if <paramref name="aPath"/> denotes a root directory.</returns>
            <remarks>The given for directories may or may not include a trailing path delimiter char, it will not have any influence on the result.</remarks>
        </member>
        <member name="M:Jam.Shell.PathCollection.IsSubPathOf(System.String,System.String)">
            <summary>
            Checks if a given path is a parent path of the other given path.
            </summary>
            <param name="p_SuperiorPath">The possible parent (superior) path.</param>
            <param name="p_PossibleSubPath">A path for that should be checked if it is a sub-path of <paramref name="p_SuperiorPath"/>.</param>
            <returns>true if <paramref name="p_SuperiorPath"/> is a prent path of <paramref name="p_PossibleSubPath"/>.</returns>
            <remarks><paramref name="p_SuperiorPath"/> does not necessarily need to ba a direct parent of <paramref name="p_PossibleSubPath"/></remarks>
            <example>
            <para><code>PathCollection.IsSubPathOf(@"C:\", @"C:\Windows\System32")</code> returns <b>true</b>.</para>
            <para><code>PathCollection.IsSubPathOf(@"C:\Temp", @"C:\Windows\System32")</code> returns <b>false</b>.</para>
            </example>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetFolderSize(System.String)">
            <summary>
            Returns the size of a folder, including all files in all subfolders.
            </summary>
            <param name="p_Path">The full path of the folder.</param>
            <returns>The size of the given folder in Bytes.</returns>
            <exception cref="T:System.IO.DirectoryNotFoundException">The path is invalid, such as being on an unmapped drive.</exception>
            <exception cref="T:System.ArgumentNullException"><i>p_Path</i> is a null reference</exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
            <exception cref="T:System.IO.PathTooLongException">The given path contains a subfolder that's fullpath has more than 260 characters.</exception>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetFileSize(System.String)">
            <summary>
            Gets the file size in byte. 
            </summary>
            <param name="path">The path.</param>
            <returns>The file size for the given path in byte. </returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetFiles(System.String)">
            <summary>
            Get files in path given as a parameter
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetFiles(System.String,System.String,System.IO.SearchOption)">
            <summary>
            Get files from path given as a parameter
            </summary>
            <param name="path"></param>
            <param name="searchPattern"></param>
            <param name="searchOption"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetFolderSize(System.String,System.Int32@,System.Int32@)">
            <summary>
            Returns the size of a folder, including all files in all subfolders, and the file count.
            </summary>
            <param name="p_Path">The full path of the folder.</param>
            <param name="p_FileCount">A variable in that the number of files will be returned.</param>
            <param name="p_FolderCount">A variable in that the number of subfolders will be returned.</param>
            <returns>The size of the given folder in Bytes.</returns>
            <exception cref="T:System.IO.DirectoryNotFoundException">The path is invalid, such as being on an unmapped drive.</exception>
            <exception cref="T:System.ArgumentNullException"><i>p_Path</i> is a null reference</exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
            <summary>
            path must include a trailing backslash
            </summary>
            <returns>The size of a folder, including all files in all subfolders, and the file count.</returns>
        </member>
        <member name="M:Jam.Shell.PathCollection.GetFolderSize260(System.String,System.Int32@,System.Int32@)">
            <summary>
            Returns the size of a folder, including all files in all subfolders, and the file count for paths that 
            don't contain folders longer than 260 characters, this is the old implementation that was used in ShellBrowser.Net
            up to and including version 4.0.0.3
            </summary>
            <param name="p_Path">The full path of the folder.</param>
            <param name="p_FileCount">A variable in that the number of files will be returned.</param>
            <param name="p_FolderCount">A variable in that the number of subfolders will be returned.</param>
            <returns>The size of the given folder in Bytes.</returns>
            <exception cref="T:System.IO.DirectoryNotFoundException">The path is invalid, such as being on an unmapped drive.</exception>
            <exception cref="T:System.ArgumentNullException"><i>p_Path</i> is a null reference</exception>
            <exception cref="T:System.Security.SecurityException">The caller does not have the required permission.</exception>
            <summary>
            path must include a trailing backslash
            </summary>
            <returns> Returns the size of a folder, including all files in all subfolders, and the file count for paths.</returns>
        </member>
        <member name="P:Jam.Shell.PathCollection.CheckIfExists">
            <summary>
            If true, paths that do not exist will not be added to the list
            </summary>
        </member>
        <member name="P:Jam.Shell.PathCollection.IsReadOnly">
            <summary>
            Gets a value indicating whether the collection is read-only.
            </summary>
        </member>
        <member name="P:Jam.Shell.PathCollection.AllowDuplicates">
            <summary>
            Gets or sets a value indicating whether to allow duplicate entries in the list.
            </summary>
            <value>
              <c>false</c> (default) if duplicate entries are suppressed; otherwise, <c>true</c>.
            </value>
        </member>
        <member name="E:Jam.Shell.PathCollection.Change">
            <summary>
            This event gets fired after items were added or deleted.
            </summary>
        </member>
        <member name="E:Jam.Shell.PathCollection.Changing">
            <summary>
            This event gets fired before items are added or deleted.
            </summary>
        </member>
        <member name="T:Jam.Shell.SearchFolder">
            <summary>
            Contains results of a search.
            </summary>
        </member>
        <member name="M:Jam.Shell.SearchFolder.#ctor(System.String,Jam.Shell.ItemIdList)">
            <summary>
            Creates a "search folder" with a specified search query and scope and returns this folder as ItemIdList.
            </summary>
            <param name="pQuery">The search expression.</param>
            <param name="pSearchScope">The folder where the search should be started.</param>
            <returns>The search folder.</returns>
            <remarks>Assign result only to variables of type IItemIdList!</remarks>
        </member>
        <member name="P:Jam.Shell.SearchFolder.IsSlow">
            <summary>Gets a value indicating whether this object is slow.</summary>
            <remarks>
            Slow elements are handled specifically, e.g. list items are loaded asynchronously.
            </remarks>
            <value>True if this object is slow, false if not.</value>
        </member>
        <member name="T:Jam.Shell.ShellFolder">
            <summary>
            ShellFolder values provide a unique system-independent way to identify special folders used frequently by applications, but which may not have the same name or location on any given system.
            </summary>
            <remarks>Known folder constants begin with 0x0050</remarks>
        </member>
        <member name="F:Jam.Shell.ShellFolder.AdminTools">
            <summary>
            The file system directory that is used to store administrative tools for an individual user. The Microsoft Management Console (MMC) will save customized consoles to this directory, and it will roam with the user.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.AllTasks">
            <summary>
            The "All Tasks" folder, a collection of control panel tasks. Note that bitness of calling application and OS must match to show control panel items. Ensure application is targeted architecture "Any CPU"!
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.AltStartup">
            <summary>
            The file system directory that corresponds to the user's nonlocalized Startup program group.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.AppData">
            <summary>
            The file system directory that serves as a common repository for application-specific data. A typical path is C:\Documents and Settings\username\Application Data. This CSIDL is supported by the redistributable Shfolder.dll for systems that do not have the Microsoft Internet Explorer 4.0 integrated Shell installed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.AppUpdates">
            <summary>
            The virtual folder containing the installed application updates.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.BitBucket">
            <summary>
            The virtual folder containing the objects in the user's Recycle Bin.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CDBurnArea">
            <summary>
            The file system directory acting as a staging area for files waiting to be written to CD. A typical path is C:\Documents and Settings\username\Local Settings\Application Data\Microsoft\CD Burning.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonAdminTools">
            <summary>
            The file system directory containing administrative tools for all users of the computer.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonAltStartup">
            <summary>
            The file system directory that corresponds to the nonlocalized Startup program group for all users. Valid only for Microsoft Windows NT systems.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonAppData">
            <summary>
            The file system directory containing application data for all users. A typical path is C:\Documents and Settings\All Users\Application Data.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonDesktopDirectory">
            <summary>
            The file system directory that contains files and folders that appear on the desktop for all users. A typical path is C:\Documents and Settings\All Users\Desktop. Valid only for Windows NT systems.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonDocuments">
            <summary>
            The file system directory that contains documents that are common to all users. A typical paths is C:\Documents and Settings\All Users\Documents. Valid for Windows NT systems and Microsoft Windows 95 and Windows 98 systems with Shfolder.dll installed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonFavorites">
            <summary>
            The file system directory that serves as a common repository for favorite items common to all users. Valid only for Windows NT systems.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonMusic">
            <summary>
            The file system directory that serves as a repository for music files common to all users. A typical path is C:\Documents and Settings\All Users\Documents\My Music.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonPictures">
            <summary>
            The file system directory that serves as a repository for image files common to all users. A typical path is C:\Documents and Settings\All Users\Documents\My Pictures.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonPrograms">
            <summary>
            The file system directory that contains the directories for the common program groups that appear on the Start menu for all users. A typical path is C:\Documents and Settings\All Users\Start Menu\Programs. Valid only for Windows NT systems.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonStartmenu">
            <summary>
            The file system directory that contains the programs and folders that appear on the Start menu for all users. A typical path is C:\Documents and Settings\All Users\Start Menu. Valid only for Windows NT systems.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonStartup">
            <summary>
            The file system directory that contains the programs that appear in the Startup folder for all users. A typical path is C:\Documents and Settings\All Users\Start Menu\Programs\Startup. Valid only for Windows NT systems.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonTemplates">
            <summary>
            The file system directory that contains the templates that are available to all users. A typical path is C:\Documents and Settings\All Users\Templates. Valid only for Windows NT systems.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.CommonVideo">
            <summary>
            The file system directory that serves as a repository for video files common to all users. A typical path is C:\Documents and Settings\All Users\Documents\My Videos.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.ComputersNearMe">
            <summary>
            The folder representing other computers in your workgroup.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Connections">
            <summary>
            The virtual folder representing Network Connections, containing network and dial-up connections.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Contacts">
            <summary>
            The virtual folder containing the users contacts.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Controls">
            <summary>
            The virtual folder containing icons for the Control Panel applications.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Cookies">
            <summary>
            The file system directory that serves as a common repository for Internet cookies. A typical path is C:\Documents and Settings\username\Cookies.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Desktop">
            <summary>
            The virtual folder representing the Windows desktop, the root of the namespace.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.DesktopDirectory">
            <summary>
            The file system directory used to physically store file objects on the desktop (not to be confused with the desktop folder itself). A typical path is C:\Documents and Settings\username\Desktop.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Documents">
            <summary>
            The users documents folder. Equivalent to Personal
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.DocumentsLibrary">
            <summary>
            The documents library.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Downloads">
            <summary>
            The downloads folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Drives">
            <summary>
            The virtual folder representing This PC (My Computer), containing everything on the local computer: storage devices, printers, and Control Panel. The folder may also contain mapped network drives.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Favorites">
            <summary>
            The file system directory that serves as a common repository for the user's favorite items. A typical path is C:\Documents and Settings\username\Favorites.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Fonts">
            <summary>
            A virtual folder containing fonts. A typical path is C:\Windows\Fonts.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Games">
            <summary>
            The games folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.History">
            <summary>
            The file system directory that serves as a common repository for Internet history items.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Homegroup">
            <summary>
            The home group, only on Windows 7 and later.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Internet">
            <summary>
            A virtual folder for Internet Explorer (icon on desktop).
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.InternetCache">
            <summary>
            The file system directory that serves as a common repository for temporary Internet files. A typical path is C:\Documents and Settings\username\Local Settings\Temporary Internet Files.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Libraries">
            <summary>
            The libraries folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Links">
            <summary>
            The folder %USERPROFILE%\Links.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.LocalAppData">
            <summary>
            The file system directory that serves as a data repository for local (nonroaming) applications. A typical path is C:\Documents and Settings\username\Local Settings\Application Data.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.LocalAppDataLow">
            <summary>
            The LocalLow folder of the users appdata - %USERPROFILE%\AppData\LocalLow. 
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.MusicLibrary">
            <summary>
            The music library.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.MyMusic">
            <summary>
            The file system directory that serves as a common repository for music files. A typical path is C:\Documents and Settings\User\My Documents\My Music.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.MyPictures">
            <summary>
            The file system directory that serves as a common repository for image files. A typical path is C:\Documents and Settings\username\My Documents\My Pictures.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.MyVideo">
            <summary>
            The file system directory that serves as a common repository for video files. A typical path is C:\Documents and Settings\username\My Documents\My Videos.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Nethood">
            <summary>
            A file system directory containing the link objects that may exist in the My Network Places virtual folder. It is not the same as CSIDL_NETWORK, which represents the network namespace root. A typical path is C:\Documents and Settings\username\NetHood.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Network">
            <summary>
            A virtual folder representing Network Neighborhood, the root of the network namespace hierarchy.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.OneDrive">
            <summary>The OneDrive folder.</summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Personal">
            <summary>
            The file system directory used to physically store a user's common repository of documents. A typical path is C:\Documents and Settings\username\My Documents. This should be distinguished from the virtual My Documents folder in the namespace.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.PicturesLibrary">
            <summary>
            The pictures library.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Printers">
            <summary>
            The virtual folder containing installed printers.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Printhood">
            <summary>
            The file system directory that contains the link objects that can exist in the Printers virtual folder. A typical path is C:\Documents and Settings\username\PrintHood.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Profile">
            <summary>
            The user's profile folder. A typical path is C:\Documents and Settings\username. Applications should not create files or folders at this level; they should put their data under the locations referred to by <see cref="F:Jam.Shell.ShellFolder.AppData"/> or <see cref="F:Jam.Shell.ShellFolder.LocalAppData"/>.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.ProgramFiles">
            <summary>
            The Program Files folder. A typical path is C:\Program Files.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.ProgramFilesCommon">
            <summary>
            A folder for components that are shared across applications. A typical path is C:\Program Files\Common. Valid only for Windows NT, Windows 2000, and Windows XP systems. Not valid for Windows Millennium Edition (Windows Me).
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.ProgramFilesCommonX64">
            <summary>
            This value is not supported on 32-bit operating systems. It also is not supported for 32-bit applications running on 64-bit operating systems. Attempting to use it in either situation results in an error.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.ProgramFilesCommonX86">
            <summary>
            A folder for components that are shared across applications. A typical path is C:\Program Files\Common. Valid only for Windows NT, Windows 2000, and Windows XP systems. Not valid for Windows Millennium Edition (Windows Me).
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.ProgramFilesX64">
            <summary>
            This value is not supported on 32-bit operating systems. It also is not supported for 32-bit applications running on 64-bit operating systems. Attempting to use it in either situation results in an error.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.ProgramFilesX86">
            <summary>
            The Program Files folder. A typical path is C:\Program Files.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Programs">
            <summary>
            The file system directory that contains the user's program groups (which are themselves file system directories). A typical path is C:\Documents and Settings\username\Start Menu\Programs. 
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Public">
            <summary>
            The %PUBLIC% folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.PublicDownloads">
            <summary>
            The public downloads folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.PublicLibraries">
            <summary>
            The public libraries folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.QuickLaunch">
            <summary>
            The folder containing the quicklaunch links.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.QuickAccess">
            <summary>The Quick Access folder in Windows 10.</summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Recent">
            <summary>
            The file system directory that contains shortcuts to the user's most recently used documents. A typical path is C:\Documents and Settings\username\My Recent Documents.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Resources">
            <summary>
            Windows Vista. The file system directory that contains resource data. A typical path is C:\Windows\Resources.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.SavedGames">
            <summary>
            The folder containing the savegames.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.SavedSearches">
            <summary>
            The folder containing saved searches.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.SendTo">
            <summary>
            The file system directory that contains Send To menu items. A typical path is C:\Documents and Settings\username\SendTo.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Startmenu">
            <summary>
            The file system directory containing Start menu items. A typical path is C:\Documents and Settings\username\Start Menu.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Startup">
            <summary>
            The file system directory that corresponds to the user's Startup program group. The system starts these programs whenever any user logs onto Windows NT or starts Windows 95. A typical path is C:\Documents and Settings\username\Start Menu\Programs\Startup.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.System">
            <summary>
            The Windows System folder. A typical path is C:\Windows\System32.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.SystemX86">
            <summary>
            The Windows System folder. A typical path is C:\Windows\System32.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Templates">
            <summary>
            The file system directory that serves as a common repository for document templates. A typical path is C:\Documents and Settings\username\Templates.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.UserProfiles">
            <summary>
            The folder containing the users profiles.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.UsersFiles">
            <summary>
            The folder containing the users files.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.VideosLibrary">
            <summary>
            The videos library.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Windows">
            <summary>
            The Windows directory or SYSROOT. This corresponds to the %windir% or %SYSTEMROOT% environment variables. A typical path is C:\Windows.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.FileSystemFolder">
            <summary>
            A file system folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Invalid">
            <summary>
            Invalid special folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellFolder.Unknown">
            <summary>
            Unknown special folder.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellAutoComplete">
            <summary>
            The autocompletion mode the PathEdit and ComboBox control are using. These are flags, that can be or'ed together. 
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellAutoComplete.Disabled">
            <summary>
            No shell auto completion. Simple DropDown behavior.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellAutoComplete.FileSystem">
            <summary>
            Shell auto completion of filesystem items that are proposed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellAutoComplete.Url">
            <summary>
            Shell auto completion of url *and* UNC-path items which where cached by the system.
            </summary>
        </member>
        <member name="T:Jam.Shell.FolderFlags">
            <summary>
            The folder flags are used to specify how the control displays its content.
            Most of these flags can be or'ed together.
            http://msdn.microsoft.com/en-us/library/bb762508(VS.85).aspx
            </summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.None">
            <summary> 0x00000000. Windows 7 and later. No special view options. </summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.AutoArrange">
            <summary>Automatically arrange the elements in the view. This implies LVS_AUTOARRANGE if the list view control is used to implement the view.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.AbbreviatedNames">
            <summary>Abbreviate names. This flag is not currently supported.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.SnapToGrid">
            <summary>Arrange items on a grid. This flag is not currently supported.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.OwnerData">
            <summary></summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.BestFitWindow">
            <summary>This flag is currently not supported.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.Desktop">
            <summary>Enable the best-fit window mode. Let the view size the window so that its contents fit inside the view window in the best possible manner.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.SingleSelection">
            <summary>Do not allow more than a single item to be selected. This is used in the common dialog boxes.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoSubFolders">
            <summary>Do not show subfolders.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.Transparent">
            <summary>Draw transparently. This is used only for the desktop.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoClientEdge">
            <summary>This flag is currently not supported.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoScroll">
            <summary>Do not add scroll bars. This is used only for the desktop.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.AlignLeft">
            <summary>The view should be left-aligned. This implies LVS_ALIGNLEFT if the list view control is used to implement the view.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoIcons">
            <summary>The view should not display icons.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.ShowSelectionAlways">
            <summary>Always show the selection.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoVisible">
            <summary>This flag is currently not supported.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.SingleClickActivate">
            <summary>This flag is currently not supported.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoWebView">
            <summary>The view should not be shown as a Web view.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.HideFilenames">
            <summary>The view should not display file names.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.CheckSelect">
            <summary>Turns on the check mode for the view.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoEnumRefresh">
            <summary>Windows Vista and later: Do not re-enumerate the view (or drop the current contents of the view) when the view is refreshed.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoGrouping">
            <summary>Windows Vista and later: Do not allow grouping in the view</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.FullRowSelect">
            <summary>Windows Vista and later: When an item is selected, the item and all its sub-items are highlighted.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoFilters">
            <summary>Windows Vista and later: Do not display filters in the view.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoColumnHeader">
            <summary>Windows Vista and later: Do not display a column header in the view in any view mode.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoHeaderInAllViews">
            <summary>Windows Vista and later: Only show the column header in details view mode.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.ExtendedTiles">
            <summary>Windows Vista and later: When the view is in "tile view mode" the layout of a single item should be extended to the width of the view.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.TriCheckSelect">
            <summary>Windows Vista and later: Check boxes have 3 modes: unchecked, SVSI_CHECK, SVSI_CHECK2.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.AutoCheckSelect">
            <summary>Windows Vista and later: Items can be selected using checkboxes.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.NoBrowserViewState">
            <summary>Windows Vista and later: The view should not save view state in the browser.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.SubsetGrouops">
            <summary>Windows Vista and later: The view should list the number of items displayed in each group. To be used with IFolderView2::SetGroupSubsetCount.</summary>
        </member>
        <member name="F:Jam.Shell.FolderFlags.UseSearchFolder">
            <summary>Windows Vista and later: Use the search folder for stacking and searching.</summary>
        </member>
        <member name="F:Jam.Shell.HResult.Ok">
            <summary>     
            S_OK          
            </summary>    
        </member>
        <member name="F:Jam.Shell.HResult.False">
            <summary>
            S_FALSE
            </summary>        
        </member>
        <member name="F:Jam.Shell.HResult.InvalidArguments">
            <summary>
            E_INVALIDARG
            </summary>
        </member>
        <member name="F:Jam.Shell.HResult.OutOfMemory">
            <summary>
            E_OUTOFMEMORY
            </summary>
        </member>
        <member name="F:Jam.Shell.HResult.NotImplemented">
            <summary>
            E_NOTIMPL
            </summary>
        </member>
        <member name="F:Jam.Shell.HResult.NoInterface">
            <summary>
            E_NOINTERFACE
            </summary>
        </member>
        <member name="F:Jam.Shell.HResult.Fail">
            <summary>
            E_FAIL
            </summary>
        </member>
        <member name="F:Jam.Shell.HResult.ElementNotFound">
            <summary>
            E_ELEMENTNOTFOUND
            </summary>
        </member>
        <member name="F:Jam.Shell.HResult.TypeElementNotFound">
            <summary>
            TYPE_E_ELEMENTNOTFOUND
            </summary>
        </member>
        <member name="F:Jam.Shell.HResult.NoObject">
            <summary>
            NO_OBJECT
            </summary>
        </member>
        <member name="F:Jam.Shell.HResult.Win32ErrorCanceled">
            <summary>
            Win32 Error code: ERROR_CANCELLED
            </summary>
        </member>
        <member name="F:Jam.Shell.HResult.Canceled">
            <summary>
            ERROR_CANCELLED
            </summary>
        </member>
        <member name="F:Jam.Shell.HResult.ResourceInUse">
            <summary>
            The requested resource is in use
            </summary>
        </member>
        <member name="F:Jam.Shell.HResult.AccessDenied">
            <summary>
            The requested resources is read-only.
            </summary>
        </member>
        <member name="T:Jam.Shell.LibraryFolderFilter">
            <summary>
            Defines options for filtering folder items.
            </summary>
        </member>
        <member name="F:Jam.Shell.LibraryFolderFilter.LFF_FORCEFILESYSTEM">
            <summary>
            Return only file system items.
            </summary>
        </member>
        <member name="F:Jam.Shell.LibraryFolderFilter.LFF_STORAGEITEMS">
            <summary>
            Return items that can be bound to an IStorage object. 
            </summary>
        </member>
        <member name="F:Jam.Shell.LibraryFolderFilter.LFF_ALLITEMS">
            <summary>
            Return all items. 
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_READ">
            <summary>
            Indicates that the object is read-only, meaning that modifications cannot be made. 
            For example, if a stream object is opened with STGM_READ, the ISequentialStream::Read method 
                may be called, but the ISequentialStream::Write method may not. 
            Similarly, if a storage object opened with STGM_READ, the IStorage::OpenStream and 
                IStorage::OpenStorage methods may be called, but the IStorage::CreateStream and 
                IStorage::CreateStorage methods may not.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_WRITE">
            <summary>
            Enables you to save changes to the object, but does not permit access to its data. 
            The provided implementations of the IPropertyStorage and IPropertySetStorage interfaces 
                do not support this write-only mode.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_READWRITE">
            <summary>
            Enables access and modification of object data. 
            For example, if a stream object is created or opened in this mode, it is possible 
                to call both IStream::Read and IStream::Write. 
            Be aware that this constant is not a simple binary OR operation of the STGM_WRITE and 
                STGM_READ elements.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_SHARE_DENY_NONE">
            <summary>
            Specifies that subsequent openings of the object are not denied read or write access. 
            If no flag from the sharing group is specified, this flag is assumed.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_SHARE_DENY_READ">
            <summary>
            Prevents others from subsequently opening the object in STGM_READ mode. 
            It is typically used on a root storage object.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_SHARE_DENY_WRITE">
            <summary>
            Prevents others from subsequently opening the object for STGM_WRITE or STGM_READWRITE access. 
            In transacted mode, sharing of STGM_SHARE_DENY_WRITE or STGM_SHARE_EXCLUSIVE can 
                significantly improve performance because they do not require snapshots. 
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_SHARE_EXCLUSIVE">
            <summary>
            Prevents others from subsequently opening the object in any mode. 
            Be aware that this value is not a simple bitwise OR operation of the STGM_SHARE_DENY_READ 
                and STGM_SHARE_DENY_WRITE values. 
            In transacted mode, sharing of STGM_SHARE_DENY_WRITE or STGM_SHARE_EXCLUSIVE can 
                significantly improve performance because they do not require snapshots.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_PRIORITY">
            <summary>
            Opens the storage object with exclusive access to the most recently committed version. 
            Thus, other users cannot commit changes to the object while you have it open in priority mode. 
            You gain performance benefits for copy operations, but you prevent others from committing changes. 
            Limit the time that objects are open in priority mode. 
            You must specify STGM_DIRECT and STGM_READ with priority mode, and you 
                cannot specify STGM_DELETEONRELEASE. 
            STGM_DELETEONRELEASE is only valid when creating a root object, such as with StgCreateStorageEx. 
            It is not valid when opening an existing root object, such as with StgOpenStorageEx. 
            It is also not valid when creating or opening a subelement, such as with IStorage::OpenStorage.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_CREATE">
            <summary>
            Indicates that an existing storage object or stream should be removed before the new object replaces it. 
            A new object is created when this flag is specified only if the existing object has been successfully removed.
            This flag is used when attempting to create:
            <para>
                A storage object on a disk, but a file of that name exists. 
                An object inside a storage object, but a object with the specified name exists. 
                A byte array object, but one with the specified name exists. 
            </para>
            This flag cannot be used with open operations, such as StgOpenStorageEx or IStorage::OpenStream.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_CONVERT">
            <summary>
            Creates the new object while preserving existing data in a stream named "Contents". In the case of a storage object or a byte array, the old data is formatted into a stream regardless of whether the existing file or byte array currently contains a layered storage object. This flag can only be used when creating a root storage object. It cannot be used within a storage object; for example, in IStorage::CreateStream. It is also not valid to use this flag and the STGM_DELETEONRELEASE flag simultaneously.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_FAILIFTHERE">
            <summary>
            Causes the create operation to fail if an existing object with the specified name exists. In this case, STG_E_FILEALREADYEXISTS is returned. This is the default creation mode; that is, if no other create flag is specified, STGM_FAILIFTHERE is implied.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_DIRECT">
            <summary>
            Indicates that, in direct mode, each change to a storage or stream element is written as it occurs. This is the default if neither STGM_DIRECT nor STGM_TRANSACTED is specified.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_TRANSACTED">
            <summary>
            Indicates that, in transacted mode, changes are buffered and written only if an explicit commit operation is called. To ignore the changes, call the Revert method in the IStream, IStorage, or IPropertyStorage interface. The COM compound file implementation of IStorage does not support transacted streams, which means that streams can be opened only in direct mode, and you cannot revert changes to them, however transacted storages are supported. The compound file, stand-alone, and NTFS file system implementations of IPropertySetStorage similarly do not support transacted, simple property sets because these property sets are stored in streams. However, transactioning of nonsimple property sets, which can be created by specifying the PROPSETFLAG_NONSIMPLE flag in the grfFlags parameter of IPropertySetStorage::Create, are supported.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_NOSCRATCH">
            <summary>
            Indicates that, in transacted mode, a temporary scratch file is usually used to save modifications until the Commit method is called. Specifying STGM_NOSCRATCH permits the unused portion of the original file to be used as work space instead of creating a new file for that purpose. This does not affect the data in the original file, and in certain cases can result in improved performance. It is not valid to specify this flag without also specifying STGM_TRANSACTED, and this flag may only be used in a root open. For more information about NoScratch mode, see the Remarks section.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_NOSNAPSHOT">
            <summary>
            This flag is used when opening a storage object with STGM_TRANSACTED and without STGM_SHARE_EXCLUSIVE or STGM_SHARE_DENY_WRITE. In this case, specifying STGM_NOSNAPSHOT prevents the system-provided implementation from creating a snapshot copy of the file. Instead, changes to the file are written to the end of the file. Unused space is not reclaimed unless consolidation is performed during the commit, and there is only one current writer on the file. When the file is opened in no snapshot mode, another open operation cannot be performed without specifying STGM_NOSNAPSHOT. This flag may only be used in a root open operation. For more information about NoSnapshot mode, see the Remarks section.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_SIMPLE">
            <summary>
            Provides a faster implementation of a compound file in a limited, but frequently used, case. For more information, see the Remarks section.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_DIRECT_SWMR">
            <summary>
            Supports direct mode for single-writer, multireader file operations. For more information, see the Remarks section.
            </summary>
        </member>
        <member name="F:Jam.Shell.STGM_ACCESS.STGM_DELETEONRELEASE">
            <summary>
            Indicates that the underlying file is to be automatically destroyed when the root storage object is released. This feature is most useful for creating temporary files. This flag can only be used when creating a root object, such as with StgCreateStorageEx. It is not valid when opening a root object, such as with StgOpenStorageEx, or when creating or opening a subelement, such as with IStorage::CreateStream. It is also not valid to use this flag and the STGM_CONVERT flag simultaneously.
            </summary>
        </member>
        <member name="T:Jam.Shell.WTS_ALPHATYPE">
            <summary>
            Indicates whether a bitmap has an alpha channel.
            </summary>
        </member>
        <member name="F:Jam.Shell.WTS_ALPHATYPE.WTSAT_UNKNOWN">
            <summary>
            The bitmap is an unknown format. The Shell tries nonetheless to detect whether the image has an alpha channel.
            </summary>
        </member>
        <member name="F:Jam.Shell.WTS_ALPHATYPE.WTSAT_RGB">
            <summary>
            The bitmap is an RGB image without alpha. The alpha channel is invalid and the Shell ignores it.
            </summary>
        </member>
        <member name="F:Jam.Shell.WTS_ALPHATYPE.WTSAT_ARGB">
            <summary>
            The bitmap is an ARGB image with a valid alpha channel.
            </summary>
        </member>
        <member name="T:Jam.Shell.IconSize">
            <summary>
            Default Windows Icon sizes for the different ViewModes.
            </summary>
            <remarks>No official collection</remarks>
        </member>
        <member name="F:Jam.Shell.IconSize.Small">
            <summary>
            Default size for FolderViewMode.SmallIcon
            </summary>
        </member>
        <member name="F:Jam.Shell.IconSize.Medium">
            <summary>
            Default size for FolderViewMode.Icon
            </summary>
        </member>
        <member name="F:Jam.Shell.IconSize.Thumbnail">
            <summary>
            Default size for FolderViewMode.Thumbnail
            </summary>
        </member>
        <member name="F:Jam.Shell.IconSize.Jumbo">
            <summary>
            Default size for Extralarge Icons
            </summary>
        </member>
        <member name="M:Jam.Shell.IShellFolder2.GetDetailsEx(System.IntPtr,Jam.Shell.SHCOLUMNID@,System.Object@)">
            <summary>
            Gets detailed information, identified by a property set identifier (FMTID) and a property identifier (PID), on an item in a Shell folder.
            </summary>
            <param name="pidl">A PIDL of the item, relative to the parent folder. This method accepts only single-level PIDLs. 
            The structure must contain exactly one SHITEMID structure followed by a terminating zero. This value cannot be NULL.</param>
            <param name="pscid">A pointer to an SHCOLUMNID structure that identifies the column.</param>
            <param name="pv">A pointer to a VARIANT with the requested information. The value is fully typed. 
            The value returned for properties from the property system must conform to the type specified in that property definition's typeInfo  as the legacyType attribute.</param>
            <returns>If the method succeeds, it returns S_OK. Otherwise, it returns an HRESULT  error code.</returns>
        </member>
        <member name="T:Jam.Shell.IShellItemNative">
            <summary>
            The IShellItem interface of the win32 com object,
            since we already define a "IShellItem" interface,
            this one is called IShellItemNative.
            This interface is available in Windows XP and later.
            </summary>
        </member>
        <member name="T:Jam.Shell.PropVariant">
            <summary>This is a basic structure for a PropVariant type frequently used  in the PropertySystem. It solely serves the purpose of marshaling. </summary>
        </member>
        <member name="T:Jam.Shell.IPropertyStore">
            <summary>
            A property store
            </summary>
        </member>
        <member name="M:Jam.Shell.IPropertyStore.GetCount(System.UInt32@)">
            <summary>
            Gets the number of properties contained in the property store.
            </summary>
            <param name="propertyCount"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IPropertyStore.GetAt(System.UInt32,Jam.Shell.SHCOLUMNID@)">
            <summary>
            Get a property key located at a specific index.
            </summary>
            <param name="propertyIndex"></param>
            <param name="key"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IPropertyStore.GetValue(Jam.Shell.SHCOLUMNID@,Jam.Shell.PropVariant)">
            <summary>
            Gets the value of a property from the store
            </summary>
            <param name="key"></param>
            <param name="pv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IPropertyStore.SetValue(Jam.Shell.SHCOLUMNID@,Jam.Shell.PropVariant)">
            <summary>
            Sets the value of a property in the store
            </summary>
            <param name="key"></param>
            <param name="pv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IPropertyStore.Commit">
            <summary>
            Commits the changes.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.IThumbnailHandlerFactory">
            <summary>
            QueryInterface on IShellFolder, ie. cast it.
            </summary>
        </member>
        <member name="M:Jam.Shell.IThumbnailHandlerFactory.GetThumbnailHandler(System.IntPtr,System.IntPtr,System.Guid@,System.Object@)">
            <summary>
            Create a thumbnail handler
            </summary>
            <param name="pidlChild">relative itemidlist</param>
            <param name="iBindCtx">http://msdn.microsoft.com/en-us/library/ms678542(VS.85).aspx</param>
            <param name="riid">IID_IThumbnailProvider or IID_IExtractImage</param>
            <param name="ppv">Instance of a COM object</param>
            <returns>hresult</returns>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.GetPath(System.Text.StringBuilder,System.Int32,System.IntPtr,System.Int32)">
            <summary>Retrieves the path and file name of a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.GetIDList(System.IntPtr@)">
            <summary>Retrieves the list of item identifiers for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.SetIDList(System.IntPtr)">
            <summary>Sets the pointer to an item identifier list (PIDL) for a Shell link object.</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.GetDescription(System.Text.StringBuilder,System.Int32)">
            <summary>Retrieves the description string for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.SetDescription(System.String)">
            <summary>Sets the description for a Shell link object. The description can be any application-defined string</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.GetWorkingDirectory(System.Text.StringBuilder,System.Int32)">
            <summary>Retrieves the name of the working directory for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.SetWorkingDirectory(System.String)">
            <summary>Sets the name of the working directory for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.GetArguments(System.Text.StringBuilder,System.Int32)">
            <summary>Retrieves the command-line arguments associated with a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.SetArguments(System.String)">
            <summary>Sets the command-line arguments for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.GetHotkey(System.Int16@)">
            <summary>Retrieves the hot key for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.SetHotkey(System.Int16)">
            <summary>Sets a hot key for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.GetShowCmd(System.Int32@)">
            <summary>Retrieves the show command for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.SetShowCmd(System.Int32)">
            <summary>Sets the show command for a Shell link object. The show command sets the initial show state of the window.</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.GetIconLocation(System.Text.StringBuilder,System.Int32,System.Int32@)">
            <summary>Retrieves the location (path and index) of the icon for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.SetIconLocation(System.String,System.Int32)">
            <summary>Sets the location (path and index) of the icon for a Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.SetRelativePath(System.String,System.Int32)">
            <summary>Sets the relative path to the Shell link object</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.Resolve(System.IntPtr,System.Int32)">
            <summary>Attempts to find the target of a Shell link, even if it has been moved or renamed</summary>
        </member>
        <member name="M:Jam.Shell.IShellLinkW.SetPath(System.String)">
            <summary>Sets the path and file name of a Shell link object</summary>
        </member>
        <member name="T:Jam.Shell.BIND_OPTS">
            <summary>
            Stores the parameters that are used during a moniker binding operation.
            </summary>
        </member>
        <member name="F:Jam.Shell.BIND_OPTS.cbStruct">
            <summary>
            Specifies the size, in bytes, of the BIND_OPTS structure.
            </summary>
        </member>
        <member name="F:Jam.Shell.BIND_OPTS.grfFlags">
            <summary>
            Controls aspects of moniker binding operations.
            </summary>
        </member>
        <member name="F:Jam.Shell.BIND_OPTS.grfMode">
            <summary>
            Represents flags that should be used when opening the file that contains the object identified by the moniker.
            </summary>
        </member>
        <member name="F:Jam.Shell.BIND_OPTS.dwTickCountDeadline">
            <summary>
            Indicates the amount of time (clock time in milliseconds, as returned by the GetTickCount function) that the caller specified to complete the binding operation.
            </summary>
        </member>
        <member name="T:Jam.Shell.IBindCtx">
            <summary>
            Provides the managed definition of the IBindCtx interface.
            </summary>
        </member>
        <member name="M:Jam.Shell.IBindCtx.RegisterObjectBound(System.Object)">
            <summary>
            Registers the passed object as one of the objects that has been bound during a moniker operation and that should be released when the operation is complete.
            </summary>
            <param name="punk">The object to register for release. </param>
        </member>
        <member name="M:Jam.Shell.IBindCtx.RevokeObjectBound(System.Object)">
            <summary>
            Removes the object from the set of registered objects that need to be released.
            </summary>
            <param name="punk">The object to unregister for release. </param>
        </member>
        <member name="M:Jam.Shell.IBindCtx.ReleaseBoundObjects">
            <summary>
            Releases all the objects currently registered with the bind context by using the <see cref="M:System.Runtime.InteropServices.ComTypes.IBindCtx.RegisterObjectBound(System.Object)"/> method.
            </summary>
        </member>
        <member name="M:Jam.Shell.IBindCtx.SetBindOptions(Jam.Shell.BIND_OPTS@)">
            <summary>
            Stores a block of parameters in the bind context. These parameters will apply to later UCOMIMoniker operations that use this bind context.
            </summary>
            <param name="pbindopts">The structure containing the binding options to set. </param>
        </member>
        <member name="M:Jam.Shell.IBindCtx.GetBindOptions(Jam.Shell.BIND_OPTS@)">
            <summary>
            Returns the current binding options stored in the current bind context.
            </summary>
            <param name="pbindopts">A pointer to the structure to receive the binding options. </param>
        </member>
        <member name="M:Jam.Shell.IBindCtx.GetRunningObjectTable(System.Runtime.InteropServices.ComTypes.IRunningObjectTable@)">
            <summary>
            Returns access to the Running Object Table (ROT) relevant to this binding process.
            </summary>
            <param name="pprot">When this method returns, contains a reference to the Running Object Table (ROT). This parameter is passed uninitialized.</param>
        </member>
        <member name="M:Jam.Shell.IBindCtx.RegisterObjectParam(System.String,System.Object)">
            <summary>
            Registers the specified object pointer under the specified name in the internally maintained table of object pointers.
            </summary>
            <param name="pszKey">The name to register <paramref name="punk"/> with. </param><param name="punk">The object to register. </param>
        </member>
        <member name="M:Jam.Shell.IBindCtx.GetObjectParam(System.String,System.Object@)">
            <summary>
            Looks up the given key in the internally maintained table of contextual object parameters and returns the corresponding object, if one exists.
            </summary>
            <param name="pszKey">The name of the object to search for. </param><param name="ppunk">When this method returns, contains the object interface pointer. This parameter is passed uninitialized.</param>
        </member>
        <member name="M:Jam.Shell.IBindCtx.EnumObjectParam(System.Runtime.InteropServices.ComTypes.IEnumString@)">
            <summary>
            Enumerates the strings that are the keys of the internally maintained table of contextual object parameters.
            </summary>
            <param name="ppenum">When this method returns, contains a reference to the object parameter enumerator. This parameter is passed uninitialized.</param>
        </member>
        <member name="M:Jam.Shell.IBindCtx.RevokeObjectParam(System.String)">
            <summary>
            Revokes the registration of the object currently found under the specified key in the internally maintained table of contextual object parameters, if that key is currently registered.
            </summary>
            
            <returns>
            An S_OKHRESULT value if the specified key was successfully removed from the table; otherwise, an S_FALSEHRESULT value.
            </returns>
            <param name="pszKey">The key to unregister. </param>
        </member>
        <member name="T:Jam.Shell.IRelationship">
            <summary>
              The IRelationship interface https://msdn.microsoft.com/de-de/library/windows/desktop/bb231339
            </summary>
        </member>
        <member name="M:Jam.Shell.IRelationship.Name(System.String@)">
            <summary>
            </summary>
            <param name="ppszName"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IRelationship.IsReal(System.Boolean@)">
            <summary>
            </summary>
            <param name="pIsReal"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IRelationship.Destination(Jam.Shell.IEntity@)">
            <summary>
            </summary>
            <param name="pDestinationEntity"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IRelationship.MetaData(System.Guid@,Jam.Shell.IMetaData[]@)">
            <summary>
            </summary>
            <param name="riid"></param>
            <param name="pMetaData"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IRelationship.DefaultPhrase(System.String@)">
            <summary>
            </summary>
            <param name="ppszPhrase"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.IMetaData">
            <summary>
              The IMetaData interface https://msdn.microsoft.com/de-de/library/windows/desktop/bb231366
            </summary>
        </member>
        <member name="M:Jam.Shell.IMetaData.GetData(System.String@,System.String@)">
            <summary>
            </summary>
            <param name="ppszKey"></param>
            <param name="ppszValue"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.INamedEntity">
            <summary>
              The INamedEntity interface https://msdn.microsoft.com/de-de/library/windows/desktop/bb231364
            </summary>
        </member>
        <member name="M:Jam.Shell.INamedEntity.GetValue(System.String@)">
            <summary>
            </summary>
            <param name="ppszValue"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.INamedEntity.DefaultPhrase(System.String@)">
            <summary>
            </summary>
            <param name="ppszPhrase"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.IEntity">
            <summary>
              The IEntity interface https://msdn.microsoft.com/de-de/library/windows/desktop/bb231373
            </summary>
        </member>
        <member name="M:Jam.Shell.IEntity.Name(System.String@)">
            <summary>
            </summary>
            <param name="ppszName"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IEntity.Base(Jam.Shell.IEntity@)">
            <summary>
            </summary>
            <param name="pBaseEntity"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IEntity.Relationships(System.Guid@,Jam.Shell.IRelationship[]@)">
            <summary>
            </summary>
            <param name="riid"></param>
            <param name="pRelationships"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IEntity.MetaData(System.Guid@,Jam.Shell.IMetaData[]@)">
            <summary>
            </summary>
            <param name="riid"></param>
            <param name="pMetaData"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IEntity.NamedEntities(System.Guid@,Jam.Shell.INamedEntity[]@)">
            <summary>
            </summary>
            <param name="riid"></param>
            <param name="pNamedEntities"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IEntity.GetNamedEntity(System.String,Jam.Shell.INamedEntity@)">
            <summary>
            </summary>
            <param name="pszValue"></param>
            <param name="ppNamedEntity"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IEntity.GetRelationship(System.String,Jam.Shell.IRelationship@)">
            <summary>
            </summary>
            <param name="pszRelationName"></param>
            <param name="pRelationship"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IEntity.DefaultPhrase(System.String@)">
            <summary>
            </summary>
            <param name="ppszPhrase"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.IPersistStream">
            <summary>
              The IPersistStream interface https://msdn.microsoft.com/de-de/library/windows/desktop/ms690091(v=vs.85).aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.IPersistStream.GetClassID(System.Guid@)">
            <summary>
              Retrieves the class identifier (CLSID) of an object.
            </summary>
            <param name="pClassID">When this method returns, contains a reference to the CLSID. This parameter is passed uninitialized.</param>
        </member>
        <member name="M:Jam.Shell.IPersistStream.IsDirty">
            <summary>
              Checks an object for changes since it was last saved to its current file.
            </summary>
            <returns>S_OK if the file has changed since it was last saved; S_FALSE if the file has not changed since it was last saved.</returns>   
        </member>
        <member name="M:Jam.Shell.IPersistStream.Load(System.Runtime.InteropServices.ComTypes.IStream)">
            <summary>
            </summary>
            <param name="stm"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IPersistStream.Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)">
            <summary>
            </summary>
            <param name="stm"></param>
            <param name="fRemember"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IPersistStream.GetSizeMax(System.UInt64@)">
            <summary>
            </summary>
            <param name="cbSize"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.ICondition">
            <summary>
              The ICondition interface https://msdn.microsoft.com/en-us/library/windows/desktop/bb231395(v=vs.85).aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.ICondition.GetClassID(System.Guid@)">
            <summary>
              Retrieves the class identifier (CLSID) of an object.
            </summary>
            <param name="pClassID">When this method returns, contains a reference to the CLSID. This parameter is passed uninitialized.</param>
        </member>
        <member name="M:Jam.Shell.ICondition.IsDirty">
            <summary>
              Checks an object for changes since it was last saved to its current file.
            </summary>
            <returns>S_OK if the file has changed since it was last saved; S_FALSE if the file has not changed since it was last saved.</returns>
        </member>
        <member name="M:Jam.Shell.ICondition.Load(System.Runtime.InteropServices.ComTypes.IStream)">
            <summary>
            </summary>
            <param name="stm"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ICondition.Save(System.Runtime.InteropServices.ComTypes.IStream,System.Boolean)">
            <summary> 
            </summary>
            <param name="stm"></param>
            <param name="fRemember"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ICondition.GetSizeMax(System.UInt64@)">
            <summary>
            </summary>
            <param name="cbSize"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ICondition.GetConditionType(System.Int32@)">
            <summary>
            </summary>
            <param name="pNodeType"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ICondition.GetSubConditions(System.Guid@,System.Object@)">
            <summary>
            </summary>
            <param name="riid"></param>
            <param name="ppv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ICondition.GetComparisonInfo(System.String@,System.Int32@,Jam.Shell.PropVariant)">
            <summary>
            </summary>
            <param name="ppszPropertyName"></param>
            <param name="pcop"></param>
            <param name="ppropvar"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ICondition.GetValueType(System.String@)">
            <summary>
            </summary>
            <param name="ppszValueTypeName"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ICondition.GetValueNormalization(System.String@)">
            <summary>
            </summary>
            <param name="ppszNormalization"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ICondition.GetInputTerms(Jam.Shell.IRichChunk@,Jam.Shell.IRichChunk@,Jam.Shell.IRichChunk@)">
            <summary>
            </summary>
            <param name="ppPropertyTerm"></param>
            <param name="ppOperationTerm"></param>
            <param name="ppValueTerm"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ICondition.Clone(Jam.Shell.ICondition@)">
            <summary>
            </summary>
            <param name="ppc"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.IRichChunk">
            <summary>
              The IRichChunk interface https://msdn.microsoft.com/en-us/library/bb231336(v=vs.85).aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.IRichChunk.GetData(System.UInt64@,System.UInt64@,System.String@,Jam.Shell.PropVariant)">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.IEnumUnknown">
            <summary>
              The IEnumUnknown interface https://msdn.microsoft.com/en-us/library/windows/desktop/ms683764(v=vs.85).aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.IEnumUnknown.Next(System.UInt32,System.IntPtr@,System.UInt32@)">
            <summary>
            </summary>
            <param name="requestedNumber"></param>
            <param name="buffer"></param>
            <param name="fetchedNumber"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IEnumUnknown.Skip(System.UInt32)">
            <summary>
            </summary>
            <param name="number"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IEnumUnknown.Reset">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IEnumUnknown.Clone(Jam.Shell.IEnumUnknown@)">
            <summary>
            </summary>
            <param name="result"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.IConditionFactory">
            <summary>
              The IConditionFactory interface https://msdn.microsoft.com/en-us/library/windows/desktop/bb231383(v=vs.85).aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.IConditionFactory.MakeNot(Jam.Shell.ICondition,System.Boolean,Jam.Shell.ICondition@)">
            <summary>
            </summary>
            <param name="pcSub"></param>
            <param name="fSimplify"></param>
            <param name="ppcResult"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IConditionFactory.MakeAndOr(System.Int32,Jam.Shell.IEnumUnknown,System.Boolean,Jam.Shell.ICondition@)">
            <summary>
            </summary>
            <param name="ct"></param>
            <param name="peuSubs"></param>
            <param name="fSimplify"></param>
            <param name="ppcResult"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IConditionFactory.MakeLeaf(System.String,System.Int32,System.String,Jam.Shell.PropVariant,Jam.Shell.IRichChunk,Jam.Shell.IRichChunk,Jam.Shell.IRichChunk,System.Boolean,Jam.Shell.ICondition@)">
            <summary>
            </summary>
            <param name="pszPropertyName"></param>
            <param name="cop"></param>
            <param name="pszValueType"></param>
            <param name="ppropvar"></param>
            <param name="richChunk1"></param>
            <param name="richChunk2"></param>
            <param name="richChunk3"></param>
            <param name="fExpand"></param>
            <param name="ppcResult"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IConditionFactory.Resolve(Jam.Shell.ICondition,System.Int32,Jam.Shell.Com.SYSTEMTIME@,Jam.Shell.ICondition@)">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.ISearchFolderItemFactory">
            <summary>
              The ISearchFolderItemFactory interface https://msdn.microsoft.com/en-us/library/windows/desktop/bb775176(v=vs.85).aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.ISearchFolderItemFactory.SetDisplayName(System.String)">
            <summary>
            </summary>
            <param name="pszDisplayName"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ISearchFolderItemFactory.SetFolderTypeID(System.Guid)">
            <summary>
            </summary>
            <param name="ftid"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ISearchFolderItemFactory.SetFolderLogicalViewMode(System.Int32)">
            <summary>
            </summary>
            <param name="flvm"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ISearchFolderItemFactory.SetIconSize(System.Int32)">
            <summary>
            </summary>
            <param name="iIconSize"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ISearchFolderItemFactory.SetVisibleColumns(System.UInt32,Jam.Shell.SHCOLUMNID[])">
            <summary>
            </summary>
            <param name="cVisibleColumns"></param>
            <param name="rgKey"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ISearchFolderItemFactory.SetSortColumns(System.UInt32,Jam.Shell.Com.NativeSortColumn[])">
            <summary>
            </summary>
            <param name="cSortColumns"></param>
            <param name="rgSortColumns"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ISearchFolderItemFactory.SetGroupColumn(Jam.Shell.SHCOLUMNID@)">
            <summary>
            </summary>
            <param name="keyGroup"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ISearchFolderItemFactory.SetStacks(System.UInt32,Jam.Shell.SHCOLUMNID[])">
            <summary>
            </summary>
            <param name="cStackKeys"></param>
            <param name="rgStackKeys"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ISearchFolderItemFactory.SetScope(Jam.Shell.IShellItemArray)">
            <summary>
            </summary>
            <param name="ppv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ISearchFolderItemFactory.SetCondition(Jam.Shell.ICondition)">
            <summary>
            </summary>
            <param name="pCondition"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ISearchFolderItemFactory.GetShellItem(System.Guid@,Jam.Shell.IShellItemNative@)">
            <summary>
            </summary>
            <param name="riid"></param>
            <param name="ppv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ISearchFolderItemFactory.GetIDList(System.IntPtr@)">
            <summary>
            </summary>
            <param name="ppidl"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.IQuerySolution">
            <summary>
              The IQuerySolution interface https://msdn.microsoft.com/en-us/library/windows/desktop/bb231346(v=vs.85).aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.IQuerySolution.MakeNot(Jam.Shell.ICondition,System.Boolean,Jam.Shell.ICondition@)">
            <summary>
            </summary>
            <param name="pcSub"></param>
            <param name="fSimplify"></param>
            <param name="ppcResult"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IQuerySolution.MakeAndOr(System.Int32,Jam.Shell.IEnumUnknown,System.Boolean,Jam.Shell.ICondition@)">
            <summary>
            </summary>
            <param name="ct"></param>
            <param name="peuSubs"></param>
            <param name="fSimplify"></param>
            <param name="ppcResult"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IQuerySolution.MakeLeaf(System.String,System.Int32,System.String,Jam.Shell.PropVariant,Jam.Shell.IRichChunk,Jam.Shell.IRichChunk,Jam.Shell.IRichChunk,System.Boolean,Jam.Shell.ICondition@)">
            <summary>
            </summary>
            <param name="pszPropertyName"></param>
            <param name="cop"></param>
            <param name="pszValueType"></param>
            <param name="ppropvar"></param>
            <param name="richChunk1"></param>
            <param name="richChunk2"></param>
            <param name="richChunk3"></param>
            <param name="fExpand"></param>
            <param name="ppcResult"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IQuerySolution.Resolve(Jam.Shell.ICondition,System.Int32,Jam.Shell.Com.SYSTEMTIME@,Jam.Shell.ICondition@)">
            <summary>
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IQuerySolution.GetQuery(Jam.Shell.ICondition@,Jam.Shell.IEntity@)">
            <summary>
            </summary>
            <param name="ppQueryNode"></param>
            <param name="ppMainType"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IQuerySolution.GetErrors(System.Guid@,System.IntPtr@)">
            <summary>
            </summary>
            <param name="riid"></param>
            <param name="ppParseErrors"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IQuerySolution.GetLexicalData(System.String@,System.IntPtr@,System.UInt32@,System.IntPtr@)">
            <summary>
            </summary>
            <param name="ppszInputString"></param>
            <param name="ppTokens"></param>
            <param name="plcid"></param>
            <param name="ppWordBreaker"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.IQueryParser">
            <summary>
              The IQueryParser interface https://msdn.microsoft.com/en-us/library/windows/desktop/bb231353(v=vs.85).aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.IQueryParser.Parse(System.String,Jam.Shell.IEnumUnknown,Jam.Shell.IQuerySolution@)">
            <summary>
            </summary>
            <param name="pszInputString"></param>
            <param name="pCustomProperties"></param>
            <param name="ppSolution"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IQueryParser.SetOption(System.Int32,Jam.Shell.PropVariant)">
            <summary>
            </summary>
            <param name="option"></param>
            <param name="pOptionValue"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IQueryParser.GetOption(System.Int32,Jam.Shell.PropVariant)">
            <summary>
            </summary>
            <param name="option"></param>
            <param name="pOptionValue"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IQueryParser.SetMultiOption(System.Int32,System.String,Jam.Shell.PropVariant)">
            <summary>
            </summary>
            <param name="option"></param>
            <param name="pszOptionKey"></param>
            <param name="pOptionValue"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IQueryParser.GetSchemaProvider(System.IntPtr@)">
            <summary>
            </summary>
            <param name="ppSchemaProvider"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IQueryParser.RestateToString(Jam.Shell.ICondition,System.Boolean,System.String@)">
            <summary>
            </summary>
            <param name="pCondition"></param>
            <param name="fUseEnglish"></param>
            <param name="ppszQueryString"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IQueryParser.ParsePropertyValue(System.String,System.String,Jam.Shell.IQuerySolution@)">
            <summary>
            </summary>
            <param name="pszPropertyName"></param>
            <param name="pszInputString"></param>
            <param name="ppSolution"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IQueryParser.RestatePropertyValueToString(Jam.Shell.ICondition,System.Boolean,System.String@,System.String@)">
            <summary>
            </summary>
            <param name="pCondition"></param>
            <param name="fUseEnglish"></param>
            <param name="ppszPropertyName"></param>
            <param name="ppszQueryString"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.IQueryParserManager">
            <summary>
              The IQueryParserManager interface https://msdn.microsoft.com/de-de/library/windows/desktop/bb231349(v=vs.85).aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.IQueryParserManager.CreateLoadedParser(System.String,System.UInt16,System.Guid@,Jam.Shell.IQueryParser@)">
            <summary>
              Create a query parser loaded with the schema for a certain catalog localize to a certain language, and initialized with standard defaults. One valid value for riid is IID_IQueryParser.
            </summary>
            <param name="pszCatalog"></param>
            <param name="langidForKeywords"></param>
            <param name="riid"></param>
            <param name="ppQueryParser"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IQueryParserManager.InitializeOptions(System.Boolean,System.Boolean,Jam.Shell.IQueryParser)">
            <summary>
              In addition to setting AQS/NQS and automatic wildcard for the given query parser, this sets up standard named entity handlers and sets the keyboard locale as locale for word breaking.
            </summary>
            <param name="fUnderstandNQS"></param>
            <param name="fAutoWildCard"></param>
            <param name="pQueryParser"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IQueryParserManager.SetOption(System.Int32,Jam.Shell.PropVariant)">
            <summary>
              Change one of the settings for the query parser manager, such as the name of the schema binary, or the location of the localized and unlocalized schema binaries. By default, the settings point to the schema binaries used by Windows Shell.
            </summary>
            <param name="option"></param>
            <param name="pOptionValue"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.Initialize(System.IntPtr,Jam.Shell.RECT@,Jam.Shell.Com.FolderSettings@)">
            <summary>
            Prepares the browser to be navigated.
            </summary>
            <param name="hwndParent">A handle to the owner window or control.</param>
            <param name="prc">A pointer to a RECT containing the coordinates of the bounding rectangle 
            the browser will occupy. The coordinates are relative to hwndParent. If this parameter is NULL,
            then method IExplorerBrowser::SetRect should subsequently be called.</param>
            <param name="pfs">A pointer to a FOLDERSETTINGS structure that determines how the folder will be
            displayed in the view. If this parameter is NULL, then method IExplorerBrowser::SetFolderSettings
            should be called, otherwise, the default view settings for the folder are used.</param>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.Destroy">
            <summary>
            Destroys the browser.
            </summary>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.SetRect(System.IntPtr@,Jam.Shell.RECT)">
            <summary>
            Sets the size and position of the view windows created by the browser.
            </summary>
            <param name="phdwp">A pointer to a DeferWindowPos handle. This paramater can be NULL.</param>
            <param name="rcBrowser">The coordinates that the browser will occupy.</param>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.SetPropertyBag(System.String)">
            <summary>
            Sets the name of the property bag.
            </summary>
            <param name="pszPropertyBag">A pointer to a constant, null-terminated, Unicode string that contains
            the name of the property bag. View state information that is specific to the application of the 
            client is stored (persisted) using this name.</param>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.SetEmptyText(System.String)">
            <summary>
            Sets the default empty text.
            </summary>
            <param name="pszEmptyText">A pointer to a constant, null-terminated, Unicode string that contains 
            the empty text.</param>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.SetFolderSettings(Jam.Shell.Com.FolderSettings@)">
            <summary>
            Sets the folder settings for the current view.
            </summary>
            <param name="pfs">A pointer to a FOLDERSETTINGS structure that contains the folder settings 
            to be applied.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.Advise(System.IntPtr,System.UInt32@)">
            <summary>
            Initiates a connection with IExplorerBrowser for event callbacks.
            </summary>
            <param name="psbe">A pointer to the IExplorerBrowserEvents interface of the object to be 
            advised of IExplorerBrowser events</param>
            <param name="pdwCookie">When this method returns, contains a token that uniquely identifies 
            the event listener. This allows several event listeners to be subscribed at a time.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.Unadvise(System.UInt32)">
            <summary>
            Terminates an advisory connection.
            </summary>
            <param name="dwCookie">A connection token previously returned from IExplorerBrowser::Advise.
            Identifies the connection to be terminated.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.SetOptions(Jam.Shell.ExplorerBrowserOptions)">
            <summary>
            Sets the current browser options.
            </summary>
            <param name="dwFlag">One or more EXPLORER_BROWSER_OPTIONS flags to be set.</param>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.GetOptions(Jam.Shell.ExplorerBrowserOptions@)">
            <summary>
            Gets the current browser options.
            </summary>
            <param name="pdwFlag">When this method returns, contains the current EXPLORER_BROWSER_OPTIONS 
            for the browser.</param>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.BrowseToIDList(System.IntPtr,System.UInt32)">
            <summary>
            Browses to a pointer to an item identifier list (PIDL)
            </summary>
            <param name="pidl">A pointer to a const ITEMIDLIST (item identifier list) that specifies an object's 
            location as the destination to navigate to. This parameter can be NULL.</param>
            <param name="uFlags">A flag that specifies the category of the pidl. This affects how 
            navigation is accomplished</param>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.BrowseToObject(System.Object,System.UInt32)">
            <summary>
            Browse to an object
            </summary>
            <param name="punk">A pointer to an object to browse to. If the object cannot be browsed, 
            an error value is returned.</param>
            <param name="uFlags">A flag that specifies the category of the pidl. This affects how 
            navigation is accomplished. </param>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.FillFromObject(System.Object,System.Int32)">
            <summary>
            Creates a results folder and fills it with items.
            </summary>
            <param name="punk">An interface pointer on the source object that will fill the IResultsFolder</param>
            <param name="dwFlags">One of the EXPLORER_BROWSER_FILL_FLAGS</param>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.RemoveAll">
            <summary>
            Removes all items from the results folder.
            </summary>
        </member>
        <member name="M:Jam.Shell.IExplorerBrowser.GetCurrentView(System.Guid@,System.IntPtr@)">
            <summary>
            Gets an interface for the current view of the browser.
            </summary>
            <param name="riid">A reference to the desired interface ID.</param>
            <param name="ppv">When this method returns, contains the interface pointer requested in riid. 
            This will typically be IShellView or IShellView2. </param>
        </member>
        <member name="T:Jam.Shell.ExplorerPane">
            <summary>
            Contains flags for the panes that can be used in the Explorer window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerPane.Commands">
            <summary>
            Commands module along the top of the Windows Explorer window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerPane.CommandsOrganize">
            <summary>
            Organize menu within the commands module.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerPane.CommandsView">
            <summary>
            View menu within the commands module.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerPane.DetailsPane">
            <summary>
            Pane showing metadata along the bottom of the Windows Explorer window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerPane.PreviewPane">
            <summary>
            Pane on the right of the Windows Explorer window that shows a large reading preview of the file.
            Only works if DetailsPane is not visible.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerPane.Navigation">
            <summary>
            The pane on the left side of the Windows Explorer window that hosts the folders tree and Favorites.
            </summary>
        </member>
        <member name="F:Jam.Shell.ExplorerPane.AddressBar">
            <summary>
            The Addressbar displayed on the top of the screen. 
            </summary>
            <remarks>Only supported on .NET</remarks>
        </member>
        <member name="F:Jam.Shell.ExplorerPane.SearchEdit">
            <summary>
              The search box in top right corner. Note that this is only compatible
              with Windows 7 and later!
            </summary>
            <remarks>Only supported on .NET</remarks>
        </member>
        <member name="F:Jam.Shell.ExplorerPane.History">
            <summary>
              The history buttons in top left corner.
            </summary>
            <remarks>Only supported on .NET</remarks>
        </member>
        <member name="F:Jam.Shell.ExplorerPane.Auto">
            <summary>
            Same panes like in explorer.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellApi">
            <summary>
            Static helper class for accessing Windows API and Shell API stuff
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellApi.NativeMethods">
            <summary>Dll imports.</summary>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.SetLastError(System.Int32)">
            <summary>
            Sets the last-error code for the calling thread.
            </summary>
            <param name="dwErrorCode">The last-error code for the thread.</param>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.HiWord(System.Int32)">
            <summary>
            Retrieves the upper Word of an Integer.
            </summary>
            <param name="pNumber">The Integer</param>
            <returns>The upper Word.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.LoWord(System.Int32)">
            <summary>
            Retrieves the lower Word of an Integer.
            </summary>
            <param name="pNumber">The Integer</param>
            <returns>The lower Word.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.MakeLong(System.UInt16,System.UInt16)">
            <summary>
            Creates an Integer by concatenating two 16-bit values.
            </summary>
            <param name="wLow">The low-order word of the new value.</param>
            <param name="wHigh">The high-order word of the new value.</param>
            <returns>The concatenation.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.SHGetImageList(System.Int32,System.Guid@,Jam.Shell.Com.IImageList@)">
            <summary>
            SHGetImageList is not exported correctly in XP.  See KB316931
            http://support.microsoft.com/default.aspx?scid=kb;EN-US;Q316931
            Apparently (and hopefully) ordinal 727 isn't going to change.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.SHGetImageListHandle(System.Int32,System.Guid@,System.IntPtr@)">
            <summary>
            - although in theory you can retrieve the handle from the IUnknown interface of IImageList directly, I found that the returned value was off by 4 bytes.
            see http://www.vbaccelerator.com/home/net/code/libraries/Shell_Projects/SysImageList/article.asp
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.GetDiskFreeSpaceEx(System.String,System.Int64@,System.Int64@,System.Int64@)">
            <summary>
            http://www.pinvoke.net/default.aspx/kernel32/GetDiskFreeSpaceEx.html
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.StrFormatByteSize(System.Int64,System.String,System.Int32)">
            <summary>
            http://www.pinvoke.net/default.aspx/shlwapi/StrFormatByteSize.html
            </summary>
            <param name="qdw"></param>
            <param name="pwszBuf"></param>
            <param name="cchBufref"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.FormatByteSize(System.Int64,System.Boolean)">
            <summary>
            Formats a size value to human readable format by using the StrFormatByteSize API call
            </summary>
            <param name="value">The value to format as a string</param>
            <param name="kbOnly">True, if the string should show kilobytes instead of bytes.</param>
            <returns>the transformed string</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.PathMatchSpec(System.String,System.String)">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb773727(VS.85).aspx
            </summary>
            <param name="pszFileParam"></param>
            <param name="pszSpec"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.CreateShortcut(System.String,System.String,System.UInt32)">
            <summary>
            Creates a shortcut
            </summary>
            <param name="p_shortcutName">Name of the shortcut</param>
            <param name="p_target">Fullpath of the target</param>
            <param name="p_type">Shortcut type - 0x0 for file, 0x1 for folder</param>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.GetLongPathName(System.String,System.Text.StringBuilder,System.UInt32)">
            <summary>
            The GetLongPathName API call is only available on Windows 98/ME and Windows 2000/XP. 
            It is not available on Windows 95 &amp; NT.
            The file must exist to get the correct path. This is because the full path comes 
            from the file system information. If an invalid name is given and exception is not 
            thrown rather the name is just a blank space.
            </summary>
            <param name="lpszShortPath"></param>
            <param name="lpszLongPath"></param>
            <param name="cchBuffer"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.StrCmpLogicalW(System.String,System.String)">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb759947%28VS.85%29.aspx
            http://www.pinvoke.net/default.aspx/shlwapi/StrCmpLogicalW.html
            <remarks>
            for some reason, Vista Explorer appears to use a different sorting algoritm. 
            The result is similar, but non-alphanumeric characters such as parentheses are ordered differently.
            </remarks>
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.ImageList_DrawEx(System.IntPtr,System.Int32,System.IntPtr,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Draws an image list item in the specified device context.
            </summary>
            <param name="himl">Handle to the image list.</param>
            <param name="i">Index of the image to draw.</param>
            <param name="hdcDst">Handle to the destination device context.</param>
            <param name="x">X-coordinate at which to draw within the specified device context.</param>
            <param name="y">Y-coordinate at which to draw within the specified device context.</param>
            <param name="dx">Width of the portion of the image to draw relative to the upper-left corner of the image. If dx and dy are zero, the function draws the entire  image. The function does not ensure that the parameters are valid.</param>
            <param name="dy">Height of the portion of the image to draw, relative to the upper-left corner of the image. If dx and dy are zero, the function draws the entire  image. The function does not ensure that the parameters are valid.</param>
            <param name="rgbBk">Background color of the image.</param>
            <param name="rgbFg">Foreground color of the image.</param>
            <param name="fStyle">Drawing style and, optionally, the overlay image.</param>
            <returns>Returns nonzero if successful, or zero otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.DestroyIcon(System.IntPtr)">
            <summary>Destroys the icon referenced by hIcon.</summary>
            <param name="hIcon">The icon handle.</param>
            <returns>True if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.VariantCompare(System.Object@,System.Object@)">
            <summary>
            Compares two variant structures, based on default comparison rules.
            </summary>
            <returns>
            Returns 1 if var1 is greater than var2
            Returns 0 if var1 equals var2
            Returns -1 if var1 is less than var2
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.AllowDarkModeForWindowChecked(System.IntPtr,System.Boolean)">
            <summary>
            Enables or disables the dark mode for a specified window.
            </summary>
            <param name="hWnd">The window</param>
            <param name="bAllow">Set to <c>true</c> to enable or <c>false</c> to disable dark mode.</param>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.ShouldAppsUseDarkModeChecked">
            <summary>
            Checks if dark mode is enabled.
            </summary>
            <returns>
            <c>true</c> if dark mode is enabled or <c>false</c> otherwise.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.PSGetPropertyDescription(Jam.Shell.SHCOLUMNID@,System.Guid@,Jam.Shell.Com.IPropertyDescription@)">
            <summary>
            Gets an instance of a property description interface for a property specified by a PROPERTYKEY structure.
            </summary>
            <param name="propkey">Reference to a PROPERTYKEY.</param>
            <param name="riid">Reference to the interface ID of the requested interface.</param>
            <param name="ppv">When this function returns, contains the interface pointer requested in riid.</param>
            <returns>Hresult code</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.PSGetNameFromPropertyKey(Jam.Shell.SHCOLUMNID@,System.String@)">
            <summary>
            Retrieves the canonical name of the property, given its PROPERTYKEY.
            </summary>
            <param name="propkey">Reference to a PROPERTYKEY structure that identifies the requested property.</param>
            <param name="ppszCanonicalName">When this function returns, contains a pointer to the property name as a null-terminated Unicode string.</param>
            <returns>Hresult code</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.PSGetPropertyKeyFromName(System.String,Jam.Shell.SHCOLUMNID@)">
            <summary>
            Gets the property key for a canonical property name.
            </summary>
            <param name="pszCanonicalName">Pointer to a property name as a null-terminated, Unicode string.</param>
            <param name="propkey">When this function returns, contains the requested property key.</param>
            <returns>Hresult code</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.GetDeviceCaps(System.IntPtr,System.Int32)">
            <summary>
            Retrieves device-specific information for the specified device.
            </summary>
            <param name="hDC">A handle to the DC.</param>
            <param name="nIndex">The item to be returned</param>
            <returns>Device-specific information for the specified device.</returns>
            <remarks>See http://msdn.microsoft.com/en-us/library/windows/desktop/dd144877%28v=vs.85%29.aspx </remarks>
        </member>
        <member name="M:Jam.Shell.ShellApi.NativeMethods.DeleteObject(System.IntPtr)">
            <summary>
            The DeleteObject function deletes a logical pen, brush, font, bitmap, region, or palette, freeing all system 
            resources associated with the object. After the object is deleted, the specified handle is no longer valid.
            </summary>
            <param name="hObject">A handle to a logical pen, brush, font, bitmap, region, or palette.</param>
            <returns>True ff the function succeeds</returns>
        </member>
        <member name="F:Jam.Shell.ShellApi.m_KnownFolders">
            <summary>
            Dictionary that maps ShellFolder --> Guid
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellApi.KnownFolders">
            <summary>
            Dictionary that maps a ShellFolder to a Guid - taken from <see>http://msdn.microsoft.com/en-us/library/dd378457%28v=VS.85%29.aspx</see>.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.m_SpecialFolderGuidToShellFolder">
            <summary>Contains additional Guids for ShellFolder.</summary>
        </member>
        <member name="T:Jam.Shell.ShellApi.WM">
            <summary>
            Windows Messages
            Defined in winuser.h from Windows SDK v6.1
            Documentation pulled from MSDN.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NULL">
            <summary>
            The WM_NULL message performs no operation. An application sends the WM_NULL message if it wants to post a message that the recipient window will ignore.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CREATE">
            <summary>
            The WM_CREATE message is sent when an application requests that a window be created by calling the CreateWindowEx or CreateWindow function. (The message is sent before the function returns.) The window procedure of the new window receives this message after the window is created, but before the window becomes visible.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DESTROY">
            <summary>
            The WM_DESTROY message is sent when a window is being destroyed. It is sent to the window procedure of the window being destroyed after the window is removed from the screen.
            This message is sent first to the window being destroyed and then to the child windows (if any) as they are destroyed. During the processing of the message, it can be assumed that all child windows still exist.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOVE">
            <summary>
            The WM_MOVE message is sent after a window has been moved.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SIZE">
            <summary>
            The WM_SIZE message is sent to a window after its size has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ACTIVATE">
            <summary>
            The WM_ACTIVATE message is sent to both the window being activated and the window being deactivated. If the windows use the same input queue, the message is sent synchronously, first to the window procedure of the top-level window being deactivated, then to the window procedure of the top-level window being activated. If the windows use different input queues, the message is sent asynchronously, so the window is activated immediately.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SETFOCUS">
            <summary>
            The WM_SETFOCUS message is sent to a window after it has gained the keyboard focus.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.KILLFOCUS">
            <summary>
            The WM_KILLFOCUS message is sent to a window immediately before it loses the keyboard focus.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ENABLE">
            <summary>
            The WM_ENABLE message is sent when an application changes the enabled state of a window. It is sent to the window whose enabled state is changing. This message is sent before the EnableWindow function returns, but after the enabled state (WS_DISABLED style bit) of the window has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SETREDRAW">
            <summary>
            An application sends the WM_SETREDRAW message to a window to allow changes in that window to be redrawn or to prevent changes in that window from being redrawn.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SETTEXT">
            <summary>
            An application sends a WM_SETTEXT message to set the text of a window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETTEXT">
            <summary>
            An application sends a WM_GETTEXT message to copy the text that corresponds to a window into a buffer provided by the caller.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETTEXTLENGTH">
            <summary>
            An application sends a WM_GETTEXTLENGTH message to determine the length, in characters, of the text associated with a window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PAINT">
            <summary>
            The WM_PAINT message is sent when the system or another application makes a request to paint a portion of an application's window. The message is sent when the UpdateWindow or RedrawWindow function is called, or by the DispatchMessage function when the application obtains a WM_PAINT message by using the GetMessage or PeekMessage function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CLOSE">
            <summary>
            The WM_CLOSE message is sent as a signal that a window or an application should terminate.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.QUERYENDSESSION">
            <summary>
            The WM_QUERYENDSESSION message is sent when the user chooses to end the session or when an application calls one of the system shutdown functions. If any application returns zero, the session is not ended. The system stops sending WM_QUERYENDSESSION messages as soon as one application returns zero.
            After processing this message, the system sends the WM_ENDSESSION message with the wParam parameter set to the results of the WM_QUERYENDSESSION message.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.QUIT">
            <summary>
            The WM_QUIT message indicates a request to terminate an application and is generated when the application calls the PostQuitMessage function. It causes the GetMessage function to return zero.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.QUERYOPEN">
            <summary>
            The WM_QUERYOPEN message is sent to an icon when the user requests that the window be restored to its previous size and position.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ERASEBKGND">
            <summary>
            The WM_ERASEBKGND message is sent when the window background must be erased (for example, when a window is resized). The message is sent to prepare an invalidated portion of a window for painting.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SYSCOLORCHANGE">
            <summary>
            This message is sent to all top-level windows when a change is made to a system color setting.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ENDSESSION">
            <summary>
            The WM_ENDSESSION message is sent to an application after the system processes the results of the WM_QUERYENDSESSION message. The WM_ENDSESSION message informs the application whether the session is ending.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SHOWWINDOW">
            <summary>
            The WM_SHOWWINDOW message is sent to a window when the window is about to be hidden or shown.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.WININICHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI.
            Note  The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system. Applications should use the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SETTINGCHANGE">
            <summary>
            An application sends the WM_WININICHANGE message to all top-level windows after making a change to the WIN.INI file. The SystemParametersInfo function sends this message after an application uses the function to change a setting in WIN.INI.
            Note  The WM_WININICHANGE message is provided only for compatibility with earlier versions of the system. Applications should use the WM_SETTINGCHANGE message.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DEVMODECHANGE">
            <summary>
            The WM_DEVMODECHANGE message is sent to all top-level windows whenever the user changes device-mode settings.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ACTIVATEAPP">
            <summary>
            The WM_ACTIVATEAPP message is sent when a window belonging to a different application than the active window is about to be activated. The message is sent to the application whose window is being activated and to the application whose window is being deactivated.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.FONTCHANGE">
            <summary>
            An application sends the WM_FONTCHANGE message to all top-level windows in the system after changing the pool of font resources.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.TIMECHANGE">
            <summary>
            A message that is sent whenever there is a change in the system time.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CANCELMODE">
            <summary>
            The WM_CANCELMODE message is sent to cancel certain modes, such as mouse capture. For example, the system sends this message to the active window when a dialog box or message box is displayed. Certain functions also send this message explicitly to the specified window regardless of whether it is the active window. For example, the EnableWindow function sends this message when disabling the specified window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SETCURSOR">
            <summary>
            The WM_SETCURSOR message is sent to a window if the mouse causes the cursor to move within a window and mouse input is not captured.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOUSEACTIVATE">
            <summary>
            The WM_MOUSEACTIVATE message is sent when the cursor is in an inactive window and the user presses a mouse button. The parent window receives this message only if the child window passes it to the DefWindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CHILDACTIVATE">
            <summary>
            The WM_CHILDACTIVATE message is sent to a child window when the user clicks the window's title bar or when the window is activated, moved, or sized.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.QUEUESYNC">
            <summary>
            The WM_QUEUESYNC message is sent by a computer-based training (CBT) application to separate user-input messages from other messages sent through the WH_JOURNALPLAYBACK Hook procedure.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETMINMAXINFO">
            <summary>
            The WM_GETMINMAXINFO message is sent to a window when the size or position of the window is about to change. An application can use this message to override the window's default maximized size and position, or its default minimum or maximum tracking size.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PAINTICON">
            <summary>
            Windows NT 3.51 and earlier: The WM_PAINTICON message is sent to a minimized window when the icon is to be painted. This message is not sent by newer versions of Microsoft Windows, except in unusual circumstances explained in the Remarks.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ICONERASEBKGND">
            <summary>
            Windows NT 3.51 and earlier: The WM_ICONERASEBKGND message is sent to a minimized window when the background of the icon must be filled before painting the icon. A window receives this message only if a class icon is defined for the window; otherwise, WM_ERASEBKGND is sent. This message is not sent by newer versions of Windows.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NEXTDLGCTL">
            <summary>
            The WM_NEXTDLGCTL message is sent to a dialog box procedure to set the keyboard focus to a different control in the dialog box.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SPOOLERSTATUS">
            <summary>
            The WM_SPOOLERSTATUS message is sent from Print Manager whenever a job is added to or removed from the Print Manager queue.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DRAWITEM">
            <summary>
            The WM_DRAWITEM message is sent to the parent window of an owner-drawn button, combo box, list box, or menu when a visual aspect of the button, combo box, list box, or menu has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MEASUREITEM">
            <summary>
            The WM_MEASUREITEM message is sent to the owner window of a combo box, list box, list view control, or menu item when the control or menu is created.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DELETEITEM">
            <summary>
            Sent to the owner of a list box or combo box when the list box or combo box is destroyed or when items are removed by the LB_DELETESTRING, LB_RESETCONTENT, CB_DELETESTRING, or CB_RESETCONTENT message. The system sends a WM_DELETEITEM message for each deleted item. The system sends the WM_DELETEITEM message for any deleted list box or combo box item with nonzero item data.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.VKEYTOITEM">
            <summary>
            Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_KEYDOWN message.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CHARTOITEM">
            <summary>
            Sent by a list box with the LBS_WANTKEYBOARDINPUT style to its owner in response to a WM_CHAR message.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SETFONT">
            <summary>
            An application sends a WM_SETFONT message to specify the font that a control is to use when drawing text.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETFONT">
            <summary>
            An application sends a WM_GETFONT message to a control to retrieve the font with which the control is currently drawing its text.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SETHOTKEY">
            <summary>
            An application sends a WM_SETHOTKEY message to a window to associate a hot key with the window. When the user presses the hot key, the system activates the window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETHOTKEY">
            <summary>
            An application sends a WM_GETHOTKEY message to determine the hot key associated with a window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.QUERYDRAGICON">
            <summary>
            The WM_QUERYDRAGICON message is sent to a minimized (iconic) window. The window is about to be dragged by the user but does not have an icon defined for its class. An application can return a handle to an icon or cursor. The system displays this cursor or icon while the user drags the icon.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.COMPAREITEM">
            <summary>
            The system sends the WM_COMPAREITEM message to determine the relative position of a new item in the sorted list of an owner-drawn combo box or list box. Whenever the application adds a new item, the system sends this message to the owner of a combo box or list box created with the CBS_SORT or LBS_SORT style.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETOBJECT">
            <summary>
            Active Accessibility sends the WM_GETOBJECT message to obtain information about an accessible object contained in a server application.
            Applications never send this message directly. It is sent only by Active Accessibility in response to calls to AccessibleObjectFromPoint, AccessibleObjectFromEvent, or AccessibleObjectFromWindow. However, server applications handle this message.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.COMPACTING">
            <summary>
            The WM_COMPACTING message is sent to all top-level windows when the system detects more than 12.5 percent of system time over a 30- to 60-second interval is being spent compacting memory. This indicates that system memory is low.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.COMMNOTIFY">
            <summary>
            WM_COMMNOTIFY is Obsolete for Win32-Based Applications
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.WINDOWPOSCHANGING">
            <summary>
            The WM_WINDOWPOSCHANGING message is sent to a window whose size, position, or place in the Z order is about to change as a result of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.WINDOWPOSCHANGED">
            <summary>
            The WM_WINDOWPOSCHANGED message is sent to a window whose size, position, or place in the Z order has changed as a result of a call to the SetWindowPos function or another window-management function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.POWER">
            <summary>
            Notifies applications that the system, typically a battery-powered personal computer, is about to enter a suspended mode.
            Use: POWERBROADCAST
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.COPYDATA">
            <summary>
            An application sends the WM_COPYDATA message to pass data to another application.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CANCELJOURNAL">
            <summary>
            The WM_CANCELJOURNAL message is posted to an application when a user cancels the application's journaling activities. The message is posted with a NULL window handle.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NOTIFY">
            <summary>
            Sent by a common control to its parent window when an event has occurred or the control requires some information.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.INPUTLANGCHANGEREQUEST">
            <summary>
            The WM_INPUTLANGCHANGEREQUEST message is posted to the window with the focus when the user chooses a new input language, either with the hotkey (specified in the Keyboard control panel application) or from the indicator on the system taskbar. An application can accept the change by passing the message to the DefWindowProc function or reject the change (and prevent it from taking place) by returning immediately.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.INPUTLANGCHANGE">
            <summary>
            The WM_INPUTLANGCHANGE message is sent to the topmost affected window after an application's input language has been changed. You should make any application-specific settings and pass the message to the DefWindowProc function, which passes the message to all first-level child windows. These child windows can pass the message to DefWindowProc to have it pass the message to their child windows, and so on.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.TCARD">
            <summary>
            Sent to an application that has initiated a training card with Microsoft Windows Help. The message informs the application when the user clicks an authorable button. An application initiates a training card by specifying the HELP_TCARD command in a call to the WinHelp function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.HELP">
            <summary>
            Indicates that the user pressed the F1 key. If a menu is active when F1 is pressed, WM_HELP is sent to the window associated with the menu; otherwise, WM_HELP is sent to the window that has the keyboard focus. If no window has the keyboard focus, WM_HELP is sent to the currently active window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.USERCHANGED">
            <summary>
            The WM_USERCHANGED message is sent to all windows after the user has logged on or off. When the user logs on or off, the system updates the user-specific settings. The system sends this message immediately after updating the settings.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NOTIFYFORMAT">
            <summary>
            Determines if a window accepts ANSI or Unicode structures in the WM_NOTIFY notification message. WM_NOTIFYFORMAT messages are sent from a common control to its parent window and from the parent window to the common control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CONTEXTMENU">
            <summary>
            The WM_CONTEXTMENU message notifies a window that the user clicked the right mouse button (right-clicked) in the window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.STYLECHANGING">
            <summary>
            The WM_STYLECHANGING message is sent to a window when the SetWindowLong function is about to change one or more of the window's styles.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.STYLECHANGED">
            <summary>
            The WM_STYLECHANGED message is sent to a window after the SetWindowLong function has changed one or more of the window's styles
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DISPLAYCHANGE">
            <summary>
            The WM_DISPLAYCHANGE message is sent to all windows when the display resolution has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETICON">
            <summary>
            The WM_GETICON message is sent to a window to retrieve a handle to the large or small icon associated with a window. The system displays the large icon in the ALT+TAB dialog, and the small icon in the window caption.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SETICON">
            <summary>
            An application sends the WM_SETICON message to associate a new large or small icon with a window. The system displays the large icon in the ALT+TAB dialog box, and the small icon in the window caption.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCCREATE">
            <summary>
            The WM_NCCREATE message is sent prior to the WM_CREATE message when a window is first created.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCDESTROY">
            <summary>
            The WM_NCDESTROY message informs a window that its nonclient area is being destroyed. The DestroyWindow function sends the WM_NCDESTROY message to the window following the WM_DESTROY message. WM_DESTROY is used to free the allocated memory object associated with the window.
            The WM_NCDESTROY message is sent after the child windows have been destroyed. In contrast, WM_DESTROY is sent before the child windows are destroyed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCCALCSIZE">
            <summary>
            The WM_NCCALCSIZE message is sent when the size and position of a window's client area must be calculated. By processing this message, an application can control the content of the window's client area when the size or position of the window changes.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCHITTEST">
            <summary>
            The WM_NCHITTEST message is sent to a window when the cursor moves, or when a mouse button is pressed or released. If the mouse is not captured, the message is sent to the window beneath the cursor. Otherwise, the message is sent to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCPAINT">
            <summary>
            The WM_NCPAINT message is sent to a window when its frame must be painted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCACTIVATE">
            <summary>
            The WM_NCACTIVATE message is sent to a window when its nonclient area needs to be changed to indicate an active or inactive state.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETDLGCODE">
            <summary>
            The WM_GETDLGCODE message is sent to the window procedure associated with a control. By default, the system handles all keyboard input to the control; the system interprets certain types of keyboard input as dialog box navigation keys. To override this default behavior, the control can respond to the WM_GETDLGCODE message to indicate the types of input it wants to process itself.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SYNCPAINT">
            <summary>
            The WM_SYNCPAINT message is used to synchronize painting while avoiding linking independent GUI threads.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCMOUSEMOVE">
            <summary>
            The WM_NCMOUSEMOVE message is posted to a window when the cursor is moved within the nonclient area of the window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCLBUTTONDOWN">
            <summary>
            The WM_NCLBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCLBUTTONUP">
            <summary>
            The WM_NCLBUTTONUP message is posted when the user releases the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCLBUTTONDBLCLK">
            <summary>
            The WM_NCLBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCRBUTTONDOWN">
            <summary>
            The WM_NCRBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCRBUTTONUP">
            <summary>
            The WM_NCRBUTTONUP message is posted when the user releases the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCRBUTTONDBLCLK">
            <summary>
            The WM_NCRBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCMBUTTONDOWN">
            <summary>
            The WM_NCMBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCMBUTTONUP">
            <summary>
            The WM_NCMBUTTONUP message is posted when the user releases the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCMBUTTONDBLCLK">
            <summary>
            The WM_NCMBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is within the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCXBUTTONDOWN">
            <summary>
            The WM_NCXBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCXBUTTONUP">
            <summary>
            The WM_NCXBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCXBUTTONDBLCLK">
            <summary>
            The WM_NCXBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor is in the nonclient area of a window. This message is posted to the window that contains the cursor. If a window has captured the mouse, this message is not posted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.INPUT_DEVICE_CHANGE">
            <summary>
            The WM_INPUT_DEVICE_CHANGE message is sent to the window that registered to receive raw input. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.INPUT">
            <summary>
            The WM_INPUT message is sent to the window that is getting raw input.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.KEYFIRST">
            <summary>
            This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.KEYDOWN">
            <summary>
            The WM_KEYDOWN message is posted to the window with the keyboard focus when a nonsystem key is pressed. A nonsystem key is a key that is pressed when the ALT key is not pressed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.KEYUP">
            <summary>
            The WM_KEYUP message is posted to the window with the keyboard focus when a nonsystem key is released. A nonsystem key is a key that is pressed when the ALT key is not pressed, or a keyboard key that is pressed when a window has the keyboard focus.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CHAR">
            <summary>
            The WM_CHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the TranslateMessage function. The WM_CHAR message contains the character code of the key that was pressed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DEADCHAR">
            <summary>
            The WM_DEADCHAR message is posted to the window with the keyboard focus when a WM_KEYUP message is translated by the TranslateMessage function. WM_DEADCHAR specifies a character code generated by a dead key. A dead key is a key that generates a character, such as the umlaut (double-dot), that is combined with another character to form a composite character. For example, the umlaut-O character (Ö) is generated by typing the dead key for the umlaut character, and then typing the O key.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SYSKEYDOWN">
            <summary>
            The WM_SYSKEYDOWN message is posted to the window with the keyboard focus when the user presses the F10 key (which activates the menu bar) or holds down the ALT key and then presses another key. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYDOWN message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SYSKEYUP">
            <summary>
            The WM_SYSKEYUP message is posted to the window with the keyboard focus when the user releases a key that was pressed while the ALT key was held down. It also occurs when no window currently has the keyboard focus; in this case, the WM_SYSKEYUP message is sent to the active window. The window that receives the message can distinguish between these two contexts by checking the context code in the lParam parameter.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SYSCHAR">
            <summary>
            The WM_SYSCHAR message is posted to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. It specifies the character code of a system character key — that is, a character key that is pressed while the ALT key is down.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SYSDEADCHAR">
            <summary>
            The WM_SYSDEADCHAR message is sent to the window with the keyboard focus when a WM_SYSKEYDOWN message is translated by the TranslateMessage function. WM_SYSDEADCHAR specifies the character code of a system dead key — that is, a dead key that is pressed while holding down the ALT key.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.UNICHAR">
            <summary>
            The WM_UNICHAR message is posted to the window with the keyboard focus when a WM_KEYDOWN message is translated by the TranslateMessage function. The WM_UNICHAR message contains the character code of the key that was pressed.
            The WM_UNICHAR message is equivalent to WM_CHAR, but it uses Unicode Transformation Format (UTF)-32, whereas WM_CHAR uses UTF-16. It is designed to send or post Unicode characters to ANSI windows and it can can handle Unicode Supplementary Plane characters.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.KEYLAST">
            <summary>
            This message filters for keyboard messages.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_STARTCOMPOSITION">
            <summary>
            Sent immediately before the IME generates the composition string as a result of a keystroke. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_ENDCOMPOSITION">
            <summary>
            Sent to an application when the IME ends composition. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_COMPOSITION">
            <summary>
            Sent to an application when the IME changes composition status as a result of a keystroke. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_KEYLAST">
            <summary>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.INITDIALOG">
            <summary>
            The WM_INITDIALOG message is sent to the dialog box procedure immediately before a dialog box is displayed. Dialog box procedures typically use this message to initialize controls and carry out any other initialization tasks that affect the appearance of the dialog box.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.COMMAND">
            <summary>
            The WM_COMMAND message is sent when the user selects a command item from a menu, when a control sends a notification message to its parent window, or when an accelerator keystroke is translated.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SYSCOMMAND">
            <summary>
            A window receives this message when the user chooses a command from the Window menu (formerly known as the system or control menu) or when the user chooses the maximize button, minimize button, restore button, or close button.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.TIMER">
            <summary>
            The WM_TIMER message is posted to the installing thread's message queue when a timer expires. The message is posted by the GetMessage or PeekMessage function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.HSCROLL">
            <summary>
            The WM_HSCROLL message is sent to a window when a scroll event occurs in the window's standard horizontal scroll bar. This message is also sent to the owner of a horizontal scroll bar control when a scroll event occurs in the control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.VSCROLL">
            <summary>
            The WM_VSCROLL message is sent to a window when a scroll event occurs in the window's standard vertical scroll bar. This message is also sent to the owner of a vertical scroll bar control when a scroll event occurs in the control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.INITMENU">
            <summary>
            The WM_INITMENU message is sent when a menu is about to become active. It occurs when the user clicks an item on the menu bar or presses a menu key. This allows the application to modify the menu before it is displayed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.INITMENUPOPUP">
            <summary>
            The WM_INITMENUPOPUP message is sent when a drop-down menu or submenu is about to become active. This allows an application to modify the menu before it is displayed, without changing the entire menu.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MENUSELECT">
            <summary>
            The WM_MENUSELECT message is sent to a menu's owner window when the user selects a menu item.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MENUCHAR">
            <summary>
            The WM_MENUCHAR message is sent when a menu is active and the user presses a key that does not correspond to any mnemonic or accelerator key. This message is sent to the window that owns the menu.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ENTERIDLE">
            <summary>
            The WM_ENTERIDLE message is sent to the owner window of a modal dialog box or menu that is entering an idle state. A modal dialog box or menu enters an idle state when no messages are waiting in its queue after it has processed one or more previous messages.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MENURBUTTONUP">
            <summary>
            The WM_MENURBUTTONUP message is sent when the user releases the right mouse button while the cursor is on a menu item.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MENUDRAG">
            <summary>
            The WM_MENUDRAG message is sent to the owner of a drag-and-drop menu when the user drags a menu item.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MENUGETOBJECT">
            <summary>
            The WM_MENUGETOBJECT message is sent to the owner of a drag-and-drop menu when the mouse cursor enters a menu item or moves from the center of the item to the top or bottom of the item.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.UNINITMENUPOPUP">
            <summary>
            The WM_UNINITMENUPOPUP message is sent when a drop-down menu or submenu has been destroyed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MENUCOMMAND">
            <summary>
            The WM_MENUCOMMAND message is sent when the user makes a selection from a menu.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CHANGEUISTATE">
            <summary>
            An application sends the WM_CHANGEUISTATE message to indicate that the user interface (UI) state should be changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.UPDATEUISTATE">
            <summary>
            An application sends the WM_UPDATEUISTATE message to change the user interface (UI) state for the specified window and all its child windows.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.QUERYUISTATE">
            <summary>
            An application sends the WM_QUERYUISTATE message to retrieve the user interface (UI) state for a window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CTLCOLORMSGBOX">
            <summary>
            The WM_CTLCOLORMSGBOX message is sent to the owner window of a message box before Windows draws the message box. By responding to this message, the owner window can set the text and background colors of the message box by using the given display device context handle.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CTLCOLOREDIT">
            <summary>
            An edit control that is not read-only or disabled sends the WM_CTLCOLOREDIT message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the edit control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CTLCOLORLISTBOX">
            <summary>
            Sent to the parent window of a list box before the system draws the list box. By responding to this message, the parent window can set the text and background colors of the list box by using the specified display device context handle.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CTLCOLORBTN">
            <summary>
            The WM_CTLCOLORBTN message is sent to the parent window of a button before drawing the button. The parent window can change the button's text and background colors. However, only owner-drawn buttons respond to the parent window processing this message.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CTLCOLORDLG">
            <summary>
            The WM_CTLCOLORDLG message is sent to a dialog box before the system draws the dialog box. By responding to this message, the dialog box can set its text and background colors using the specified display device context handle.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CTLCOLORSCROLLBAR">
            <summary>
            The WM_CTLCOLORSCROLLBAR message is sent to the parent window of a scroll bar control when the control is about to be drawn. By responding to this message, the parent window can use the display context handle to set the background color of the scroll bar control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CTLCOLORSTATIC">
            <summary>
            A static control, or an edit control that is read-only or disabled, sends the WM_CTLCOLORSTATIC message to its parent window when the control is about to be drawn. By responding to this message, the parent window can use the specified device context handle to set the text and background colors of the static control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOUSEFIRST">
            <summary>
            Use WM_MOUSEFIRST to specify the first mouse message. Use the PeekMessage() Function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOUSEMOVE">
            <summary>
            The WM_MOUSEMOVE message is posted to a window when the cursor moves. If the mouse is not captured, the message is posted to the window that contains the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.LBUTTONDOWN">
            <summary>
            The WM_LBUTTONDOWN message is posted when the user presses the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.LBUTTONUP">
            <summary>
            The WM_LBUTTONUP message is posted when the user releases the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.LBUTTONDBLCLK">
            <summary>
            The WM_LBUTTONDBLCLK message is posted when the user double-clicks the left mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.RBUTTONDOWN">
            <summary>
            The WM_RBUTTONDOWN message is posted when the user presses the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.RBUTTONUP">
            <summary>
            The WM_RBUTTONUP message is posted when the user releases the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.RBUTTONDBLCLK">
            <summary>
            The WM_RBUTTONDBLCLK message is posted when the user double-clicks the right mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MBUTTONDOWN">
            <summary>
            The WM_MBUTTONDOWN message is posted when the user presses the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MBUTTONUP">
            <summary>
            The WM_MBUTTONUP message is posted when the user releases the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MBUTTONDBLCLK">
            <summary>
            The WM_MBUTTONDBLCLK message is posted when the user double-clicks the middle mouse button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOUSEWHEEL">
            <summary>
            The WM_MOUSEWHEEL message is sent to the focus window when the mouse wheel is rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.XBUTTONDOWN">
            <summary>
            The WM_XBUTTONDOWN message is posted when the user presses the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.XBUTTONUP">
            <summary>
            The WM_XBUTTONUP message is posted when the user releases the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.XBUTTONDBLCLK">
            <summary>
            The WM_XBUTTONDBLCLK message is posted when the user double-clicks the first or second X button while the cursor is in the client area of a window. If the mouse is not captured, the message is posted to the window beneath the cursor. Otherwise, the message is posted to the window that has captured the mouse.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOUSEHWHEEL">
            <summary>
            The WM_MOUSEHWHEEL message is sent to the focus window when the mouse's horizontal scroll wheel is tilted or rotated. The DefWindowProc function propagates the message to the window's parent. There should be no internal forwarding of the message, since DefWindowProc propagates it up the parent chain until it finds a window that processes it.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOUSELAST">
            <summary>
            Use WM_MOUSELAST to specify the last mouse message. Used with PeekMessage() Function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PARENTNOTIFY">
            <summary>
            The WM_PARENTNOTIFY message is sent to the parent of a child window when the child window is created or destroyed, or when the user clicks a mouse button while the cursor is over the child window. When the child window is being created, the system sends WM_PARENTNOTIFY just before the CreateWindow or CreateWindowEx function that creates the window returns. When the child window is being destroyed, the system sends the message before any processing to destroy the window takes place.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ENTERMENULOOP">
            <summary>
            The WM_ENTERMENULOOP message informs an application's main window procedure that a menu modal loop has been entered.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.EXITMENULOOP">
            <summary>
            The WM_EXITMENULOOP message informs an application's main window procedure that a menu modal loop has been exited.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NEXTMENU">
            <summary>
            The WM_NEXTMENU message is sent to an application when the right or left arrow key is used to switch between the menu bar and the system menu.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SIZING">
            <summary>
            The WM_SIZING message is sent to a window that the user is resizing. By processing this message, an application can monitor the size and position of the drag rectangle and, if needed, change its size or position.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CAPTURECHANGED">
            <summary>
            The WM_CAPTURECHANGED message is sent to the window that is losing the mouse capture.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOVING">
            <summary>
            The WM_MOVING message is sent to a window that the user is moving. By processing this message, an application can monitor the position of the drag rectangle and, if needed, change its position.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.POWERBROADCAST">
            <summary>
            Notifies applications that a power-management event has occurred.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DEVICECHANGE">
            <summary>
            Notifies an application of a change to the hardware configuration of a device or the computer.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDICREATE">
            <summary>
            An application sends the WM_MDICREATE message to a multiple-document interface (MDI) client window to create an MDI child window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDIDESTROY">
            <summary>
            An application sends the WM_MDIDESTROY message to a multiple-document interface (MDI) client window to close an MDI child window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDIACTIVATE">
            <summary>
            An application sends the WM_MDIACTIVATE message to a multiple-document interface (MDI) client window to instruct the client window to activate a different MDI child window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDIRESTORE">
            <summary>
            An application sends the WM_MDIRESTORE message to a multiple-document interface (MDI) client window to restore an MDI child window from maximized or minimized size.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDINEXT">
            <summary>
            An application sends the WM_MDINEXT message to a multiple-document interface (MDI) client window to activate the next or previous child window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDIMAXIMIZE">
            <summary>
            An application sends the WM_MDIMAXIMIZE message to a multiple-document interface (MDI) client window to maximize an MDI child window. The system resizes the child window to make its client area fill the client window. The system places the child window's window menu icon in the rightmost position of the frame window's menu bar, and places the child window's restore icon in the leftmost position. The system also appends the title bar text of the child window to that of the frame window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDITILE">
            <summary>
            An application sends the WM_MDITILE message to a multiple-document interface (MDI) client window to arrange all of its MDI child windows in a tile format.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDICASCADE">
            <summary>
            An application sends the WM_MDICASCADE message to a multiple-document interface (MDI) client window to arrange all its child windows in a cascade format.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDIICONARRANGE">
            <summary>
            An application sends the WM_MDIICONARRANGE message to a multiple-document interface (MDI) client window to arrange all minimized MDI child windows. It does not affect child windows that are not minimized.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDIGETACTIVE">
            <summary>
            An application sends the WM_MDIGETACTIVE message to a multiple-document interface (MDI) client window to retrieve the handle to the active MDI child window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDISETMENU">
            <summary>
            An application sends the WM_MDISETMENU message to a multiple-document interface (MDI) client window to replace the entire menu of an MDI frame window, to replace the window menu of the frame window, or both.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ENTERSIZEMOVE">
            <summary>
            The WM_ENTERSIZEMOVE message is sent one time to a window after it enters the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns.
            The system sends the WM_ENTERSIZEMOVE message regardless of whether the dragging of full windows is enabled.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.EXITSIZEMOVE">
            <summary>
            The WM_EXITSIZEMOVE message is sent one time to a window, after it has exited the moving or sizing modal loop. The window enters the moving or sizing modal loop when the user clicks the window's title bar or sizing border, or when the window passes the WM_SYSCOMMAND message to the DefWindowProc function and the wParam parameter of the message specifies the SC_MOVE or SC_SIZE value. The operation is complete when DefWindowProc returns.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DROPFILES">
            <summary>
            Sent when the user drops a file on the window of an application that has registered itself as a recipient of dropped files.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MDIREFRESHMENU">
            <summary>
            An application sends the WM_MDIREFRESHMENU message to a multiple-document interface (MDI) client window to refresh the window menu of the MDI frame window.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_SETCONTEXT">
            <summary>
            Sent to an application when a window is activated. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_NOTIFY">
            <summary>
            Sent to an application to notify it of changes to the IME window. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_CONTROL">
            <summary>
            Sent by an application to direct the IME window to carry out the requested command. The application uses this message to control the IME window that it has created. To send this message, the application calls the SendMessage function with the following parameters.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_COMPOSITIONFULL">
            <summary>
            Sent to an application when the IME window finds no space to extend the area for the composition window. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_SELECT">
            <summary>
            Sent to an application when the operating system is about to change the current IME. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_CHAR">
            <summary>
            Sent to an application when the IME gets a character of the conversion result. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_REQUEST">
            <summary>
            Sent to an application to provide commands and request information. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_KEYDOWN">
            <summary>
            Sent to an application by the IME to notify the application of a key press and to keep message order. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.IME_KEYUP">
            <summary>
            Sent to an application by the IME to notify the application of a key release and to keep message order. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOUSEHOVER">
            <summary>
            The WM_MOUSEHOVER message is posted to a window when the cursor hovers over the client area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.MOUSELEAVE">
            <summary>
            The WM_MOUSELEAVE message is posted to a window when the cursor leaves the client area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCMOUSEHOVER">
            <summary>
            The WM_NCMOUSEHOVER message is posted to a window when the cursor hovers over the nonclient area of the window for the period of time specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.NCMOUSELEAVE">
            <summary>
            The WM_NCMOUSELEAVE message is posted to a window when the cursor leaves the nonclient area of the window specified in a prior call to TrackMouseEvent.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.WTSSESSION_CHANGE">
            <summary>
            The WM_WTSSESSION_CHANGE message notifies applications of changes in session state.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.TABLET_FIRST">
            <summary>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.TABLET_LAST">
            <summary>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CUT">
            <summary>
            An application sends a WM_CUT message to an edit control or combo box to delete (cut) the current selection, if any, in the edit control and copy the deleted text to the clipboard in CF_TEXT format.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.COPY">
            <summary>
            An application sends the WM_COPY message to an edit control or combo box to copy the current selection to the clipboard in CF_TEXT format.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PASTE">
            <summary>
            An application sends a WM_PASTE message to an edit control or combo box to copy the current content of the clipboard to the edit control at the current caret position. Data is inserted only if the clipboard contains data in CF_TEXT format.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CLEAR">
            <summary>
            An application sends a WM_CLEAR message to an edit control or combo box to delete (clear) the current selection, if any, from the edit control.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.UNDO">
            <summary>
            An application sends a WM_UNDO message to an edit control to undo the last operation. When this message is sent to an edit control, the previously deleted text is restored or the previously added text is deleted.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.RENDERFORMAT">
            <summary>
            The WM_RENDERFORMAT message is sent to the clipboard owner if it has delayed rendering a specific clipboard format and if an application has requested data in that format. The clipboard owner must render data in the specified format and place it on the clipboard by calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.RENDERALLFORMATS">
            <summary>
            The WM_RENDERALLFORMATS message is sent to the clipboard owner before it is destroyed, if the clipboard owner has delayed rendering one or more clipboard formats. For the content of the clipboard to remain available to other applications, the clipboard owner must render data in all the formats it is capable of generating, and place the data on the clipboard by calling the SetClipboardData function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DESTROYCLIPBOARD">
            <summary>
            The WM_DESTROYCLIPBOARD message is sent to the clipboard owner when a call to the EmptyClipboard function empties the clipboard.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DRAWCLIPBOARD">
            <summary>
            The WM_DRAWCLIPBOARD message is sent to the first window in the clipboard viewer chain when the content of the clipboard changes. This enables a clipboard viewer window to display the new content of the clipboard.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PAINTCLIPBOARD">
            <summary>
            The WM_PAINTCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area needs repainting.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.VSCROLLCLIPBOARD">
            <summary>
            The WM_VSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's vertical scroll bar. The owner should scroll the clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SIZECLIPBOARD">
            <summary>
            The WM_SIZECLIPBOARD message is sent to the clipboard owner by a clipboard viewer window when the clipboard contains data in the CF_OWNERDISPLAY format and the clipboard viewer's client area has changed size.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.ASKCBFORMATNAME">
            <summary>
            The WM_ASKCBFORMATNAME message is sent to the clipboard owner by a clipboard viewer window to request the name of a CF_OWNERDISPLAY clipboard format.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CHANGECBCHAIN">
            <summary>
            The WM_CHANGECBCHAIN message is sent to the first window in the clipboard viewer chain when a window is being removed from the chain.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.HSCROLLCLIPBOARD">
            <summary>
            The WM_HSCROLLCLIPBOARD message is sent to the clipboard owner by a clipboard viewer window. This occurs when the clipboard contains data in the CF_OWNERDISPLAY format and an event occurs in the clipboard viewer's horizontal scroll bar. The owner should scroll the clipboard image and update the scroll bar values.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.QUERYNEWPALETTE">
            <summary>
            This message informs a window that it is about to receive the keyboard focus, giving the window the opportunity to realize its logical palette when it receives the focus.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PALETTEISCHANGING">
            <summary>
            The WM_PALETTEISCHANGING message informs applications that an application is going to realize its logical palette.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PALETTECHANGED">
            <summary>
            This message is sent by the OS to all top-level and overlapped windows after the window with the keyboard focus realizes its logical palette.
            This message enables windows that do not have the keyboard focus to realize their logical palettes and update their client areas.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.HOTKEY">
            <summary>
            The WM_HOTKEY message is posted when the user presses a hot key registered by the RegisterHotKey function. The message is placed at the top of the message queue associated with the thread that registered the hot key.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PRINT">
            <summary>
            The WM_PRINT message is sent to a window to request that it draw itself in the specified device context, most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PRINTCLIENT">
            <summary>
            The WM_PRINTCLIENT message is sent to a window to request that it draw its client area in the specified device context, most commonly in a printer device context.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.APPCOMMAND">
            <summary>
            The WM_APPCOMMAND message notifies a window that the user generated an application command event, for example, by clicking an application command button using the mouse or typing an application command key on the keyboard.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.THEMECHANGED">
            <summary>
            The WM_THEMECHANGED message is broadcast to every window following a theme change event. Examples of theme change events are the activation of a theme, the deactivation of a theme, or a transition from one theme to another.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CLIPBOARDUPDATE">
            <summary>
            Sent when the contents of the clipboard have changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DWMCOMPOSITIONCHANGED">
            <summary>
            The system will send a window the WM_DWMCOMPOSITIONCHANGED message to indicate that the availability of desktop composition has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DWMNCRENDERINGCHANGED">
            <summary>
            WM_DWMNCRENDERINGCHANGED is called when the non-client area rendering status of a window has changed. Only windows that have set the flag DWM_BLURBEHIND.fTransitionOnMaximized to true will get this message.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DWMCOLORIZATIONCOLORCHANGED">
            <summary>
            Sent to all top-level windows when the colorization color has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.DWMWINDOWMAXIMIZEDCHANGE">
            <summary>
            WM_DWMWINDOWMAXIMIZEDCHANGE will let you know when a DWM composed window is maximized. You also have to register for this message as well. You'd have other windowd go opaque when this message is sent.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETTITLEBARINFOEX">
            <summary>
            Sent to request extended title bar information. A window receives this message through its WindowProc function.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.HANDHELDFIRST">
            <summary>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.HANDHELDLAST">
            <summary>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.AFXFIRST">
            <summary>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.AFXLAST">
            <summary>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PENWINFIRST">
            <summary>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.PENWINLAST">
            <summary>
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.APP">
            <summary>
            The WM_APP constant is used by applications to help define private messages, usually of the form WM_APP+X, where X is an integer value.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.USER">
            <summary>
            The WM_USER constant is used by applications to help define private messages for use by private window classes, usually of the form WM_USER+X, where X is an integer value.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CPL_LAUNCH">
            <summary>
            An application sends the WM_CPL_LAUNCH message to Windows Control Panel to request that a Control Panel application be started.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.CPL_LAUNCHED">
            <summary>
            The WM_CPL_LAUNCHED message is sent when a Control Panel application, started by the WM_CPL_LAUNCH message, has closed. The WM_CPL_LAUNCHED message is sent to the window identified by the wParam parameter of the WM_CPL_LAUNCH message that started the application.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.HITTEST">
            <summary>
            Determines which list-view item, if any, is at a specified position.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.GETITEMW">
            <summary>
            Retrieves some or all of a list-view item's attributes.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.SYSTIMER">
            <summary>
            WM_SYSTIMER is a well-known yet still undocumented message. Windows uses WM_SYSTIMER for internal actions like scrolling.
            </summary>
        </member>
        <member name="F:Jam.Shell.ShellApi.WM.REFLECT">
            <summary>
            Value that is added to WM_ messages while they are processed by .NET.
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellApi.RegistryAccess">
            <summary>A bit-field of flags for specifying registry access.</summary>
        </member>
        <member name="M:Jam.Shell.ShellApi.FindChildWindow(System.IntPtr,System.IntPtr,System.String,System.String)">
            <summary>Searches for the first child window. </summary>
            <param name="hwndParent">The parent window's handle. </param>
            <param name="hwndChildAfter">The child after. Not used. </param>
            <param name="lpszClass">The class to find</param>
            <param name="lpszTitle">The title to find. </param>
            <returns>The found child window, IntPtr.Zero if not found. </returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.GetClassNameOfWindow(System.IntPtr)">
            <summary>Gets the class name of window. </summary>
            <param name="hwnd">The window handle. </param>
            <returns>The class name of the window. </returns>
        </member>
        <member name="P:Jam.Shell.ShellApi.Desktop">
            <summary>
            Get the shellfolder interface of the desktop
            </summary>
            <remarks>IMPORTANT: Make sure not to call Marshal.ReleaseComObject on this! 
            Otherwise there will be exceptions ("disconnected from underlying RCW") when this object gets accessed again.</remarks>
        </member>
        <member name="M:Jam.Shell.ShellApi.INDEXTOOVERLAYMASK(System.Int32)">
            <summary>
            Converts the given index to the corresponding overlay mask.
            </summary>
            <param name="pIndex">The overlay image index.</param>
            <returns>The corresponding overlay mask.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.Succeeded(System.Int32)">
            <summary>
            Returns True if the HResult indicates a success.
            </summary>
            <param name="hResult">The HResult that is to be checked.</param>
            <returns>True if the HResult indicates a success, false otherwise. </returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.Failed(System.Int32)">
            <summary>
            Returns True if the HResult indicates an error.
            </summary>
            <param name="hResult">The HResult that is to be checked.</param>
            <returns>True if the HResult indicates an error, false otherwise. </returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.GetErrorMessageText(System.Int32)">
            <summary>
            Retrieves the error message for a given error ID.
            </summary>
            <param name="pID">The error ID.</param>
            <returns>The error message for a given error ID.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.GetResourceString(System.UInt32,System.String,System.String)">
            <summary>
            Gets a string by its resource ID from a specified .dll
            </summary>
            <param name="pResourceID">The resource ID of the string to be fetched.</param>
            <param name="pDllFileName">The .dll to load the string resource from.</param>
            <param name="pDefault">The default value to return if resource could not be found.</param>
            <returns>The resource string, or null if the ResourceId could not be found in the library.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.GetResourceString(System.UInt32,System.UInt32,System.String,System.String)">
            <summary>
            Gets a string from a list of strings by its resource ID from a specified .dll
            </summary>
            <param name="pResourceID">The resource ID of the string to be fetched.</param>
            <param name="pIndex">The index inside the list.</param>
            <param name="pDllFileName">The .dll to load the string resource from.</param>
            <param name="pDefault">The default value to return if resource could not be found.</param>
            <returns>The resource string, or <c>pDefaukt</c> if the ResourceId could not be found in the library.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.GetResourceStrings(System.UInt32,System.String)">
            <summary>
            Gets a list of strings by its resource ID from a specified .dll
            </summary>
            <param name="pResourceID">The resource ID of the string to be fetched.</param>
            <param name="pDllFileName">The .dll to load the string resource from.</param>
            <returns>The resource string, or null if the ResourceId could not be found in the library.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.GetShell32ResourceString(Jam.Shell.RES_ID_SHELL32)">
            <summary>
            Gets a string by its resource ID from the shell32.dll
            </summary>
            <param name="pResourceID">The resource ID of the string to be fetched.</param>
            <returns>The resource string, or null if the ResourceId could not be found in the library.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.GetResourceBitmap(System.Drawing.Bitmap@,System.String,System.Int32)">
            <summary>
            Gets a bitmap by its resource-id from a DLL.
            </summary>
            <param name="bitmap">The bitmap to load the bitmap into.</param>
            <param name="dll">The DLL to load the bitmap from.</param>
            <param name="id">The resource identifier.</param>
        </member>
        <member name="M:Jam.Shell.ShellApi.PidlFromShellItem(Jam.Shell.IShellItemNative)">
            <summary>
            Returns the Pidl of a IShellItem object.
            </summary>
            <param name="nativeShellItem">A IShellItem object</param>
            <returns>The Pidl or IntPtr.Zero if the method failed.</returns>
        </member>
        <member name="M:Jam.Shell.ShellApi.FiletimeToDateTime(System.Runtime.InteropServices.ComTypes.FILETIME)">
            <summary>Converts the given FILETIME to a DateTime. </summary>
            <param name="pFileTime">The file time. </param>
            <returns>A DateTime. </returns>
        </member>
        <member name="T:Jam.Shell.RES_ID_SHELL32">
            <summary>
            This enumeration describes resource ids that are used throughout the ShellBrowser project
            in order to access resources from the Shell32.dll
            <see cref="M:Jam.Shell.ShellApi.GetShell32ResourceString(Jam.Shell.RES_ID_SHELL32)"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.UNAVAILABLE_ACCESS">
            <summary>unavailable access</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.NAME">
            <summary>The "Name" resource</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.IN_FOLDER">
            <summary>The "In Folder" resource</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.NEW_FOLDER">
            <summary>The "New Folder" resource</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.NEW_FOLDER_VISTA">
            <summary>The "New Folder" resource</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.NEW_SHORTCUT">
            <summary>The "New Shortcut" resource</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CONTROL_PANEL">
            <summary>
            The "control panel" resource </summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.ALL_CONTROL_PANEL_ITEMS">
            <summary>The "all control panel elements" resource </summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.PREVIEW_SELECT_FILE">
            <summary>
            Select a file to preview
            </summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.PREVIEW_NO_PREVIEW_AVAILABLE">
            <summary>
            No preview available
            </summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.PREVIEW_FILE_IN_USE">
            <summary>
            Preview cannot be shown because file is in use
            </summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.PREVIEW_ERROR_IN_XY">
            <summary>
            Preview cannot be shown because of an error in %s
            </summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.PREVIEW_NOT_POSSIBLE">
            <summary>
            For this file no preview can be shown.
            </summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.PREVIEW_NO_PREVIEW_AT_THIS_LOCATION">
            <summary>
            Files at this location cannot be previewed.
            </summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.SEARCH_FOR">
            <summary>
            Search for "%s"
            </summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_PREVIEW">
            <summary>Preview</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_VIEW">
            <summary>Context menu view</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_VIEW_WIN2K">
            <summary>Context menu view on windows 2000</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_VIEW_THUMBNAIL">
            <summary>Context menu view - thumbnail</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_VIEW_THUMBNAIL_WIN2K">
            <summary>Context menu view - thumbnail win2k</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_VIEW_MEDIUM">
            <summary>Context menu view</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_VIEW_BIG">
            <summary>Context menu view</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_VIEW_SMALL">
            <summary>Context menu view</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_VIEW_LIST">
            <summary>Context menu view</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_VIEW_DETAILS">
            <summary>Context menu view</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_VIEW_TILES">
            <summary>Context menu view</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_REFRESH">
            <summary>Context menu refresh</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_REFRESH_WIN2K">
            <summary>Context menu refresh on windows 2000</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_INSERT">
            <summary>Context menu insert</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_INSERTASLINK">
            <summary>Context menu insert as link</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_NEW">
            <summary>Context menu new</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_NEWFOLDER">
            <summary>Context menu new folder</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_PROPERTIES">
            <summary>Context menu properties</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_ARRANGEBY_WIN7">
            <summary>Context menu arrange icons by for Win7OrLater</summary>
        </member>
        <member name="F:Jam.Shell.RES_ID_SHELL32.CTX_ARRANGEBY_XP">
            <summary>Context menu arrange icons by for XP and Vista - workaround for bug #2267. E.g. replace "%s" by String.Empty or "..." like in ShellList.ArrangeIcons.</summary>
        </member>
        <member name="T:Jam.Shell.DeviceCap">
            <summary>
            Flags that can be used for <see cref="M:Jam.Shell.ShellApi.NativeMethods.GetDeviceCaps(System.IntPtr,System.Int32)"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.DeviceCap.LOGPIXELSX">
            <summary>
            Logical pixels inch in X
            </summary>
        </member>
        <member name="F:Jam.Shell.DeviceCap.LOGPIXELSY">
            <summary>
            Logical pixels inch in Y
            </summary>
        </member>
        <member name="T:Jam.Shell.VistaControl">
            <summary>
            Control style and notification constants
            </summary>
        </member>
        <member name="M:Jam.Shell.VistaControl.SHCreateItemFromParsingName(System.String,System.IntPtr,System.Guid,Jam.Shell.IShellItemNative@)">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb762134(VS.85).aspx
            </summary>
            <param name="pszPath"></param>
            <param name="pbc"></param>
            <param name="riid"></param>
            <param name="ppv"></param>
        </member>
        <member name="M:Jam.Shell.VistaControl.SHCreateItemFromIDList(System.IntPtr,System.Guid,Jam.Shell.IShellItemNative@)">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb762133(VS.85).aspx
            </summary>
            <param name="pidl">item id list</param>
            <param name="riid">Guid of the requested interface.</param>
            <param name="ppv"></param>
        </member>
        <member name="M:Jam.Shell.VistaControl.SHCreateShellItemArrayFromShellItem(Jam.Shell.IShellItemNative,System.Guid@,Jam.Shell.IShellItemArray@)">
            <summary>
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb762147(v=vs.85).aspx
            </summary>
            <param name="psi"></param>
            <param name="riid"></param>
            <param name="iShellItemArray"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.VistaControl.SetWindowThemeChecked(System.IntPtr,System.String,System.String)">
            <summary>
            This method is only available from xp and later versions
            If the os version is lower, the call to this method is ignored.
            </summary>
            <param name="hWnd"></param>
            <param name="textSubAppName"></param>
            <param name="textSubIdList"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.VistaControl.SendMessage(System.IntPtr,Jam.Shell.VistaConstsTreeView,System.IntPtr,System.IntPtr)">
            <summary>
            Overload for the Treeview Enumeration. 
            </summary>
        </member>
        <member name="M:Jam.Shell.VistaControl.SendMessage(System.IntPtr,Jam.Shell.VistaConstsListView,System.IntPtr,System.IntPtr)">
            <summary>
            Overload for the Listview Enumeration
            </summary>
        </member>
        <member name="M:Jam.Shell.VistaControl.SendMessage(System.IntPtr,Jam.Shell.VistaConstsListView,Jam.Shell.VistaConstsListView,Jam.Shell.VistaConstsListView)">
            <summary>
            Overload for the Listview Enumeration
            </summary>
        </member>
        <member name="T:Jam.Shell.VistaConstsTreeView">
            <summary>
            Constants for the messages that may be send to a treeview
            </summary>
        </member>
        <member name="T:Jam.Shell.VistaConstsListView">
            <summary>
            Constants for the messages that may be send to a listview
            </summary>
        </member>
        <member name="T:Jam.Shell.VistaConstsProgressBar">
            <summary>
            Constants for the messages that may be send to a progressbar
            </summary>
        </member>
        <member name="T:Jam.Shell.VistaConstsButtonStyle">
            <summary>
            Constants for the messages that may be send to button controls
            </summary>
        </member>
        <member name="T:Jam.Shell.WNetGetConnectionResultCodes">
            <summary>
            ResultCodes of the <see cref="M:Jam.Shell.ShellApi.NativeMethods.WNetGetConnection(System.String,System.Text.StringBuilder,System.Int32@)"/> api call.
            </summary>
        </member>
        <member name="F:Jam.Shell.WNetGetConnectionResultCodes.NO_ERROR">
            <summary>
            No error occured.
            </summary>
        </member>
        <member name="F:Jam.Shell.WNetGetConnectionResultCodes.ERROR_BAD_DEVICE">
            <summary>
            The bad devicename has been passed to the function
            </summary>
        </member>
        <member name="F:Jam.Shell.WNetGetConnectionResultCodes.ERROR_CONNECTION_UNAVAIL">
            <summary>
            The network connection is unavailable
            </summary>
        </member>
        <member name="F:Jam.Shell.WNetGetConnectionResultCodes.ERROR_EXTENDED_ERROR">
            <summary></summary>
        </member>
        <member name="F:Jam.Shell.WNetGetConnectionResultCodes.ERROR_MORE_DATA">
            <summary></summary>
        </member>
        <member name="F:Jam.Shell.WNetGetConnectionResultCodes.ERROR_NOT_SUPPORTED">
            <summary>
            Feature/Operation not supported
            </summary>
        </member>
        <member name="F:Jam.Shell.WNetGetConnectionResultCodes.ERROR_NO_NET_OR_BAD_PATH">
            <summary>
            Not network available or bad path
            </summary>
        </member>
        <member name="F:Jam.Shell.WNetGetConnectionResultCodes.ERROR_NO_NETWORK">
            <summary>
            No network available
            </summary>
        </member>
        <member name="F:Jam.Shell.WNetGetConnectionResultCodes.ERROR_NOT_CONNECTED">
            <summary>
            System is not connected to the share
            </summary>
        </member>
        <member name="T:Jam.Shell.POINTL">
            <summary>
            The Windows POINTL structure
            </summary>
        </member>
        <member name="F:Jam.Shell.POINTL.X">
            <summary>
            X position
            </summary>
        </member>
        <member name="F:Jam.Shell.POINTL.Y">
            <summary>
            Y position
            </summary>
        </member>
        <member name="M:Jam.Shell.POINTL.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct a point structure
            </summary>
            <param name="x"></param>
            <param name="y"></param>
        </member>
        <member name="T:Jam.Shell.POINT">
            <summary>
            The point structure as it is used in the com-api
            </summary>
        </member>
        <member name="F:Jam.Shell.POINT.X">
            <summary>
            X position
            </summary>
        </member>
        <member name="F:Jam.Shell.POINT.Y">
            <summary>
            Y position
            </summary>
        </member>
        <member name="M:Jam.Shell.POINT.#ctor(System.Int32,System.Int32)">
            <summary>
            Construct a point structure
            </summary>
            <param name="x">x position of the point</param>
            <param name="y">y position of the point</param>
        </member>
        <member name="M:Jam.Shell.POINT.op_Implicit(Jam.Shell.POINT)~System.Drawing.Point">
            <summary>
            Define implicit cast from POINT to Point
            </summary>
            <param name="p">the cast source</param>
            <returns>new <see cref="T:System.Drawing.Point"/></returns>
        </member>
        <member name="M:Jam.Shell.POINT.op_Implicit(System.Drawing.Point)~Jam.Shell.POINT">
            <summary>
            Define implicit cast from Point to POINT
            </summary>
            <param name="p">the cast source</param>
            <returns>new <see cref="T:Jam.Shell.POINT"/> structure</returns>
        </member>
        <member name="M:Jam.Shell.POINT.op_Equality(Jam.Shell.POINT,Jam.Shell.POINT)">
            <summary>
            Equality operator == for <see cref="T:Jam.Shell.POINT"/> structures
            </summary>
            <param name="a">point a</param><param name="b">point b</param>
            <returns>true if a's and b's coordinates are equal</returns>
        </member>
        <member name="M:Jam.Shell.POINT.op_Inequality(Jam.Shell.POINT,Jam.Shell.POINT)">
            <summary>
            Inequality operator == for <see cref="T:Jam.Shell.POINT"/> structures
            </summary>
            <param name="a">point a</param><param name="b">point b</param>
            <returns>returns true if a's and b's coordinates differ</returns>
        </member>
        <member name="M:Jam.Shell.POINT.Equals(System.Object)">
            <summary>
            Checks for equality.
            Implemented to fulfill the MS-CodeAnalysis Guidelines
            </summary>
            <param name="obj">other object</param>
            <returns>true if obj equals this</returns>
        </member>
        <member name="M:Jam.Shell.POINT.Equals(Jam.Shell.POINT)">
            <summary>
            Checks for equality.
            Implemented to fulfill the MS-CodeAnalysis Guidelines
            </summary>
            <param name="p">other point</param>
            <returns>true if p equals this</returns>
        </member>
        <member name="M:Jam.Shell.POINT.GetHashCode">
            <summary>
            Determine the hashcode for the object
            </summary>
            <returns>a hashcode of the point structure</returns>
        </member>
        <member name="T:Jam.Shell.RECT">
            <summary>
            http://msdn.microsoft.com/en-us/library/ms536136.aspx
            </summary>
        </member>
        <member name="F:Jam.Shell.RECT.left">
            <summary>Specifies the x-coordinate of the upper-left corner of the rectangle.</summary>
        </member>
        <member name="F:Jam.Shell.RECT.top">
            <summary>Specifies the y-coordinate of the upper-left corner of the rectangle.</summary>
        </member>
        <member name="F:Jam.Shell.RECT.right">
            <summary>Specifies the x-coordinate of the lower-right corner of the rectangle.</summary>
        </member>
        <member name="F:Jam.Shell.RECT.bottom">
            <summary>Specifies the y-coordinate of the lower-right corner of the rectangle.</summary>
        </member>
        <member name="M:Jam.Shell.RECT.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
            Construct a RECT struct from a <see cref="T:System.Drawing.Rectangle"/>
            </summary>
            <param name="x">X position of the rectangle</param>
            <param name="y">Y position of the rectangle</param>
            <param name="width">Width of the rectangle</param>
            <param name="height">Height of the rectangle</param>
        </member>
        <member name="M:Jam.Shell.RECT.#ctor(System.Drawing.Rectangle)">
            <summary>Construct a RECT struct from a <see cref="T:System.Drawing.Rectangle"/></summary>
            <param name="r">The Rectangle to process.</param>
        </member>
        <member name="M:Jam.Shell.RECT.op_Implicit(Jam.Shell.RECT)~System.Drawing.Rectangle">
            <summary>Converts a <see cref="T:Jam.Shell.RECT"/> to a <see cref="T:System.Drawing.Rectangle"/> struct.</summary>
            <param name="pRect">The <see cref="T:Jam.Shell.RECT"/> to convert.</param>
            <returns>The result of the operation.</returns>
        </member>
        <member name="T:Jam.Shell.ChangeErrorMode">
            <summary>  Can be used to temporarily change the system error mode for the current process
            Usage: using(new ChangeErrorMode(ErrorModes.FailCriticalErrors)) { ... } </summary>
        </member>
        <member name="M:Jam.Shell.ChangeErrorMode.SafeNativeMethods.SetErrorMode(System.Int32)">
            <summary>
            Controls whether the system will handle the specified types of serious errors or whether the process will handle them.
            </summary>
            <remarks>Process-wide.</remarks>
        </member>
        <member name="T:Jam.Shell.HDITEM">
            <summary>
            Translation of the Win32 struct HFITEM fpr dealing with the header of a ListView.
            </summary>
        </member>
        <member name="T:Jam.Shell.LVITEM">
            <summary>
            translation of the Win32 struct LVITEM for dealing with items in a ListView.
            </summary>
        </member>
        <member name="T:Jam.Shell.TVITEM">
            <summary>
            translation of the Win32 struct TVITEM for dealing with items in a TreeView.
            </summary>
        </member>
        <member name="T:Jam.Shell.TVITEMEX">
            <summary>
            translation of the Win32 struct TVITEMEX for dealing with items in a TreeView.
            </summary>
        </member>
        <member name="T:Jam.Shell.SHCOLUMNID">
            <summary>
            Specifies the FMTID/PID identifier of a column that will be displayed by the Windows Explorer Details view. 
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnName">
            <summary>
            SHCOLUMNID for the 'Name' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnSize">
            <summary>
            SHCOLUMNID for the 'Size' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnInvalid">
            <summary>Represents an invalid TShColumId. This constant is used e.g. for error reporting or hiding columns.</summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnType">
            <summary>
            SHCOLUMNID for the 'Type' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnPerceivedType">
            <summary>
            SHCOLUMNID for the 'Perceived Type' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnWriteTime">
            <summary>
            SHCOLUMNID for the 'Write Time' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnAttributes">
            <summary>
            SHCOLUMNID for the 'Attributes' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnCreateTime">
            <summary>
            SHCOLUMNID for the 'Create Time' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnAccessTime">
            <summary>
            SHCOLUMNID for 'Access Time' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnVolumeFullCapacity">
            <summary>
            SHCOLUMNID for the 'Full Capacity' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnVolumeFreeSize">
            <summary>
            SHCOLUMNID for the 'Free Size' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnVolumePercentageOccupied">
            <summary>
            SHCOLUMNID for the 'Percentage Occupied' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnVolumeFilesystem">
            <summary>
            SHCOLUMNID for the 'Filesystem' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnParentFolder">
            <summary>
            SHCOLUMNID for 'Folderpath' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnFolderName">
            <summary>
            SHCOLUMNID for 'Folder Name' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnElementType">
            <summary>
            SHCOLUMNID for 'Element Type' column.
            </summary>
            <remarks>see http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx </remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnNetworkAddress">
            <summary>
            SHCOLUMNID for 'Networkaddress' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnMediaRating">
            <summary>
            SHCOLUMNID for 'Rating' column.
            </summary>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnMusicAlbum">
            <summary>
            SHCOLUMNID for 'Album' column.
            </summary>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnMusicYear">
            <summary>
            SHCOLUMNID for 'Year' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnMusicGenre">
            <summary>
            SHCOLUMNID for 'Genre' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnMusicAlbumArtist">
            <summary>
            SHCOLUMNID for 'Album Artist' column.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnMusicArtist">
            <summary>
            SHCOLUMNID for 'Artist' column.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnMusicBeatsPerMinute">
            <summary>
            SHCOLUMNID for 'Beats per minute' column.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnMusicLyrics">
            <summary>
            SHCOLUMNID for 'Lyrics' column.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnMusicTitlenumber">
            <summary>
            SHCOLUMNID for 'Titlenumber' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnAudioLength">
            <summary>
            SHCOLUMNID for 'Length' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnAudioBitrate">
            <summary>
            SHCOLUMNID for 'Bitrate' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnSummaryKeywords">
            <summary>
            SHCOLUMNID for 'Keywords' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnSummaryAuthors">
            <summary>
            SHCOLUMNID for 'Authors' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnSummaryTitle">
            <summary>
            SHCOLUMNID for 'Title' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnSummaryComments">
            <summary>
            SHCOLUMNID for 'Comments' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnSummaryTopic">
            <summary>
            SHCOLUMNID for 'Topic' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnOwner">
            <summary>
            SHCOLUMNID for 'Owner' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
            <remarks>only available for VistaOrLater</remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnLinkTarget">
            <summary>
            SHCOLUMNID for 'Link target' column.
            </summary>
            <remarks><see href="http://msdn.microsoft.com/en-us/library/bb759748%28VS.85%29.aspx ">MSDN SHCOLUMNID</see></remarks>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnCategory">
            <summary>
            SHCOLUMNID for the "Category" column in Control Panel
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnFileDescription">
            <summary>
            SHCOLUMNID for the FileDescription
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnImageBitDepth">
            <summary>
            SHCOLUMNID for the Bitdepth of images.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnImageDimensions">
            <summary>
            SHCOLUMNID for the dimensions of images.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnImageHorizontalResolution">
            <summary>
            SHCOLUMNID for the horizontal resolution of images.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnImageHorizontalSize">
            <summary>
            SHCOLUMNID for the horizontal size of images.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnImageVerticalResolution">
            <summary>
            SHCOLUMNID for the vertical resolution of images
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnImageVerticalSize">
            <summary>
            SHCOLUMNID for the vertical size of images.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnImageDateImported">
            <summary>
            SHCOLUMNID for the import date of images.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnImageColorSpace">
            <summary>
            SHCOLUMNID for the color space of images.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.ShellColumnImageCompression">
            <summary>
            SHCOLUMNID for the compression of images.
            </summary>
        </member>
        <member name="M:Jam.Shell.SHCOLUMNID.#ctor(System.Guid,System.Int32)">
            <summary>
            Constructor for SHCOLUMNID.
            </summary>
            <param name="p_fmtid">The FMTID of the SHColumnID</param>
            <param name="p_pid">The PID of the SHColumnID</param>
        </member>
        <member name="M:Jam.Shell.SHCOLUMNID.#ctor(System.String)">
            <summary>
            Constructor for SHCOLUMNID.
            </summary>
            <param name="pCanonicalName">Canonical property name e.g. System.Music.Artist</param>
        </member>
        <member name="M:Jam.Shell.SHCOLUMNID.CreateCustomColumnID(System.Int32)">
            <summary>
            Creates a CustomColumnId. The caller is responsible to keep the passed pPid unique.
            </summary>
            <param name="pPid">The pid of the resulting object. The fmtId is a static value identifying a custom column.</param>
            <returns>A SHCOLUMNID consting of a static value as formatID and the passed value for pid.</returns>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.fmtid">
            <summary>
            A property set format identifier or FMTID (a GUID).
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCOLUMNID.pid">
            <summary>
            The column's property identifier (PID).
            </summary>
        </member>
        <member name="M:Jam.Shell.SHCOLUMNID.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="M:Jam.Shell.SHCOLUMNID.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/>, is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object" /> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object" /> is equal to this instance; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Jam.Shell.SHCOLUMNID.op_Equality(Jam.Shell.SHCOLUMNID,Jam.Shell.SHCOLUMNID)">
            <summary>
            Equality operator == for <see cref="T:Jam.Shell.SHCOLUMNID"/> structures
            </summary>
            <param name="pShellColumnId1">First <see cref="T:Jam.Shell.SHCOLUMNID"/>.</param>
            <param name="pShellColumnId2">Second <see cref="T:Jam.Shell.SHCOLUMNID"/>.</param>
            <returns>true, if the passed values are equal, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.SHCOLUMNID.op_Inequality(Jam.Shell.SHCOLUMNID,Jam.Shell.SHCOLUMNID)">
            <summary>
            Inequality operator != for <see cref="T:Jam.Shell.SHCOLUMNID"/> structures
            </summary>
            <param name="pShellColumnId1">First <see cref="T:Jam.Shell.SHCOLUMNID"/>.</param>
            <param name="pShellColumnId2">Second <see cref="T:Jam.Shell.SHCOLUMNID"/>.</param>
            <returns>true, if the passed values are unequal, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.SHCOLUMNID.ToString">
            <summary>
            Overrides the ToString() method.
            </summary>
            <returns>A string containing the fmtid and pid of the SHCOLUMNID.</returns>
        </member>
        <member name="M:Jam.Shell.SHCOLUMNID.IsInvalid">
            <summary>
            Determines whether this instance is invalid, i.e. matches <see cref="F:Jam.Shell.SHCOLUMNID.ShellColumnInvalid"/>
            </summary>
            <returns>true if this instance equals <see cref="F:Jam.Shell.SHCOLUMNID.ShellColumnInvalid"/>, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.SHCOLUMNID.IsCustomId">
            <summary>
            Determines whether this instance identifies a custom column.
            </summary>
            <returns>true if this instance identifies a custom column, false otherwise.</returns>
        </member>
        <member name="T:Jam.Shell.SHIL">
            <summary>
            Imagelist size enumeration
            </summary>
        </member>
        <member name="F:Jam.Shell.SHIL.SHIL_LARGE">
            <summary>0x0. 
            The image size is normally 32x32 pixels. However, if the Use large icons option is selected 
            from the Effects section of the Appearance tab in Display Properties, the image is 48x48 pixels.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHIL.SHIL_SMALL">
            <summary>0x1. 
            These images are the Shell standard small icon size of 16x16, but the size can be customized by the user.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHIL.SHIL_EXTRALARGE">
            <summary>0x2.
            These images are the Shell standard extra-large icon size. This is typically 48x48, but the size can be customized by the user.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHIL.SHIL_SYSSMALL">
            <summary>0x3.
            These images are the size specified by GetSystemMetrics called with SM_CXSMICON and GetSystemMetrics called with SM_CYSMICON.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHIL.SHIL_JUMBO">
            <summary>0x4.
            Windows Vista and later. The image is normally 256x256 pixels.
            </summary>
        </member>
        <member name="T:Jam.Shell.QITIPF">
            <summary>
            Flag collection influencing the retrieval of InfoTips.
            </summary>
        </member>
        <member name="T:Jam.Shell.SIIGBF">
            <summary>
            Flags used in <see cref="T:Jam.Shell.IShellItemImageFactory"/>
            </summary>
        </member>
        <member name="T:Jam.Shell.SFGAOF">
            <summary>
            Indicate flags used by IShellFolder2 GetAttributesOf() method to specify the requested attributes.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_CANCOPY">
            <summary>
            The specified items can be copied.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_CANMOVE">
            <summary>
            The specified items can be moved.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_CANLINK">
            <summary>
            Shortcuts can be created for the specified items.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_STORAGE">
            <summary>
            The specified items can be bound to an IStorage interface through BindToObject(IID_IStorage)
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_CANRENAME">
            <summary>
            The specified items can be renamed.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_CANDELETE">
            <summary>
            The specified items can be deleted.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_HASPROPSHEET">
            <summary>
            The specified items have property sheets.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_DROPTARGET">
            <summary>
            The specified items are drop targets.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_CAPABILITYMASK">
            <summary>
            This flag is a mask for the capability flags.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_ENCRYPTED">
            <summary>
            The specified items are encrypted.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_ISSLOW">
            <summary>
            Indicates that accessing the object (through IStream or other storage interfaces) is a slow operation. Applications should avoid accessing items flagged with SFGAO_ISSLOW.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_GHOSTED">
            <summary>
            The specified items are ghosted icons.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_LINK">
            <summary>
            The specified items are shortcuts.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_SHARE">
            <summary>
            The specified folder objects are shared.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_READONLY">
            <summary>
            The specified items are read-only. In the case of folders, this means that new items cannot be created in those folders.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_HIDDEN">
            <summary>
            The item is hidden and should not be displayed unless the Show hidden files and folders option is enabled in Folder Settings.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_DISPLAYATTRMASK">
            <summary>
            This flag is a mask for the display attributes.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_FILESYSANCESTOR">
            <summary>
            The specified folders contain one or more file system folders.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_FOLDER">
            <summary>
            The specified items are folders. (supports BindToObject(IID_IShellFolder))
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_FILESYSTEM">
            <summary>
            The specified folders or file objects are part of the file system (that is, they are files, directories, or root directories).
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_HASSUBFOLDER">
            <summary>
            The specified folders have subfolders (and are, therefore, expandable in the left pane of Windows Explorer).
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_VALIDATE">
            <summary>
            When specified as input, SFGAO_VALIDATE instructs the folder to validate that the items pointed to by the contents of apidl exist.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_REMOVABLE">
            <summary>
            The specified items are on removable media or are themselves removable devices.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_COMPRESSED">
            <summary>
            The specified items are compressed.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_BROWSABLE">
            <summary>
            The specified items can be browsed in place.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_NONENUMERATED">
            <summary>
            The items are nonenumerated items.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_NEWCONTENT">
            <summary>
            The objects contain new content.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_CANMONIKER">
            <summary>
            It is possible to create monikers for the specified file objects or folders.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_HASSTORAGE">
            <summary>
            Not supported.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_STREAM">
            <summary>        
            Indicates that the item has a stream associated with it that can be accessed by a call to BindToObject(IID_IStream) with IID_IStream in the riid parameter.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_STORAGEANCESTOR">
            <summary>
            Children of this item are accessible through IStream or IStorage. Those children are flagged with SFGAO_STORAGE or SFGAO_STREAM.
            </summary>
        </member>
        <member name="F:Jam.Shell.SFGAOF.SFGAO_STORAGECAPMASK">
            <summary>
            This flag is a mask for the storage capability attributes.
            </summary>
        </member>
        <member name="T:Jam.Shell.CSIDL">
            <summary>
            This structure is replaced by the KNOWNFOLDERID constants (http://msdn.microsoft.com/en-us/library/bb762584(VS.85).aspx)
            under vista and later, the csidl is maintained for backwards compatibility
            </summary>
        </member>
        <member name="T:Jam.Shell.GPFIDL_FLAGS">
            <summary>
            SHGetPathFromIDListEx returns a win32 file system path for the item in the name space
            and has a few special cases that include returning UNC printer names too
            </summary>
        </member>
        <member name="F:Jam.Shell.GPFIDL_FLAGS.GPFIDL_DEFAULT">
            <summary>normal Win32 file name, servers and drive roots included</summary>
        </member>
        <member name="F:Jam.Shell.GPFIDL_FLAGS.GPFIDL_ALTNAME">
            <summary>short file name</summary>
        </member>
        <member name="F:Jam.Shell.GPFIDL_FLAGS.GPFIDL_UNCPRINTER">
            <summary>include UNC printer names too (non file system item)</summary>
        </member>
        <member name="F:Jam.Shell.ErrorModes.Default">
            <summary>Use the system default, which is to display all error dialog boxes.</summary>
        </member>
        <member name="F:Jam.Shell.ErrorModes.FailCriticalErrors">
            <summary>
            The system does not display the critical-error-handler message box. 
            Instead, the system sends the error to the calling process.
            </summary>
        </member>
        <member name="F:Jam.Shell.ErrorModes.NoGpFaultErrorBox">
            <summary>
            64-bit Windows:  The system automatically fixes memory alignment faults and makes them 
            invisible to the application. It does this for the calling process and any descendant processes.
            After this value is set for a process, subsequent attempts to clear the value are ignored.
            </summary>
        </member>
        <member name="F:Jam.Shell.ErrorModes.NoAlignmentFaultExcept">
            <summary>
            The system does not display the general-protection-fault message box. 
            This flag should only be set by debugging applications that handle general 
            protection (GP) faults themselves with an exception handler.
            </summary>
        </member>
        <member name="F:Jam.Shell.ErrorModes.NoOpenFileErrorBox">
            <summary>
            The system does not display a message box when it fails to find a file. 
            Instead, the error is returned to the calling process.
            </summary>
        </member>
        <member name="T:Jam.Shell.FILE_ATTRIBUTES">
            <summary>
            Attribute information for the file or directory.
            </summary>
        </member>
        <member name="F:Jam.Shell.FILE_ATTRIBUTES.FILE_ATTRIBUTE_DIRECTORY">
            <summary>
            Indicates that the handle identifies a directory.
            </summary>
        </member>
        <member name="F:Jam.Shell.FILE_ATTRIBUTES.FILE_ATTRIBUTE_NORMAL">
            <summary>
            Indicates that the file or directory has no other attributes set. This attribute is valid only if used alone.
            </summary>
        </member>
        <member name="T:Jam.Shell.HDIFLAGS">
            <summary>
            Parameters for the Win32 ListView Headers
            </summary>
        </member>
        <member name="T:Jam.Shell.LVHITTESTINFO">
            <summary>
            http://msdn.microsoft.com/en-us/library/ms930138.aspx
            </summary>
        </member>
        <member name="T:Jam.Shell.NM">
            <summary>
            https://msdn.microsoft.com/de-de/library/windows/desktop/bb775528(v=vs.85).aspx
            </summary>
        </member>
        <member name="T:Jam.Shell.NMHDR">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb775514(VS.85).aspx
            http://www.pinvoke.net/default.aspx/Structures/NMHDR.html
            </summary>
        </member>
        <member name="T:Jam.Shell.NMTBCUSTOMDRAW">
            <summary>
            https://msdn.microsoft.com/de-de/library/windows/desktop/bb760450(v=vs.85).aspx
            </summary>
        </member>
        <member name="T:Jam.Shell.CDRF">
            <summary>
            Possible <see cref="F:Jam.Shell.NM.NM_CUSTOMDRAW"/> return values.
            </summary>
        </member>
        <member name="T:Jam.Shell.CDDS">
            <summary>
            Possible values of <see cref="F:Jam.Shell.NMCUSTOMDRAW.dwDrawStage"/>.
            </summary>
        </member>
        <member name="T:Jam.Shell.CDIS">
            <summary>
            Possible values of <see cref="F:Jam.Shell.NMCUSTOMDRAW.uItemState"/>.
            </summary>
        </member>
        <member name="T:Jam.Shell.TBN">
            <summary>
            Possible toolbar notifications.
            </summary>
        </member>
        <member name="T:Jam.Shell.TB">
            <summary>
            Possible toolbar messages.
            </summary>
        </member>
        <member name="T:Jam.Shell.TBSTATE">
            <summary>
            Possible values for <see cref="F:Jam.Shell.TBBUTTONINFO.fsState"/>
            </summary>
        </member>
        <member name="T:Jam.Shell.BTNS">
            <summary>
            Possible values for <see cref="F:Jam.Shell.TBBUTTONINFO.fsStyle"/>
            </summary>
        </member>
        <member name="T:Jam.Shell.TBSTYLE">
            <summary>
            Possible toolbar styles.
            </summary>
        </member>
        <member name="T:Jam.Shell.TBSTYLE_EX">
            <summary>
            Possible toolbar extended styles.
            </summary>
        </member>
        <member name="T:Jam.Shell.TBIF">
            <summary>
            Possible values of <see cref="F:Jam.Shell.TBBUTTONINFO.dwMask"/>.
            </summary>
        </member>
        <member name="T:Jam.Shell.TBNF">
            <summary>
            Possible values of <see cref="F:Jam.Shell.NMTBDISPINFO.dwMask"/>.
            </summary>
        </member>
        <member name="T:Jam.Shell.HICF">
            <summary>
            Possible values of <see cref="F:Jam.Shell.NMTBHOTITEM.dwFlags"/>.
            </summary>
        </member>
        <member name="T:Jam.Shell.RB">
            <summary>
            Possible Rebar messages.
            </summary>
        </member>
        <member name="T:Jam.Shell.RBN">
            <summary>
            Possible rebar notifications.
            </summary>
        </member>
        <member name="T:Jam.Shell.RBS">
            <summary>
            Possible rebar styles.
            </summary>
        </member>
        <member name="T:Jam.Shell.RBBIM">
            <summary>
            Possible values for <see cref="F:Jam.Shell.REBARBANDINFO.fMask"/>.
            </summary>
        </member>
        <member name="T:Jam.Shell.RBBS">
            <summary>
            Possible values for <see cref="F:Jam.Shell.REBARBANDINFO.fStyle"/>.
            </summary>
        </member>
        <member name="T:Jam.Shell.RBHT">
            <summary>
            Possible values of <see cref="F:Jam.Shell.RBHITTESTINFO.flags"/>
            </summary>
        </member>
        <member name="T:Jam.Shell.CCS">
            <summary>
            Common control styles.
            </summary>
        </member>
        <member name="T:Jam.Shell.HT">
            <summary>
            Hittest code of WM_NCHITTEST and WM_SETCURSOR messages.
            </summary>
        </member>
        <member name="T:Jam.Shell.TTN">
            <summary>
            Tooltip messages
            </summary>
        </member>
        <member name="T:Jam.Shell.LVS_EX">
            <summary>
            Extended ListView styles. See http://msdn.microsoft.com/en-us/library/windows/desktop/bb774732%28v=vs.85%29.aspx.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_GRIDLINES">
            <summary>
            Version 4.70. Displays gridlines around items and subitems. This style is available only 
            in conjunction with the LVS_REPORT style.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_SUBITEMIMAGES">
            <summary>
            Version 4.70. Allows images to be displayed for subitems. This style is available only 
            in conjunction with the LVS_REPORT style.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_CHECKBOXES">
            <summary>
            Version 4.70. Enables check boxes for items in a list-view control. When set to this style, 
            the control creates and sets a state image list with two images using DrawFrameControl. 
            State image 1 is the unchecked box, and state image 2 is the checked box. Setting the state 
            image to zero removes the check box. Version 6.00 Check boxes are visible and functional 
            with all list view modes except the tile view mode introduced in ComCtl32.dll version 6. 
            Clicking a checkbox in tile view mode only selects the item; the state does not change.
            You can obtain the state of the check box for a given item with ListView_GetCheckState. 
            To set the check state, use ListView_SetCheckState. If this style is set, the list-view control
            automatically toggles the check state when the user clicks the check box or presses the space bar.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_TRACKSELECT">
            <summary>
            Version 4.70. Enables hot-track selection in a list-view control. Hot track selection means that 
            an item is automatically selected when the cursor remains over the item for a certain period of time. 
            The delay can be changed from the default system setting with a LVM_SETHOVERTIME message. 
            This style applies to all styles of list-view control. You can check whether hot-track selection is 
            enabled by calling SystemParametersInfo.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_HEADERDRAGDROP">
            <summary>
            Version 4.70. Enables drag-and-drop reordering of columns in a list-view control. This style is only 
            available to list-view controls that use the LVS_REPORT style.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_FULLROWSELECT">
            <summary>
            Version 4.70. When an item is selected, the item and all its subitems are highlighted. 
            This style is available only in conjunction with the LVS_REPORT style.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_ONECLICKACTIVATE">
            <summary>
            Version 4.70. The list-view control sends an LVN_ITEMACTIVATE notification code to the parent window
            when the user clicks an item. This style also enables hot tracking in the list-view control. 
            Hot tracking means that when the cursor moves over an item, it is highlighted but not selected. 
            See the Extended List-View Styles Remarks section for a discussion of item activation.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_TWOCLICKACTIVATE">
            <summary>
            Version 4.70. The list-view control sends an LVN_ITEMACTIVATE notification code to the parent window
            when the user double-clicks an item. This style also enables hot tracking in the list-view control. 
            Hot tracking means that when the cursor moves over an item, it is highlighted but not selected. 
            See the Extended List-View Styles Remarks section for a discussion of item activation.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_FLATSB">
            <summary>
            Version 4.71. Enables flat scroll bars in the list view. If you need more control over the appearance
            of the list view's scroll bars, you should manipulate the list view's scroll bars directly using the Flat
            Scroll Bar APIs. If the system metrics change, you are responsible for adjusting the scroll bar metrics 
            with FlatSB_SetScrollProp. See Flat Scroll Bars for further details.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_REGIONAL">
            <summary>
            Version 4.71 through Version 5.80 only. Not supported on Windows Vista. Sets the list view window region
            to include only the item icons and text using SetWindowRgn. Any area that is not part of an item is excluded
            from the window region. This style is only available to list-view controls that use the LVS_ICON style.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_INFOTIP">
            <summary>
            Version 4.71. When a list-view control uses the LVS_EX_INFOTIP style, the LVN_GETINFOTIP notification code
            is sent to the parent window before displaying an item's tooltip.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_UNDERLINEHOT">
            <summary>
            Version 4.71. Causes those hot items that may be activated to be displayed with underlined text. This style
            requires that LVS_EX_ONECLICKACTIVATE or LVS_EX_TWOCLICKACTIVATE also be set.
            See the Extended List-View Styles Remarks section for a discussion of item activation.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_UNDERLINECOLD">
            <summary>
            Version 4.71. Causes those non-hot items that may be activated to be displayed with underlined text. This style
            requires that LVS_EX_TWOCLICKACTIVATE be set also. See the Extended List-View Styles Remarks section for a 
            discussion of item activation.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_MULTIWORKAREAS">
            <summary>
            Version 4.71. If the list-view control has the LVS_AUTOARRANGE style, the control will not autoarrange its icons
            until one or more work areas are defined (see LVM_SETWORKAREAS). To be effective, this style must be set before
            any work areas are defined and any items have been added to the control.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_LABELTIP">
            <summary>
            Version 5.80. If a partially hidden label in any list view mode lacks tooltip text, the list-view control will
            unfold the label. If this style is not set, the list-view control will unfold partly hidden labels only for the 
            large icon mode.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_BORDERSELECT">
            <summary>
            Version 4.71. Changes border color when an item is selected, instead of highlighting the item.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_DOUBLEBUFFER">
            <summary>
            Version 6.00. Paints via double-buffering, which reduces flicker. This extended style also enables alpha-blended
            marquee selection on systems where it is supported.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_HIDELABELS">
            <summary>
            Version 6.00. Hides the labels in icon and small icon view.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_SINGLEROW">
            <summary>
            Version 6.00. Not used.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_SNAPTOGRID">
            <summary>
            Version 6.00. In icon view, icons automatically snap into a grid.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVS_EX.LVS_EX_SIMPLESELECT">
            <summary>
            Version 6.00. In icon view, moves the state image of the control to the top right of the large icon rendering. 
            In views other than icon view there is no change. When the user changes the state by using the space bar, all 
            selected items cycle over, not the item with the focus.
            </summary>
        </member>
        <member name="T:Jam.Shell.LVM">
            <summary>
            Messages for Win32 ListView custom control
            </summary>
        </member>
        <member name="F:Jam.Shell.LVM.LVM_SETEXTENDEDLISTVIEWSTYLE">
            <summary>
            This message sets extended styles in list-view controls. 
            </summary>
        </member>
        <member name="F:Jam.Shell.LVM.LVM_GETEXTENDEDLISTVIEWSTYLE">
            <summary>
            This message gets extended styles in list-view controls. 
            </summary>
        </member>
        <member name="F:Jam.Shell.LVM.LVM_SETCOLUMNORDERARRAY">
            <summary>
            This message sets the column order array.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVM.LVM_GETCOLUMNORDERARRAY">
            <summary>
            This message gets the column order array.
            </summary>
        </member>
        <member name="F:Jam.Shell.LVM.LVM_CANCELEDITLABEL">
            <summary>
            Cancels label-Editing
            </summary>
        </member>
        <member name="T:Jam.Shell.LVN">
            <summary>
            Messages (WM_NOTIFY) for the Win32 ListView custom control
            </summary>
        </member>
        <member name="T:Jam.Shell.LVSIL">
            <summary>
            Possible values for wParam for LVM_SETIMAGELIST message
            </summary>
        </member>
        <member name="T:Jam.Shell.HDM">
            <summary>
            Messages for Win32 header control
            </summary>
        </member>
        <member name="T:Jam.Shell.TVM">
            <summary>
            Messages for Win32 TreeView custom control
            </summary>
        </member>
        <member name="T:Jam.Shell.EM">
            <summary>
            Messages for Win32 Edit Control
            </summary>
        </member>
        <member name="T:Jam.Shell.SHCNF">
            <summary>
            Flags that indicate the meaning of the <i>dwItem1</i> and <i>dwItem2</i> parameters.
            The uFlags parameter must be one of the following values.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCNF.SHCNF_DWORD">
            <summary>
            The <i>dwItem1</i> and <i>dwItem2</i> parameters are DWORD values.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCNF.SHCNF_IDLIST">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of ITEMIDLIST structures that
            represent the item(s) affected by the change.
            Each ITEMIDLIST must be relative to the desktop folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCNF.SHCNF_PATHA">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of null-terminated strings of
            maximum length MAX_PATH that contain the full path names
            of the items affected by the change.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCNF.SHCNF_PATHW">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of null-terminated strings of
            maximum length MAX_PATH that contain the full path names
            of the items affected by the change.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCNF.SHCNF_PRINTERA">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of null-terminated strings that
            represent the friendly names of the printer(s) affected by the change.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCNF.SHCNF_PRINTERW">
            <summary>
            <i>dwItem1</i> and <i>dwItem2</i> are the addresses of null-terminated strings that
            represent the friendly names of the printer(s) affected by the change.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCNF.SHCNF_FLUSH">
            <summary>
            The function should not return until the notification
            has been delivered to all affected components.
            As this flag modifies other data-type flags, it cannot by used by itself.
            </summary>
        </member>
        <member name="F:Jam.Shell.SHCNF.SHCNF_FLUSHNOWAIT">
            <summary>
            The function should begin delivering notifications to all affected components
            but should return as soon as the notification process has begun.
            As this flag modifies other data-type flags, it cannot by used by itself.
            </summary>
        </member>
        <member name="T:Jam.Shell.CMIC">
            <summary>
            fMask flags used by CMINVOKECOMMANDINFOEX.
            </summary>
        </member>
        <member name="T:Jam.Shell.MenuFlags">
            <summary>Flags for <see cref="M:Jam.Shell.ShellApi.NativeMethods.InsertMenu(System.IntPtr,System.Int32,System.UInt32,System.UInt32,System.String)"/></summary>
        </member>
        <member name="M:Jam.Shell.CommonHelpFunctions.GetTextWidth(System.String,System.Drawing.Font)">
            <summary>Returns the width in pixels for the given text.</summary>
            <param name="pText">The text.</param>
            <param name="pFont">The font.</param>
            <returns>The width of the text in the given font.</returns>
        </member>
        <member name="M:Jam.Shell.CommonHelpFunctions.ScaledPixels(System.Int32)">
            <summary>Calculates the given pixels scaled to the user's dpi settings.</summary>
            <param name="pPixels">The value that should be scaled.</param>
            <returns>The given pixels scaled to the user's dpi settings. In case of 100% / 96dpi the given value is returned.</returns>
        </member>
        <member name="T:Jam.Shell.PropertySystemHelper">
            <summary>Some static methods for the property system.</summary>
        </member>
        <member name="M:Jam.Shell.PropertySystemHelper.GetFileType(System.String,System.Boolean)">
            <summary>Returns the description text for the passed file extension. </summary>
            <exception cref="T:System.ArgumentNullException">
            Thrown when one or more required arguments are null.
            </exception>
            <param name="pExtension">a file extension like "TXT". </param>
            <param name="pIsFolder">true if this object is folder. </param>
            <returns>The description text for the file type. </returns>
        </member>
        <member name="M:Jam.Shell.PropertySystemHelper.VariantToString(System.Object,Jam.Shell.SHCOLUMNID)">
            <summary> This method converts the given variant to a string. </summary>
            <param name="pVariant">The variant that should be converted.</param>
            <param name="pColumnType">An optional shell column that can be passed and is used to determine the type of the variant.</param>
            <remarks>
            If a VariantArray is passed, the variants are concatenated by semicolons.
            If the ShColumnId is the VolumeFreeSize or Size column, the byte size is formated.
            If the ShColumnId is the write, create or access time, the given UTC time is converted to local time.
            </remarks>
            <returns> The converted variant as a String. </returns>
        </member>
        <member name="M:Jam.Shell.PropertySystemHelper.VariantToStringVistaOrLater(System.Object,Jam.Shell.SHCOLUMNID)">
            <summary>
            Converts a variant to string for vista or later.
            </summary>
            <param name="pVariant">The variant.</param>
            <param name="pColumnType">Type of the column.</param>
            <returns>The variant as string.</returns>
        </member>
        <member name="M:Jam.Shell.PropertySystemHelper.UTCtoLocalTime(System.Object)">
            <summary>
            Converts UTC to local time.
            </summary>
            <param name="pUTCTime">The UTC time.</param>
            <returns>The local time</returns>
        </member>
        <member name="M:Jam.Shell.PropertySystemHelper.ObjectToInt64(System.Object)">
            <summary>
            Tries to parse the the object to int.
            </summary>
            <param name="pVariant">The object that contains the int.</param>
            <returns>The integer value; 0 if it fails.</returns>
        </member>
        <member name="T:Jam.Shell.OSVersion">
            <summary>Information on the windows version.</summary>
        </member>
        <member name="P:Jam.Shell.OSVersion.IsXpOrLater">
            <summary>
            Returns true if the system runs the windows xp operating system or later.
            </summary>
        </member>
        <member name="P:Jam.Shell.OSVersion.IsVistaOrLater">
            <summary>
            Returns true if the system runs the windows vista operating system or later.
            </summary>
        </member>
        <member name="P:Jam.Shell.OSVersion.IsWindows7OrLater">
            <summary>
            Returns true if the system runs the Windows 7 operating system or later.
            </summary>
        </member>
        <member name="P:Jam.Shell.OSVersion.IsWindows8OrLater">
            <summary>
            Returns true if the system runs the Windows 8 operating system or later.
            </summary>
        </member>
        <member name="P:Jam.Shell.OSVersion.IsWindows10OrLater">
            <summary>
            Returns true if the system runs the Windows 10 operating system or later.
            </summary>
        </member>
        <member name="P:Jam.Shell.OSVersion.IsDarkModeSupported">
            <summary>
            Checks if dark mode is supported.
            </summary>
        </member>
        <member name="T:Jam.Shell.ExplorerSettings">
            <summary>Helper class that reads out global properties on Windows File Explorer configuration.</summary>
        </member>
        <member name="M:Jam.Shell.ExplorerSettings.ShellExpandToCurrentFolder">
            <summary>
            Returns True if Windows Explorer automatically jumps to the selected folder; False otherwise.
            </summary>
            <remarks>
             Corresponds to the user setting: View > Options > Navigation Pane > Automatically expand to current folder
             Always returns True for operating systems prior to Windows 7.
            </remarks>
            <returns>Boolean</returns>
        </member>
        <member name="M:Jam.Shell.ExplorerSettings.ShellShowLibraries">
            <summary>
            Returns True if Libraries should be shown in the navigation pane of the Windows Explorer according to user's settings or operating system standards.
            </summary>
            <remarks>
            Always returns False for Windows XP and earlier operating systems.
            </remarks>
            <returns>Boolean</returns>
        </member>
        <member name="M:Jam.Shell.ExplorerSettings.ShellShowFavorites">
            <summary>Determines if the Favorites or QuickAccess is displayed in Windows Explorer's Navigation Tree.</summary>
            <returns>true if Favorites are displayed as root node, false otherwise.</returns>
            <remarks>
            Always returns False for Windows XP and earlier operating systems.
            </remarks>
        </member>
        <member name="M:Jam.Shell.ExplorerSettings.ShellShowOneDrive">
            <summary>Determines if OneDrive is displayed in Windows Explorer's Navigation Tree.</summary>
            <returns>true if OneDrive are displayed as root node, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ExplorerSettings.ShellShowAllFolders">
            <summary>Returns True if all folders are shown in the navigation pane of the Windows Explorer according to user's settings.</summary>
            <returns>True if all folders are shown in the navigation pane of the Windows Explorer according to user's settings.</returns>
            <remarks>
            Always returns False for Windows Vista and earler operating systems.
            </remarks>
        </member>
        <member name="T:Jam.Shell.EnumWinCallBackDelegate">
            <summary>
            Delegate that is called for each child window in <see cref="M:Jam.Shell.ShellApi.NativeMethods.EnumChildWindows(System.IntPtr,Jam.Shell.EnumWinCallBackDelegate,System.IntPtr)"/>.
            </summary>
            <param name="hwnd"></param>
            <param name="lParam"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.Com.NamespaceDoc">
            <summary>
            This Namespace holds COM type imports, that are mostly for internal use only.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.IOleWindow">
            <summary>
            Implemented and used by containers and objects to obtain window handles
            and manage context-sensitive help.
            </summary>
            <remarks>
            The IOleWindow interface provides methods that allow an application to obtain
            the handle to the various windows that participate in in-place activation,
            and also to enter and exit context-sensitive help mode.
            </remarks>
        </member>
        <member name="M:Jam.Shell.Com.IOleWindow.GetWindow(System.IntPtr@)">
            <summary>
            Returns the window handle to one of the windows participating in in-place activation
            (frame, document, parent, or in-place object window).
            </summary>
            <param name="phwnd">Pointer to where to return the window handle.</param>
        </member>
        <member name="M:Jam.Shell.Com.IOleWindow.ContextSensitiveHelp(System.Boolean)">
            <summary>
            Determines whether context-sensitive help mode should be entered during an
            in-place activation session.
            </summary>
            <param name="fEnterMode"><c>true</c> if help mode should be entered;
            <c>false</c> if it should be exited.</param>
        </member>
        <member name="T:Jam.Shell.Com.IShellBrowser">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb775123(VS.85).aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.GetWindow(System.IntPtr@)">
            <summary>
            </summary>
            <param name="phwnd"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.ContextSensitiveHelp(System.Boolean)">
            <summary>
            </summary>
            <param name="fEnterMode"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.InsertMenusSB(System.IntPtr,System.IntPtr@)">
            <summary>
            Allows the container to insert its menu groups into the composite menu that is 
            displayed when an extended namespace is being viewed or used.
            Signature ok.
            </summary>
            <param name="hmenuShared"></param>
            <param name="lpMenuWidths"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.SetMenuSB(System.IntPtr,System.IntPtr,System.IntPtr)">
            <summary>
            Installs the composite menu in the view window.
            Signature ok.
            </summary>
            <param name="hmenuShared"></param><param name="holemenuRes"></param><param name="hwndActiveObject"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.RemoveMenusSB(System.IntPtr)">
            <summary>
            Permits the container to remove any of its menu elements from the in-place 
            composite menu and to free all associated resources.
            </summary>
            <param name="hmenuShared"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.SetStatusTextSB(System.String)">
            <summary>
            Sets and displays status text about the in-place object in the container's frame-window status bar.
            </summary>
            <param name="pszStatusText"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.EnableModelessSB(System.Boolean)">
            <summary>
            Tells Windows Explorer to enable or disable its modeless dialog boxes.
            </summary>
            <param name="fEnable"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.TranslateAcceleratorSB(System.IntPtr,System.Int16)">
            <summary>
            Translates accelerator keystrokes intended for the browser's frame while the view is active.
            </summary>
            <param name="pmsg"></param>
            <param name="wID"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.BrowseObject(System.IntPtr,System.UInt32)">
            <summary>
            Informs Microsoft Windows Explorer to browse to another folder.
            </summary>
            <param name="pidl"></param>
            <param name="wFlags"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.GetViewStateStream(System.UInt32,System.Runtime.InteropServices.ComTypes.IStream@)">
            <summary>
            Gets an IStream interface that can be used for storage of view-specific state information.
            </summary>
            <param name="grfMode"></param>
            <param name="ppStrm"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.GetControlWindow(System.UInt32,System.IntPtr@)">
            <summary>
            Gets the window handle to a browser control.
            </summary>
            <param name="id"></param>
            <param name="phwnd"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.SendControlMsg(System.UInt32,System.UInt32,System.UInt32,System.UInt32,System.Int64@)">
            <summary>
            Sends control messages to either the toolbar or the status bar in a Windows Explorer window.
            </summary>
            <param name="id"></param>
            <param name="uMsg"></param>
            <param name="wParam"></param>
            <param name="lParam"></param>
            <param name="pret"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.QueryActiveShellView(Jam.Shell.Com.IShellView@)">
            <summary>
            Retrieves the currently active (displayed) Shell view object.
            </summary>
            <param name="ppshv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.OnViewWindowActive(Jam.Shell.Com.IShellView)">
            <summary>
            Called by the Shell view when the view window or one of its child windows gets the focus or becomes active.
            </summary>
            <param name="pshv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellBrowser.SetToolbarItems(System.IntPtr,System.UInt32,System.UInt32)">
            <summary>
            Adds toolbar items to Windows Explorer's toolbar.
            </summary>
            <param name="lpButtons"></param>
            <param name="nButtons"></param>
            <param name="uFlags"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.Com.IShellView">
            <summary>
            The IShellView interface http://msdn.microsoft.com/en-us/library/bb774834(VS.85).aspx
            see also http://codegator.com/mcook/archive/2007/08/21/a-managed-wrapper-for-ishellfolder.aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.GetWindow(System.IntPtr@)">
            <summary>
            </summary>
            <param name="phwnd"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.ContextSensitiveHelp(System.Boolean)">
            <summary>
            </summary>
            <param name="fEnterMode"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.TranslateAccelerator(System.IntPtr)">
            <summary>
            Translates accelerator key strokes when a namespace extension's view has the focus.
            </summary>
            <param name="pmsg"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.EnableModeless(System.Boolean)">
            <summary>
            Enables or disables modeless dialog boxes. This method is not currently implemented.
            </summary>
            <param name="fEnable"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.UIActivate(System.UInt32)">
            <summary>
            Called when the activation state of the view window is changed by an event that is 
            not caused by the Shell view itself. For example, if the TAB key is pressed when the 
            tree has the focus, the view should be given the focus.
            </summary>
            <param name="uState"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.Refresh">
            <summary>
            Refreshes the view's contents in response to user input.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.CreateViewWindow(Jam.Shell.Com.IShellView,Jam.Shell.Com.FolderSettings@,Jam.Shell.Com.IShellBrowser,Jam.Shell.RECT@,System.IntPtr@)">
            <summary>
            Creates a view window. This can be either the right pane of Windows Explorer or the client window of a folder window.
            </summary>
            <param name="psvPrevious"></param>
            <param name="pfs"></param>
            <param name="psb"></param>
            <param name="prcView"></param>
            <param name="phWnd"></param>
            <returns>Returns an OLE success code if successful, or an OLE error code otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.DestroyViewWindow">
            <summary>
            Destroys the view window.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.GetCurrentInfo(Jam.Shell.Com.FolderSettings@)">
            <summary>
            Gets the current folder settings.
            </summary>
            <param name="pfs"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.AddPropertySheetPages(System.Int64,System.IntPtr@,System.Int32)">
            <summary>
            Allows the view to add pages to the Options property sheet from the View menu.
            </summary>
            <param name="dwReserved"></param>
            <param name="pfnPtr"></param>
            <param name="lparam"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.SaveViewState">
            <summary>
            Saves the Shell's view settings so the current state can be restored during a subsequent browsing session.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.SelectItem(System.IntPtr,Jam.Shell.Com.SVSI)">
            <summary>Selects an item by its itemidlist 
            http://msdn.microsoft.com/en-us/library/bb774840(VS.85).aspx
            </summary><param name="pidlItem"></param><param name="uFlags"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView.GetItemObject(Jam.Shell.Com.SVGIO,System.Guid@,System.Object@)">
            <summary>
            Gets an interface that refers to data presented in the view.
            </summary>
            <param name="aspectOfView"></param>
            <param name="riid"></param>
            <param name="ppv"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.Com.IShellView2">
            <summary>
            The IShellView interface http://msdn.microsoft.com/de-de/library/windows/desktop/bb774824%28v=vs.85%29.aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.GetWindow(System.IntPtr@)">
            <summary>
            </summary>
            <param name="phwnd"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.ContextSensitiveHelp(System.Boolean)">
            <summary>
            </summary>
            <param name="fEnterMode"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.TranslateAccelerator(System.IntPtr)">
            <summary>
            Translates accelerator key strokes when a namespace extension's view has the focus.
            </summary>
            <param name="pmsg"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.EnableModeless(System.Boolean)">
            <summary>
            Enables or disables modeless dialog boxes. This method is not currently implemented.
            </summary>
            <param name="fEnable"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.UIActivate(System.UInt32)">
            <summary>
            Called when the activation state of the view window is changed by an event that is 
            not caused by the Shell view itself. For example, if the TAB key is pressed when the 
            tree has the focus, the view should be given the focus.
            </summary>
            <param name="uState"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.Refresh">
            <summary>
            Refreshes the view's contents in response to user input.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.CreateViewWindow(Jam.Shell.Com.IShellView,Jam.Shell.Com.FolderSettings@,Jam.Shell.Com.IShellBrowser,Jam.Shell.RECT@,System.IntPtr@)">
            <summary>
            Creates a view window. This can be either the right pane of Windows Explorer or the client window of a folder window.
            </summary>
            <param name="psvPrevious"></param>
            <param name="pfs"></param>
            <param name="psb"></param>
            <param name="prcView"></param>
            <param name="phWnd"></param>
            <returns>Returns an OLE success code if successful, or an OLE error code otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.DestroyViewWindow">
            <summary>
            Destroys the view window.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.GetCurrentInfo(Jam.Shell.Com.FolderSettings@)">
            <summary>
            Gets the current folder settings.
            </summary>
            <param name="pfs"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.AddPropertySheetPages(System.Int64,System.IntPtr@,System.Int32)">
            <summary>
            Allows the view to add pages to the Options property sheet from the View menu.
            </summary>
            <param name="dwReserved"></param>
            <param name="pfnPtr"></param>
            <param name="lparam"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.SaveViewState">
            <summary>
            Saves the Shell's view settings so the current state can be restored during a subsequent browsing session.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.SelectItem(System.IntPtr,Jam.Shell.Com.SVSI)">
            <summary>Selects an item by its itemidlist 
            http://msdn.microsoft.com/en-us/library/bb774840(VS.85).aspx
            </summary><param name="pidlItem"></param><param name="uFlags"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.GetItemObject(Jam.Shell.Com.SVGIO,System.Guid@,System.Object@)">
            <summary>
            Gets an interface that refers to data presented in the view.
            </summary>
            <param name="aspectOfView"></param>
            <param name="riid"></param>
            <param name="ppv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.GetView(System.Guid@,System.UInt64)">
            <summary>
            Requests the current or default Shell view, together with all other valid view identifiers (VIDs) supported by this implementation of IShellView2.
            </summary>
            <param name="pvid"></param>
            <param name="uView"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.CreateViewWindow2(Jam.Shell.Com.SV2CVW2_PARAMS@)">
            <summary>
            Used to request the creation of a new Shell view window. It can be either the right pane of Windows Explorer or the client window of a folder window.
            </summary>
            <param name="lpParams"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.HandleRename(System.IntPtr@)">
            <summary>
            Used to change an item's identifier.
            </summary>
            <param name="pidlNew"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView2.SelectAndPositionItem(System.IntPtr@,System.UInt32,Jam.Shell.POINT@)">
            <summary>
            Selects and positions an item in a Shell View.
            </summary>
            <param name="pidlItem"></param>
            <param name="uFlags"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.Com.IShellView3">
            <summary>
            The IShellView3 interface http://msdn.microsoft.com/de-de/library/windows/desktop/bb774820%28v=vs.85%29.aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.GetWindow(System.IntPtr@)">
            <summary>
            </summary>
            <param name="phwnd"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.ContextSensitiveHelp(System.Boolean)">
            <summary>
            </summary>
            <param name="fEnterMode"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.TranslateAccelerator(System.IntPtr)">
            <summary>
            Translates accelerator key strokes when a namespace extension's view has the focus.
            </summary>
            <param name="pmsg"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.EnableModeless(System.Boolean)">
            <summary>
            Enables or disables modeless dialog boxes. This method is not currently implemented.
            </summary>
            <param name="fEnable"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.UIActivate(System.UInt32)">
            <summary>
            Called when the activation state of the view window is changed by an event that is 
            not caused by the Shell view itself. For example, if the TAB key is pressed when the 
            tree has the focus, the view should be given the focus.
            </summary>
            <param name="uState"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.Refresh">
            <summary>
            Refreshes the view's contents in response to user input.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.CreateViewWindow(Jam.Shell.Com.IShellView,Jam.Shell.Com.FolderSettings@,Jam.Shell.Com.IShellBrowser,Jam.Shell.RECT@,System.IntPtr@)">
            <summary>
            Creates a view window. This can be either the right pane of Windows Explorer or the client window of a folder window.
            </summary>
            <param name="psvPrevious"></param>
            <param name="pfs"></param>
            <param name="psb"></param>
            <param name="prcView"></param>
            <param name="phWnd"></param>
            <returns>Returns an OLE success code if successful, or an OLE error code otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.DestroyViewWindow">
            <summary>
            Destroys the view window.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.GetCurrentInfo(Jam.Shell.Com.FolderSettings@)">
            <summary>
            Gets the current folder settings.
            </summary>
            <param name="pfs"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.AddPropertySheetPages(System.Int64,System.IntPtr@,System.Int32)">
            <summary>
            Allows the view to add pages to the Options property sheet from the View menu.
            </summary>
            <param name="dwReserved"></param>
            <param name="pfnPtr"></param>
            <param name="lparam"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.SaveViewState">
            <summary>
            Saves the Shell's view settings so the current state can be restored during a subsequent browsing session.
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.SelectItem(System.IntPtr,Jam.Shell.Com.SVSI)">
            <summary>Selects an item by its itemidlist 
            http://msdn.microsoft.com/en-us/library/bb774840(VS.85).aspx
            </summary><param name="pidlItem"></param><param name="uFlags"></param>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.GetItemObject(Jam.Shell.Com.SVGIO,System.Guid@,System.Object@)">
            <summary>
            Gets an interface that refers to data presented in the view.
            </summary>
            <param name="aspectOfView"></param>
            <param name="riid"></param>
            <param name="ppv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.GetView(System.Guid@,System.UInt64)">
            <summary>
            Requests the current or default Shell view, together with all other valid view identifiers (VIDs) supported by this implementation of IShellView2.
            </summary>
            <param name="pvid"></param>
            <param name="uView"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.CreateViewWindow2(Jam.Shell.Com.SV2CVW2_PARAMS@)">
            <summary>
            Used to request the creation of a new Shell view window. It can be either the right pane of Windows Explorer or the client window of a folder window.
            </summary>
            <param name="lpParams"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.HandleRename(System.IntPtr@)">
            <summary>
            Used to change an item's identifier.
            </summary>
            <param name="pidlNew"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.SelectAndPositionItem(System.IntPtr@,System.UInt32,Jam.Shell.POINT@)">
            <summary>
            Selects and positions an item in a Shell View.
            </summary>
            <param name="pidlItem"></param>
            <param name="uFlags"></param>
            <param name="point"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IShellView3.CreateViewWindow3(Jam.Shell.Com.IShellBrowser,Jam.Shell.Com.IShellView,Jam.Shell.Com.SV3CVW3_FLAGS,Jam.Shell.FolderFlags,Jam.Shell.FolderFlags,System.Int32,System.Int32,Jam.Shell.RECT@,System.UInt32@)">
            <summary>
            Creates a view window. This can be either the right pane of Windows Explorer or the client window of a folder window.
            </summary>
            <param name="psbOwner">The PSB owner.</param>
            <param name="psvPrevious">The PSV previous.</param>
            <param name="dwViewFlags">The dw view flags.</param>
            <param name="dwMask">The dw mask.</param>
            <param name="dwFlags">The dw flags.</param>
            <param name="fvMode">The fv mode.</param>
            <param name="pvid">The pvid.</param>
            <param name="prcView">The PRC view.</param>
            <param name="phWnd">The ph WND.</param>
            <returns>
            Returns an OLE success code if successful, or an OLE error code otherwise.
            </returns>
            <remarks>We don't use the sv3guid, but a dummy int (0); see bug #9780</remarks>
        </member>
        <member name="T:Jam.Shell.Com.IFolderView">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb775606(VS.85).aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.GetCurrentViewMode(System.UInt32@)">
            <summary>
            Gets an address containing a value representing the folder's current view mode.
            </summary>
            <param name="pViewMode"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.SetCurrentViewMode(System.UInt32)">
            <summary>
            Sets the selected folder's view mode.
            </summary>
            <param name="pViewMode"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.GetFolder(System.Guid,System.Object@)">
            <summary>
            Gets the folder object.
            </summary>
            <param name="riid"></param>
            <param name="ppv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.Item(System.Int32,System.IntPtr@)">
            <summary>
            Gets the identifier of a specific item in the folder view, by index.
            </summary>
            <param name="iItemIndex"></param>
            <param name="ppidl"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.ItemCount(System.UInt32,System.Int32@)">
            <summary>
            Gets the number of items in the folder.
            </summary>
            <param name="uFlags"></param>
            <param name="pcItems"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.Items(System.UInt32,System.Guid,System.Object@)">
            <summary>
            Gets the address of an enumeration object based on the collection of items in the folder view.
            </summary>
            <param name="uFlags"></param>
            <param name="riid"></param>
            <param name="ppv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.GetSelectionMarkedItem(System.IntPtr@)">
            <summary>
            Gets the index of an item in the folder's view which has been marked by using the SVSI_SELECTIONMARK 
            in IFolderView::SelectItem.
            </summary>
            <param name="ppidl"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.GetFocusedItem(System.Int32@)">
            <summary>
            Gets the index of the item that currently has focus in the folder's view.
            </summary>
            <param name="piItem"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.GetItemPosition(System.IntPtr,Jam.Shell.POINT@)">
            <summary>
            Gets the position of an item in the folder's view.
            </summary>
            <param name="pidl"></param>
            <param name="ppt"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.GetSpacing(Jam.Shell.POINT@)">
            <summary>
            Gets a POINT structure containing the width (x) and height (y) dimensions, 
            including the surrounding white space, of an item.
            </summary>
            <param name="ppt"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.GetDefaultSpacing(Jam.Shell.POINT@)">
            <summary>
            Gets a pointer to a POINT structure containing the default width (x) and height (y) 
            measurements of an item, including the surrounding white space.
            </summary>
            <param name="ppt"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.GetAutoArrange">
            <summary>
            Gets the current state of the folder's Auto Arrange mode.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.SelectItem(System.Int32,System.UInt32)">
            <summary>
            Selects an item in the folder's view.
            </summary>
            <param name="iItem"></param>
            <param name="dwFlags"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.IFolderView.SelectAndPositionItems(System.UInt32,System.IntPtr,Jam.Shell.POINT@,System.UInt32)">
            <summary>
            Allows the selection and positioning of items visible in the folder's view.
            </summary>
            <param name="cidl"></param>
            <param name="pidl"></param>
            <param name="apt"></param>
            <param name="dwFlags"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.Com.NativeSortColumn">
            <summary>
            https://msdn.microsoft.com/en-us/library/windows/desktop/bb759817(v=vs.85).aspx
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.NativeSortColumn.ShellColumnId">
            <summary>The ID of the column by which the user will sort. </summary>
        </member>
        <member name="F:Jam.Shell.Com.NativeSortColumn.SortDirection">
            <summary>The sort direction: 0 = Default, -1 = Descending, 1 = Ascending </summary>
        </member>
        <member name="T:Jam.Shell.Com.ICommDlgBrowser">
            <summary>
            The ICommDlgBrowser interface. We do not marshal the IShellView interface since we already
            hold a reference to it.
            The PreserveSig attribute is important for things to work.
            http://msdn.microsoft.com/en-us/library/bb776141(VS.85).aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.ICommDlgBrowser.OnDefaultCommand(System.IntPtr)">
            <summary>Called when a user double-clicks in the view or presses the ENTER key.</summary>
            <param name="ppshv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.ICommDlgBrowser.OnStateChange(System.IntPtr,System.UInt32)">
            <summary>Called after a state, identified by the uChange parameter, has changed in the IShellView interface.</summary>
            <param name="ppshv"></param>
            <param name="uChange"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.ICommDlgBrowser.IncludeObject(System.IntPtr,System.IntPtr)">
            <summary>Allows the common dialog box to filter objects that the view displays.</summary>
            <param name="ppshv"></param>
            <param name="pidl"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.Com.ICommDlgBrowser2">
            <summary>
            The ICommDlgBrowser interface. We do not marshal the IShellView interface since we already
            hold a reference to it.
            The PreserveSig attribute is important for things to work.
            http://msdn.microsoft.com/en-us/library/bb776136(VS.85).aspx
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.ICommDlgBrowser2.OnDefaultCommand(System.IntPtr)">
            <summary>Called when a user double-clicks in the view or presses the ENTER key.</summary>
            <param name="ppshv"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.ICommDlgBrowser2.OnStateChange(System.IntPtr,System.UInt32)">
            <summary>Called after a state, identified by the uChange parameter, has changed in the IShellView interface.</summary>
            <param name="ppshv"></param>
            <param name="uChange"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.ICommDlgBrowser2.IncludeObject(System.IntPtr,System.IntPtr)">
            <summary>Allows the common dialog box to filter objects that the view displays.</summary>
            <param name="ppshv"></param>
            <param name="pidl"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.ICommDlgBrowser2.Notify(System.IntPtr,System.UInt32)">
            <summary>
            Called by a Shell view to notify the common dialog box hosting it that an event has occurred.
            </summary>
            <param name="ppshv"></param>
            <param name="dwNotifyType"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.ICommDlgBrowser2.GetDefaultMenuText(System.IntPtr,System.String,System.Int32)">
            <summary>
            Called by the Shell view to get the default shortcut menu text.
            </summary>
            <param name="ppshv"></param>
            <param name="pszText"></param>
            <param name="cchMax"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.Com.ICommDlgBrowser2.GetViewFlags(System.UInt32@)">
            <summary>
            Called when the view must determine if special customization needs to be made for the common dialog browser.
            </summary>
            <param name="pdwFlags"></param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.Com.IPropertyDescription">
            <summary>
            Exposes methods that enumerate and retrieve individual property description details.
            </summary>
            <remarks>Signature source: WindowsAPICodePack. </remarks>
        </member>
        <member name="T:Jam.Shell.Com.CDBOSC">
            <summary>
            Change in the selection state. This parameter can be one of the following values.
            Used in ICommDlgBrowser OnStateChange
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.CDBOSC.CDBOSC_SETFOCUS">
            <summary>
            The focus has been set to the view.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.CDBOSC.CDBOSC_KILLFOCUS">
            <summary>
            The view has lost the focus. 
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.CDBOSC.CDBOSC_SELCHANGE">
            <summary>
            The selection has changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.CDBOSC.CDBOSC_RENAME">
            <summary>
            An item has been renamed.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.CDBOSC.CDBOSC_STATECHANGE">
            <summary>
            An item has been checked or unchecked.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.FolderViewMode">
            <summary>
            Enumerates the different viewmodes of the explorer listview. 
            See <see href="http://msdn.microsoft.com/en-us/library/bb762510%28VS.85%29.aspx"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.FolderViewMode.Auto">
            <summary> The view should determine the best option.</summary>
        </member>
        <member name="F:Jam.Shell.Com.FolderViewMode.Icon">
            <summary>The view should display medium-size icons.</summary>
        </member>
        <member name="F:Jam.Shell.Com.FolderViewMode.SmallIcon">
            <summary> Each item appears as a small icon with the label to the right of it. </summary>
        </member>
        <member name="F:Jam.Shell.Com.FolderViewMode.List">
            <summary>
            Each item appears as a small icon with a label to the right of it. Items are arranged in
            columns and cannot be dragged by the user.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.FolderViewMode.Details">
            <summary>Object names and other selected information, such as the size or date last updated, are shown.</summary>
        </member>
        <member name="F:Jam.Shell.Com.FolderViewMode.Thumbnail">
            <summary>The view should display thumbnail icons.</summary>
        </member>
        <member name="F:Jam.Shell.Com.FolderViewMode.Tile">
            <summary>The view should display large icons.</summary>
        </member>
        <member name="F:Jam.Shell.Com.FolderViewMode.Content">
            <summary>
            Windows 7 and later. The view should display content mode.        
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.FolderSettings">
            <summary>
            The folder settings structure the is passed to the explorer shell view
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.FolderSettings.ViewMode">
            <summary>The <see cref="T:Jam.Shell.Com.FolderViewMode"/></summary>
        </member>
        <member name="F:Jam.Shell.Com.FolderSettings.FolderFlags">
            <summary>The FolderFlags that are passed</summary>
        </member>
        <member name="T:Jam.Shell.Com.SV2CVW2_PARAMS">
            <summary>
            Holds the parameters for the IShellView2::CreateViewWindow2 method.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.SYSTEMTIME">
            <summary>
            Specifies a date and time, using individual members for the month, day, year, weekday, hour, minute, second, and millisecond. The time is either in coordinated universal time (UTC) or local time, depending on the function that is being called.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SV3CVW3_FLAGS.DEFAULT">
            <summary>
            The default view.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SV3CVW3_FLAGS.NONINTERACTIVE">
            <summary>
            In the case of an error, the view should fail silently rather than displaying a UI.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SV3CVW3_FLAGS.FORCEVIEWMODE">
            <summary>
            The view mode set by IShellView3::CreateViewWindow3 overrides the saved view state.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SV3CVW3_FLAGS.FORCEFOLDERFLAGS">
            <summary>
            Folder flags set by IShellView3::CreateViewWindow3 override the saved view state.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.SVUIA_STATUS">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb762549.aspx
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVUIA_STATUS.SVUIA_DEACTIVATE">
            <summary>The browser view has been deactivated.</summary>
        </member>
        <member name="F:Jam.Shell.Com.SVUIA_STATUS.SVUIA_ACTIVATENOFOCUS">
            <summary>The browser view is activated and does not have focus.</summary>
        </member>
        <member name="F:Jam.Shell.Com.SVUIA_STATUS.SVUIA_ACTIVATEFOCUS">
            <summary>The browser view is activated and has focus.</summary>
        </member>
        <member name="F:Jam.Shell.Com.SVUIA_STATUS.SVUIA_INPLACEACTIVATE">
            <summary>The browser view is activated in place.</summary>
        </member>
        <member name="T:Jam.Shell.Com.SVGIO">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb762548(VS.85).aspx
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVGIO.SVGIO_BACKGROUND">
            <summary>
            Refers to the background of the view. 
            It is used with IID_IContextMenu to get a shortcut menu for the background of the view.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVGIO.SVGIO_SELECTION">
            <summary>
            Refers to the currently selected items. Used with IID_IDataObject to retrieve a data object that represents the selected items.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVGIO.SVGIO_ALLVIEW">
            <summary>
            Used in the same way as SVGIO.Selection but refers to all items in the view.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVGIO.SVGIO_CHECKED">
            <summary>
            Used in the same way as SVGIO.Selection but refers to checked items in views where checked mode is supported. For more details on checked mode, see FOLDERFLAGS.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVGIO.SVGIO_TYPEMASK">
            <summary>
            Masks all bits but those corresponding to the SVGIO flags.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVGIO.SVGIO_FLAG_VIEWORDER">
            <summary>
            Returns the items in the order they appear in the view. 
            If this flag is not set, the selected item will be listed first.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.SVSI">
            <summary>
            http://msdn.microsoft.com/en-us/library/bb762593(VS.85).aspx
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_DESELECT">
            <summary>
            Deselect the item.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_SELECT">
            <summary>
            Select the item.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_EDIT">
            <summary>
            Put the name of the item into rename mode.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_DESELECTOTHERS">
            <summary>
            Deselect all but the selected item. If the item parameter is NULL, deselect all items.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_ENSUREVISIBLE">
            <summary>
            In the case of a folder that cannot display all of its contents on one screen, 
            display the portion that contains the selected item.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_FOCUSED">
            <summary>
            Give the selected item the focus when multiple items are selected, 
            placing the item first in any list of the collection returned by a method.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_TRANSLATEPT">
            <summary>
            Convert the input point from screen coordinates to the list-view client coordinates.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_SELECTIONMARK">
            <summary>
            Mark the item so that it can be queried using IFolderView::GetSelectionMarkedItem.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_POSITIONITEM">
            <summary>
            Allows the window's default view to position the item. In most cases, 
            this will place the item in the first available position. However, 
            if the call comes during the processing of a mouse-positioned context menu, 
            the position of the context menu is used to position the item.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_CHECK">
            <summary>
            The item should be checked. This flag is used with items in views 
            where the checked mode is supported.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_CHECK2">
            <summary>
            The second check state when the view is in tri-check mode, in which there are three 
            values for the checked state. You can indicate tri-check mode by specifying FWF_TRICHECKSELECT 
            in IFolderView2::SetCurrentFolderFlags. The 3 states for FWF_TRICHECKSELECT are unchecked, 
            SVSI_CHECK and SVSI_CHECK2.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_KEYBOARDSELECT">
            <summary>
            Selects the item and marks it as selected by the keyboard. 
            Includes the <see cref="F:Jam.Shell.Com.SVSI.SVSI_SELECT"/> flag.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_NOTAKEFOCUS">
            <summary>
            An operation to select or focus an item should not also set focus on the view itself.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SVSI.SVSI_NOSTATECHANGE">
            <summary>
            An operation to edit or position an item should not affect the item's focus or selected state.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.SetWindowPosFlags">
            <summary>
            http://msdn.microsoft.com/en-us/library/ms633545(VS.85).aspx
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_ASYNCWINDOWPOS">
            <summary>
            If the calling thread and the thread that owns the window are attached to different input queues, 
            the system posts the request to the thread that owns the window. This prevents the calling thread 
            from blocking its execution while other threads process the request.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_DEFERERASE">
            <summary>
            Prevents generation of the WM_SYNCPAINT message.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_DRAWFRAME">
            <summary>
            Draws a frame (defined in the window's class description) around the window.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_FRAMECHANGED">
            <summary>
            Applies new frame styles set using the SetWindowLong function. Sends a WM_NCCALCSIZE message to the 
            window, even if the window's size is not being changed. If this flag is not specified, WM_NCCALCSIZE
            is sent only when the window's size is being changed.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_HIDEWINDOW">
            <summary>
            Hides the window.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_NOACTIVATE">
            <summary>
            Does not activate the window. If this flag is not set, the window is activated and moved to the 
            top of either the topmost or non-topmost group (depending on the setting of the hWndInsertAfter 
            parameter).
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_NOCOPYBITS">
            <summary>
            Discards the entire contents of the client area. If this flag is not specified, the valid contents of 
            the client area are saved and copied back into the client area after the window is sized or repositioned.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_NOMOVE">
            <summary>
            Retains the current position (ignores X and Y parameters).
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_NOOWNERZORDER">
            <summary>
            Does not change the owner window's position in the Z order.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_NOREDRAW">
            <summary>
            Does not redraw changes. If this flag is set, no repainting of any kind occurs. This applies to the 
            client area, the nonclient area (including the title bar and scroll bars), and any part of the parent 
            window uncovered as a result of the window being moved. When this flag is set, the application must 
            explicitly invalidate or redraw any parts of the window and parent window that need redrawing.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_NOREPOSITION">
            <summary>
            Same as the SWP_NOOWNERZORDER flag.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_NOSENDCHANGING">
            <summary>
            Prevents the window from receiving the WM_WINDOWPOSCHANGING message.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_NOSIZE">
            <summary>
            Retains the current size (ignores the cx and cy parameters).
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_NOZORDER">
            <summary>
            Retains the current Z order (ignores the hWndInsertAfter parameter).
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.SetWindowPosFlags.SWP_SHOWWINDOW">
            <summary>
            Displays the window.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.RelativeDescriptionType">
            <summary>
            Describes the relative description type for a property description, as determined by the relativeDescriptionType attribute of the displayInfo element.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.ImageListDrawOptions.Normal">
            <summary>
            Draw item normally.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.ImageListDrawOptions.Transparent">
            <summary>
            Draw item transparently.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.ImageListDrawOptions.Blend25">
            <summary>
            Draw item blended with 25% of the specified foreground colour
            or the Highlight colour if no foreground colour specified.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.ImageListDrawOptions.Selected">
            <summary>
            Draw item blended with 50% of the specified foreground colour
            or the Highlight colour if no foreground colour specified.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.ImageListDrawOptions.Mask">
            <summary>
            Draw the icon's mask
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.ImageListDrawOptions.Image">
            <summary>
            Draw the icon image without using the mask
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.ImageListDrawOptions.RasterOperation">
            <summary>
            Draw the icon using the ROP specified.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.ImageListDrawOptions.PreserveAlpha">
            <summary>
            Preserves the alpha channel in dest. XP only.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.ImageListDrawOptions.Scale">
            <summary>
            Scale the image to cx, cy instead of clipping it.  XP only.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.ImageListDrawOptions.DpiScale">
            <summary>
            Scale the image to the current DPI of the display. XP only.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.ImageListDrawOptions.Async">
            <summary>
            Vista or higher
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.IImageList">
            <summary>
            See http://www.vbaccelerator.com/home/net/code/libraries/Shell_Projects/SysImageList/article.asp
            </summary>
        </member>
        <member name="M:Jam.Shell.Com.IImageList2.GetIcon(System.Int32,Jam.Shell.Com.ImageListDrawOptions,System.IntPtr@)">
            <summary>
            Creates an icon from an image and a mask in an image list. 
            </summary>
            <param name="i">A value of type int that contains the index of the image.</param>
            <param name="flags">A combination of flags that specify the drawing style. For a list of values, see IImageList::Draw. </param>
            <param name="picon">A pointer to an int that contains the handle to the icon if successful, or NULL if otherwise.</param>
            <returns></returns>
        </member>
        <member name="T:Jam.Shell.Com.PropertyViewOptions">
            <summary>
            Associates property names with property description list strings.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.None">
            <summary>
            The property is shown by default.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.CenterAlign">
            <summary>
            The property is centered.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.RightAlign">
            <summary>
            The property is right aligned.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.BeginNewGroup">
            <summary>
            The property is shown as the beginning of the next collection of properties in the view.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.FillArea">
            <summary>
            The remainder of the view area is filled with the content of this property.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.SortDescending">
            <summary>
            The property is reverse sorted if it is a property in a list of sorted properties.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.ShowOnlyIfPresent">
            <summary>
            The property is only shown if it is present.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.ShowByDefault">
            <summary>
            The property is shown by default in a view (where applicable).
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.ShowInPrimaryList">
            <summary>
            The property is shown by default in primary column selection user interface (UI).
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.ShowInSecondaryList">
            <summary>
            The property is shown by default in secondary column selection UI.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.HideLabel">
            <summary>
            The label is hidden if the view is normally inclined to show the label.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.Hidden">
            <summary>
            The property is not displayed as a column in the UI.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.CanWrap">
            <summary>
            The property is wrapped to the next row.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyViewOptions.MaskAll">
            <summary>
            A mask used to retrieve all flags.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropertyTypeOptions">
            <summary>
            Describes the attributes of the <c>typeInfo</c> element in the property's <c>.propdesc</c> file.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.None">
            <summary>
            The property uses the default values for all attributes.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.MultipleValues">
            <summary>
            The property can have multiple values.   
            </summary>
            <remarks>
            These values are stored as a VT_VECTOR in the PROPVARIANT structure.
            This value is set by the multipleValues attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.IsInnate">
            <summary>
            This property cannot be written to. 
            </summary>
            <remarks>
            This value is set by the isInnate attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.IsGroup">
            <summary>
            The property is a group heading. 
            </summary>
            <remarks>
            This value is set by the isGroup attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.CanGroupBy">
            <summary>
            The user can group by this property. 
            </summary>
            <remarks>
            This value is set by the canGroupBy attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.CanStackBy">
            <summary>
            The user can stack by this property. 
            </summary>
            <remarks>
            This value is set by the canStackBy attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.IsTreeProperty">
            <summary>
            This property contains a hierarchy. 
            </summary>
            <remarks>
            This value is set by the isTreeProperty attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.IncludeInFullTextQuery">
            <summary>
            Include this property in any full text query that is performed. 
            </summary>
            <remarks>
            This value is set by the includeInFullTextQuery attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.IsViewable">
            <summary>
            This property is meant to be viewed by the user.  
            </summary>
            <remarks>
            This influences whether the property shows up in the "Choose Columns" dialog, for example.
            This value is set by the isViewable attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.IsQueryable">
            <summary>
            This property is included in the list of properties that can be queried.   
            </summary>
            <remarks>
            A queryable property must also be viewable.
            This influences whether the property shows up in the query builder UI.
            This value is set by the isQueryable attribute of the typeInfo element in the property's .propdesc file.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.CanBePurged">
            <summary>
            Used with an innate property (that is, a value calculated from other property values) to indicate that it can be deleted.  
            </summary>
            <remarks>
            Windows Vista with Service Pack 1 (SP1) and later.
            This value is used by the Remove Properties user interface (UI) to determine whether to display a check box next to an property that allows that property to be selected for removal.
            Note that a property that is not innate can always be purged regardless of the presence or absence of this flag.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.IsSystemProperty">
            <summary>
            This property is owned by the system.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyTypeOptions.MaskAll">
            <summary>
            A mask used to retrieve all flags.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropertySortDescription">
            <summary>
            Describes the particular wordings of sort offerings.
            </summary>
            <remarks>
            Note that the strings shown are English versions only; 
            localized strings are used for other locales.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertySortDescription.General">
            <summary>
            The default ascending or descending property sort, "Sort going up", "Sort going down".
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertySortDescription.AToZ">
            <summary>
            The alphabetical sort, "A on top", "Z on top".
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertySortDescription.LowestToHighest">
            <summary>
            The numerical sort, "Lowest on top", "Highest on top".
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertySortDescription.SmallestToBiggest">
            <summary>
            The size sort, "Smallest on top", "Largest on top".
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertySortDescription.OldestToNewest">
            <summary>
            The chronological sort, "Oldest on top", "Newest on top".
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropertyAggregationType">
            <summary>
            Property Aggregation Type
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyAggregationType.Default">
            <summary>
            The string "Multiple Values" is displayed.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyAggregationType.First">
            <summary>
            The first value in the selection is displayed.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyAggregationType.Sum">
            <summary>
            The sum of the selected values is displayed. This flag is never returned 
            for data types VT_LPWSTR, VT_BOOL, and VT_FILETIME.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyAggregationType.Average">
            <summary>
            The numerical average of the selected values is displayed. This flag 
            is never returned for data types VT_LPWSTR, VT_BOOL, and VT_FILETIME.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyAggregationType.DateRange">
            <summary>
            The date range of the selected values is displayed. This flag is only 
            returned for values of the VT_FILETIME data type.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyAggregationType.Union">
            <summary>
            A concatenated string of all the values is displayed. The order of 
            individual values in the string is undefined. The concatenated 
            string omits duplicate values; if a value occurs more than once, 
            it only appears a single time in the concatenated string.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyAggregationType.Max">
            <summary>
            The highest of the selected values is displayed.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyAggregationType.Min">
            <summary>
            The lowest of the selected values is displayed.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropertyColumnStateOptions">
            <summary>
            Describes how a property should be treated for display purposes.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.None">
            <summary>
            Default value
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.StringType">
            <summary>
            The value is displayed as a string.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.IntegerType">
            <summary>
            The value is displayed as an integer.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.DateType">
            <summary>
            The value is displayed as a date/time.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.TypeMask">
            <summary>
            A mask for display type values StringType, IntegerType, and DateType.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.OnByDefault">
            <summary>
            The column should be on by default in Details view.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.Slow">
            <summary>
            Will be slow to compute. Perform on a background thread.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.Extended">
            <summary>
            Provided by a handler, not the folder.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.SecondaryUI">
            <summary>
            Not displayed in the context menu, but is listed in the More... dialog.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.Hidden">
            <summary>
            Not displayed in the user interface (UI).
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.PreferVariantCompare">
            <summary>
            VarCmp produces same result as IShellFolder::CompareIDs.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.PreferFormatForDisplay">
            <summary>
            PSFormatForDisplay produces same result as IShellFolder::CompareIDs.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.NoSortByFolders">
            <summary>
            Do not sort folders separately.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.ViewOnly">
            <summary>
            Only displayed in the UI.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.BatchRead">
            <summary>
            Marks columns with values that should be read in a batch.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.NoGroupBy">
            <summary>
            Grouping is disabled for this column.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.FixedWidth">
            <summary>
            Can't resize the column.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.NoDpiScale">
            <summary>
            The width is the same in all dots per inch (dpi)s.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.FixedRatio">
            <summary>
            Fixed width and height ratio.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyColumnStateOptions.DisplayMask">
            <summary>
            Filters out new display flags.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropertyConditionOperation">
            <summary>
            Provides a set of flags to be used with IConditionFactory, 
            ICondition, and IConditionGenerator to indicate the operation.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.Implicit">
            <summary>
            The implicit comparison between the value of the property and the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.Equal">
            <summary>
            The value of the property and the value of the constant must be equal.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.NotEqual">
            <summary>
            The value of the property and the value of the constant must not be equal.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.LessThan">
            <summary>
            The value of the property must be less than the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.GreaterThan">
            <summary>
            The value of the property must be greater than the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.LessThanOrEqual">
            <summary>
            The value of the property must be less than or equal to the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.GreaterThanOrEqual">
            <summary>
            The value of the property must be greater than or equal to the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.ValueStartsWith">
            <summary>
            The value of the property must begin with the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.ValueEndsWith">
            <summary>
            The value of the property must end with the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.ValueContains">
            <summary>
            The value of the property must contain the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.ValueNotContains">
            <summary>
            The value of the property must not contain the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.DOSWildCards">
            <summary>
            The value of the property must match the value of the constant, where '?' matches any single character and '*' matches any sequence of characters.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.WordEqual">
            <summary>
            The value of the property must contain a word that is the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.WordStartsWith">
            <summary>
            The value of the property must contain a word that begins with the value of the constant.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionOperation.ApplicationSpecific">
            <summary>
            The application is free to interpret this in any suitable way.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropertyGroupingRange">
            <summary>
            Specifies the property description grouping ranges.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyGroupingRange.Discrete">
            <summary>
            The individual values.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyGroupingRange.Alphanumeric">
            <summary>
            The static alphanumeric ranges.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyGroupingRange.Size">
            <summary>
            The static size ranges.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyGroupingRange.Dynamic">
            <summary>
            The dynamically-created ranges.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyGroupingRange.Date">
            <summary>
            The month and year groups.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyGroupingRange.Percent">
            <summary>
            The percent groups.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyGroupingRange.Enumerated">
            <summary>
            The enumerated groups.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropEnumType">
            <summary>
            Property Enumeration Types
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropEnumType.DiscreteValue">
            <summary>
            Use DisplayText and either RangeMinValue or RangeSetValue.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropEnumType.RangedValue">
            <summary>
            Use DisplayText and either RangeMinValue or RangeSetValue
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropEnumType.DefaultValue">
            <summary>
            Use DisplayText
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropEnumType.EndRange">
            <summary>
            Use Value or RangeMinValue
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropertyConditionType">
            <summary>
            Specifies the condition type to use when displaying the property in the query builder user interface (UI).
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionType.None">
            <summary>
            The default condition type.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionType.String">
            <summary>
            The string type.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionType.Size">
            <summary>
            The size type.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionType.DateTime">
            <summary>
            The date/time type.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionType.Boolean">
            <summary>
            The Boolean type.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyConditionType.Number">
            <summary>
            The number type.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropertyDisplayType">
            <summary>
            Specifies the display types for a property.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDisplayType.String">
            <summary>
            The String Display. This is the default if the property doesn't specify a display type.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDisplayType.Number">
            <summary>
            The Number Display.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDisplayType.Boolean">
            <summary>
            The Boolean Display.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDisplayType.DateTime">
            <summary>
            The DateTime Display.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDisplayType.Enumerated">
            <summary>
            The Enumerated Display.
            </summary>
        </member>
        <member name="T:Jam.Shell.Com.PropertyDescriptionFormatOptions">
            <summary>
            Delineates the format of a property string.
            </summary>
            <remarks>
            Typically use one, or a bitwise combination of 
            these flags, to specify the format. Some flags are mutually exclusive, 
            so combinations like <c>ShortTime | LongTime | HideTime</c> are not allowed.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.None">
            <summary>
            The format settings specified in the property's .propdesc file.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.PrefixName">
            <summary>
            The value preceded with the property's display name.
            </summary>
            <remarks>
            This flag is ignored when the <c>hideLabelPrefix</c> attribute of the <c>labelInfo</c> element 
            in the property's .propinfo file is set to true.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.FileName">
            <summary>
            The string treated as a file name.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.AlwaysKB">
            <summary>
            The sizes displayed in kilobytes (KB), regardless of size. 
            </summary>
            <remarks>
            This flag applies to properties of <c>Integer</c> types and aligns the values in the column. 
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.RightToLeft">
            <summary>
            Reserved.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.ShortTime">
            <summary>
            The time displayed as 'hh:mm am/pm'.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.LongTime">
            <summary>
            The time displayed as 'hh:mm:ss am/pm'.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.HideTime">
            <summary>
            The time portion of date/time hidden.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.ShortDate">
            <summary>
            The date displayed as 'MM/DD/YY'. For example, '3/21/04'.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.LongDate">
            <summary>
            The date displayed as 'DayOfWeek Month day, year'. 
            For example, 'Monday, March 21, 2004'.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.HideDate">
            <summary>
            The date portion of date/time hidden.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.RelativeDate">
            <summary>
            The friendly date descriptions, such as "Yesterday".
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.UseEditInvitation">
            <summary>
            The text displayed in a text box as a cue for the user, such as 'Enter your name'.
            </summary>
            <remarks>
            The invitation text is returned if formatting failed or the value was empty. 
            Invitation text is text displayed in a text box as a cue for the user, 
            Formatting can fail if the data entered 
            is not of an expected type, such as putting alpha characters in 
            a phone number field.
            </remarks>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.ReadOnly">
            <summary>
            This flag requires UseEditInvitation to also be specified. When the 
            formatting flags are ReadOnly | UseEditInvitation and the algorithm 
            would have shown invitation text, a string is returned that indicates 
            the value is "Unknown" instead of the invitation text.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.NoAutoReadingOrder">
            <summary>
            The detection of the reading order is not automatic. Useful when converting 
            to ANSI to omit the Unicode reading order characters.
            </summary>
        </member>
        <member name="F:Jam.Shell.Com.PropertyDescriptionFormatOptions.SmartDateTime">
            <summary>
            Smart display of DateTime values
            </summary>
        </member>
        <member name="T:Jam.Shell.ShellBrowserBase">
            <summary>
            The ShellBrowser component is a non-visual component and allows you to browse to the shell name
            space of Windows, to query information about shell objects and to perform context menu operations.
            </summary>
            <remarks>
            ShellBrowserBase is a non-visual component. The property <see cref="P:Jam.Shell.ShellBrowserBase.Folder"/>
            contains the path of the current folder, <see cref="P:Jam.Shell.ShellBrowserBase.ObjectName"/> contains the
            name of the current object. Use the method <see cref="M:Jam.Shell.ShellBrowserBase.Next"/> to enumerate the objects
            in the current folder. 
            Use <see cref="P:Jam.Shell.ShellBrowserBase.IsFolder"/> to check if the current object is a folder. 
            </remarks>
        </member>
        <member name="T:Jam.Shell.ShellBrowserBase.AsyncResult">
            <summary>Values that represent the possible result values of <see cref="M:Jam.Shell.ShellBrowserBase.Next(Jam.Shell.IShellChangeNotifier)"/>.</summary>
        </member>
        <member name="F:Jam.Shell.ShellBrowserBase.AsyncResult.NoMoreItems">
            <summary>No more items were found.</summary>
        </member>
        <member name="F:Jam.Shell.ShellBrowserBase.AsyncResult.Ok">
            <summary>A valid item was found an is now the active object.</summary>
        </member>
        <member name="F:Jam.Shell.ShellBrowserBase.AsyncResult.Async">
            <summary>Enumeration will be done asynchonously using shell change notification messages.</summary>
        </member>
        <member name="F:Jam.Shell.ShellBrowserBase.AsyncResult.Error">
            <summary>An error occurred when enumerating items.</summary>
        </member>
        <member name="F:Jam.Shell.ShellBrowserBase.m_ItemIdList">
            <summary>Relative ItemIdList of the current object in the active folder.</summary>
        </member>
        <member name="F:Jam.Shell.ShellBrowserBase.m_MultiObjects">
            <summary>A list of paths that is object to context menu commands.</summary>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.#ctor(Jam.Shell.ShellFolder)">
            <summary>
            Initializes a new instance of the <see cref="T:Jam.Shell.ShellBrowserBase"/> class and assigns its <see cref="P:Jam.Shell.ShellBrowserBase.SpecialFolder"/> property
            </summary>
            <param name="p_ShellFolder">The initial special folder</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.#ctor(Jam.Shell.ShellBrowserBase)">
            <summary>
            Copy constructor. Creates a clone of the passed ShellBrowser instance.
            </summary>
            <param name="pCopyShellBrowser">The ShellBrowser instance to copy.</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.Dispose(System.Boolean)">
            <summary>
            Releases all resources held by this instance.
            </summary>
            <param name="disposing">is passed to the base class is not relevant to the actions taken in this method</param>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.MultiObjects">
            <summary>
            Holds a list of files that serves as selection for some operations like showing the context menu.
            </summary>
            <remarks>Files contained in MultiObjects have to be relative to the <see cref="P:Jam.Shell.ShellBrowserBase.Folder"/> property of the Shellbrowser instance.</remarks>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.ShowErrorMessages">
            <summary>
            If set to to 'true', error messages will be shown to the user. If set to 'false', error messages will be suppressed.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.FolderIdList">
            <summary>
            This property should only be used by advanced users. 
            The returned ItemIdList has to be freed  when it is not needed any more.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.ItemIdList">
            <summary>
            This property should only be used by advanced users. It returns a copy of the ItemIdList of the current object. Important: The returned ItemIdList has to be freed using CoTaskMemFree when it is not needed any more.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.CheckIfValid(System.Boolean)">
            <summary>
            Checks if the current object is in a valid state for performing operations
            </summary>
            <param name="p_ThrowException">Pass <c>true</c> if this function should throw an <see cref="T:System.InvalidOperationException"/> 
            if the state is invalid. If the return value is of interest, pass <c>false</c>.</param>
            <returns><c>true</c>, if the current state is valid for performing operations; otherwise <c>false</c></returns>
            <exception cref="T:System.InvalidOperationException">This excpetion is thrown if there is nor current folder or current object set.</exception>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.CheckIfValid(System.Boolean,System.Boolean)">
            <summary>
            Checks if the current object is in a valid state for performing operations
            </summary>
            <param name="p_ThrowException">Pass <c>true</c> if this function should throw an <see cref="T:System.InvalidOperationException"/> 
            if the state is invalid. If the return value is of interest, pass <c>false</c>.</param>
            <param name="p_FolderOnly">Only checks if the set folder is valid.</param>
            <returns><c>true</c>, if the current state is valid for performing operations; otherwise <c>false</c></returns>
            <exception cref="T:System.InvalidOperationException">This excpetion is thrown if there is nor current folder or current object set.</exception>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.AbsoluteItemIdList">
            <summary>
            This property should only be used by advanced users. It sets or returns the absolute ItemIdList of the current object. The returned pointer to an ItemIdList will be valid, until a new object was selected.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.Folder">
            <summary>
            Use Folder to specify the path of the folder, which should be browsed or to get the path that is currently active.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.FullPath">
            <summary>
            Gets or set the full path of the active object.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.SpecialFolder">
            <summary>
            Get or set a special folder as the currently active folder
            </summary>
            <exception cref="T:System.Runtime.InteropServices.COMException">A COM-Exception is thrown if the special folder 
            that is set is not supported by the system the application is running on.</exception>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.SpecialObject">
            <summary>
            Get or set a special object as the currently active object
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.ObjectName">
            <summary>
            Use ObjectName to specify the current object or to retrieve the file system name of the current object.
            A valid folder must be set, see <see cref="P:Jam.Shell.ShellBrowserBase.FullPath"/> and <see cref="P:Jam.Shell.ShellBrowserBase.SpecialFolder"/>
            </summary>
            <exception cref="T:System.InvalidOperationException">Thrown when there is no active ShellFolder.</exception>
            <exception cref="T:System.ArgumentNullException">Thrown if the set value is null.</exception>
            <exception cref="T:System.IO.FileNotFoundException">Thrown if the object can't be found.</exception>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.FileSystemOnly">
            <summary>
            If FileSystemOnly is set to True, objects and virtual folders which do not have a file system path, will not be displayed. Exceptions are 'My Computer', 'Libraries' and 'Network'
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.Filter">
            <summary>
            You can use a single pattern, e.g. '*.doc' or concatenate several patterns using semicolons to separate them, e.g. '*.exe;*.com'.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.FilterFilesOnly">
            <summary>Gets or sets a value indicating whether the <see cref="P:Jam.Shell.ShellBrowserBase.Filter"/> property applies to files only, but all folders are listed.</summary>
            <value>True if folders are not filtered by the <see cref="P:Jam.Shell.ShellBrowserBase.Filter"/> property. False if directories are matched against the filter too.</value>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.IsFolder">
            <summary>
            Can be used to query if the currently active object is a folder or not.
            </summary>
            <returns>true, if the currently active object is a folder, false otherwise</returns>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.IsEnumerable">
            <summary>
            True if the currently active object is a folder and can be browsed.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.HasSubFolders">
            <summary>
            Checks if the currently active object has subfolders.
            </summary>
            <returns>true, if the currently active object has subfolders, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.BrowseObject">
            <summary>
            Makes the currently active shell object the current folder.
            </summary>
            <returns>true, if successful. false if the current object is no folder or an error occured.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.SafeNext">
            <summary>Calls Next catching exceptions that might occur. </summary>
            <returns>true if it succeeds, false if there is no next element or an exception occurred. </returns>
            <remarks>Helper method that can be used with yield.</remarks>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.GetEnumerator">
            <summary>
            Implemetation of IEnumerable.GetEnumerator
            </summary>
            <returns>IEnumerator interface</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.GetDomain">
            <summary>
            Returns the domain name of the currently active object.
            </summary>
            <returns>If the current object is a network object, then the Domain name is returned. Otherwise an empty string is returned.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.GetShellObjectName">
            <summary>
            Returns the Windows shell display name of the currently active object.
            </summary>
            <returns>the Windows shell display name of the currently active object.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.CompareIDs(Jam.Shell.ItemIdList,Jam.Shell.ItemIdList,System.Int32)">
            <summary>
            Compares two ItemIdLists in the currently active shell folder.
            </summary>
            <param name="pPidl1">The first ITemIdList.</param>
            <param name="pPidl2">The second ItemIdList that should be compared to the first one.</param>
            <param name="pShellIndex">The column in the Winows Explorer Details view. Pass0 if you want to compar them by name.</param>
            <returns>A negative return value indicates that the first item should precede the second. 
                     A positive return value indicates that the first item should follow the second
                     A return value of zero indicates that the two items are the same </returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.CompareFilenames(System.String,System.String)">
            <summary>
            Compares two filenames
            </summary>
            <param name="filename1"></param>
            <param name="filename2"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.GetIShellDetails">
            <summary>
            Tests if ShellFolder1.CreateViewObject succeeds. This is a prerequisite for other methods to work successfully.
            </summary>
            <returns>True if ShellFolder1 or ShellFolder2 are not null.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.GetDesktopName">
            <summary>
            Returns the name of the root of the Windows shell namespace, which is "Desktop" in English Windows versions.
            </summary>
            <returns>The name of the root of the shell namespace.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.GetAttributes(Jam.Shell.SFGAOF)">
            <summary>
            Checks if the given attributes apply to the current objects
            </summary>
            <param name="pAttributes">A set of one or more attributes from the SFGAOF enumeration.</param>
            <returns>Those of the given attributes that apply to the current object.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.HasAttributes(Jam.Shell.SFGAOF)">
            <summary>
            Checks if the given attributes apply to the current objects.
            </summary>
            <param name="pAttributes">A set of one or more attributes from the SFGAOF enumeration.</param>
            <returns>true, if all the given attributes apply to the current object, false therwise</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.IsLink">
            <summary>
            Checks if the currently active object is a link or shortcut.
            </summary>
            <returns>true, if the currently active object is a link or shortcut, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.IsHidden">
            <summary>
            Checks if the currently active object is hidden.
            </summary>
            <returns>true, if the currently active object is hidden, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.IsCompressed">
            <summary>
            Checks if the currently active object is compressed.
            </summary>
            <returns>true, if the currently active object is compressed, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.CanRename">
            <summary>
            Checks if the currently active object can be renamed.
            </summary>
            <returns>true, if the currently active object can be renamed; false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.IsEncrypted">
            <summary>
            Checks if the currently active object is encrypted.
            </summary>
            <returns>true, if the currently active object is encrypted, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.HasFileExtension(System.String,System.String)">
            <summary>
            Checks whether the given fullpath or filename has the given extension.
            </summary>
            <param name="p_Path">The fullpath or filename that is to be checked.</param>
            <param name="p_Extension">The extension that is to be checked.</param>
            <returns>True if the given path has the given extension, false otherwise.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.GetWindowHandle(System.Boolean)">
            <summary>
            Returns an approriate window handle for operations that require a window handle.
            It takes care that a null handle is returned to prevent error messages if ShowErrorMEssages is set to false.
            </summary>
            <param name="p_HandleRequired">True, if a handle is required.</param>
            <returns>IntPtr for the window handle or IntPtr.Zero.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.Reset">
            <summary>
            Resets the enumeration of the items in the active folder. It can be started again using <see cref="M:Jam.Shell.ShellBrowserBase.Next"/>
            </summary>
            <seealso cref="M:Jam.Shell.ShellBrowserBase.Next"/>
            <seealso cref="P:Jam.Shell.ShellBrowserBase.FolderIdList"/>
            
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.Next(Jam.Shell.IShellChangeNotifier)">
            <summary>
            Moves on to next object in the active folder and makes it the active object. If Next has not
            been called before for the active folder, the first object is made active.
            </summary>
            <param name="pNotifier">The notifier.</param>
            <returns>
            true, if a next object was found. false, if no further object could be found.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.Next(Jam.Shell.IShellChangeNotifier,System.Threading.SynchronizationContext)">
            <summary>
            Moves on to next object in the active folder and makes it the active object. If Next has not
            been called before for the active folder, the first object is made active.
            </summary>
            <param name="pNotifier">The notifier.</param>
            <param name="pUseSynchronizationContext">SynchronizationContext to use to send notifications in case of async enumeration. Needed for UnitTests.</param>
            <returns>
            true, if a next object was found. false, if no further object could be found.
            </returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.Next">
            <summary>
            Moves on to next object in the active folder and makes it the active object. If Next has not been called before for the active folder, the first object is made active.
            </summary>
            <returns>true, if a next object was found. false, if no further object could be found.</returns>
            <exception cref="T:System.UnauthorizedAccessException">This exception is thrown when we can't access the active folder.</exception>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.Filter2Regex(System.String)">
            <summary>
            Converts a semicolon separated file filter i.e. "*.txt;*.doc" to a 
            case-insensitve regular expression
            </summary>
            <param name="value">The filter to convert</param>
            <returns>the generated regular expression</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.Filter2Regex(System.String,System.Text.RegularExpressions.RegexOptions)">
            <summary>
            Converts a semicolon separated file filter i.e. "*.txt;*.doc" to a 
            regular expression
            </summary>
            <param name="value">The filter to convert</param>
            <param name="regexOptions">additional options for instantiating the regular expression</param>
            <returns>the generated regular expression</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.FilterMatch">
            <summary>
            Checks if the currently active object matches the filter that is set.
            </summary>
            <returns>true, if the current object matches the filter property, false if it does not match</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.SelectParent">
            <summary>
            Moves up to the parent of the current shell object
            </summary>
            <returns>true, if successful. false if no parent element is available or an error occured.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.GetUIObject(System.Guid)">
            <summary>
            Queries and returns COM interfaces from the currently active Folder and object. If object names are assigned to the MultiObject collection, then they will be used.
            </summary>
            <param name="riid">IID of the interface that should be returned</param>
            <returns>The requested COM object, which needs to be casted.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.GetUIObject(System.Guid,Jam.Shell.ItemIdList[])">
            <summary>
            Queries and returns COM interfaces from the currently active Folder and the given ItemIdLists.
            </summary>
            <param name="riid">IID of the interface that should be returned</param>
            <param name="pidls">An array of ItemIdLists relaive to the current folder</param>
            <returns>The requested COM object; <c>null</c> if the requested COM interface could not be retrieved.</returns>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.IsXpOrLater">
            <summary>
            Returns true if the system runs the windows xp operating system or later.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.IsVistaOrLater">
            <summary>
            Returns true if the system runs the windows vista operating system or later.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.IsWindows7OrLater">
            <summary>
            Returns true if the system runs the Windows 7 operating system or later.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.IsWindows8OrLater">
            <summary>
            Returns true if the system runs the Windows 8 operating system or later.
            </summary>
        </member>
        <member name="P:Jam.Shell.ShellBrowserBase.IsWindows10OrLater">
            <summary>
            Returns true if the system runs the Windows 10 operating system or later.
            </summary>
        </member>
        <member name="E:Jam.Shell.ShellBrowserBase.BeforeShellCommand">
            <summary>
            This event is fired before a shell command is executed. It can be intercepted
            by setting <see cref="P:Jam.Shell.BeforeShellCommandEventArgs.Cancel"/> to true in 
            the event handler.
            </summary>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.IsWPF">
            <summary>
            Checks whether the current process is a WPF application or not.
            </summary>
            <returns>True if the current process is a WPF application.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.IsWinForms">
            <summary>Checks if the current process is a WinForms application.</summary>
            <returns>true if the current process is a WinForms application.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.InvokeCommandOnSelected(Jam.Shell.ShellCommand)">
            <summary>
            Executes the given command on the selected items. 
            </summary>
            <param name="pCommand">The command. </param>
            <returns>True if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.OnBeforeInvokeCommand(Jam.Shell.BeforeShellCommandEventArgs)">
            <summary>Is called before the command is called.</summary>
            <param name="e">EventArgs holding the verb that is to be executed and the affected elements.</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.OnAfterInvokeCommand(Jam.Shell.ShellCommandEventArgs)">
            <summary>Is called after the command has been called.</summary>
            <param name="e">Contains the command and the items the command was applied upon.</param>
        </member>
        <member name="M:Jam.Shell.ShellBrowserBase.GetSelectedItemIdLists">
            <summary>Gets the items the command will be executed upon.</summary>
            <returns>
            Return a <see cref="T:Jam.Shell.JamItemIdListCollection"/>
             containing absolute <see cref="P:Jam.Shell.ShellBrowserBase.ItemIdList"/>
            s representing the items.
            </returns>
        </member>
        <member name="T:Jam.Shell.ShellEnumeratorWorkItem">
            <summary>WorkItem to enumerate a ShellBrowser instance asynchronously. Each found item is sent as notification to the given ShellChangeNotifier.</summary>
        </member>
        <member name="T:Jam.Shell.SystemImageListSize">
            <summary>
            Available system image list sizes
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListSize.LargeIcons">
            <summary>
            Large Shell icon size (typically 32x32)
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListSize.SmallIcons">
            <summary>
            Small Shell icon size (typically 16x16)
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListSize.OverlayIcons">
            <summary>
            Overlay icons -- not used.
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListSize.ExtraLargeIcons">
            <summary>
            Extra large icons (Windows Vista and later, typically 48x48)
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageListSize.JumboIcons">
            <summary>
            Jumbo icons, 256x256 (Windows Vista and later, typically 256x256)
            </summary>
        </member>
        <member name="T:Jam.Shell.SystemImageList">
            <summary>Class that wraps a system image list and is able to provide icon indices and icon handles.</summary>
        </member>
        <member name="F:Jam.Shell.SystemImageList.SMALLICONS_SIZE">
            <summary>Size of the smallicons on 100% monitor.</summary>
        </member>
        <member name="F:Jam.Shell.SystemImageList.m_FolderIconNumberOpened">
            <summary>
            Caches the icon number of the small opened folder icon
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageList.m_FolderIconNumberClosed">
            <summary>
            Caches the icon number of the small closed folder icon
            </summary>
        </member>
        <member name="F:Jam.Shell.SystemImageList.m_FileDefaultIconNumber">
            <summary>
            Caches the default icon number for a file of which the extension has not yet been analysed
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemImageList.#ctor">
            <summary>Default constructor.</summary>
        </member>
        <member name="M:Jam.Shell.SystemImageList.GetInstance(Jam.Shell.SystemImageListSize)">
            <summary>Gets the cached instance for the specified size.</summary>
            <param name="pSize">The size of the SystemImageList.</param>
            <returns>The instance.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageList.GetInstance(System.Int32)">
            <summary>Gets the nearest cached instance for the specified size.</summary>
            <param name="pWidth">The width.</param>
            <returns>The instance.</returns>
        </member>
        <member name="P:Jam.Shell.SystemImageList.SmallIconsThreshhold">
            <summary>Gets the width of the small icons.</summary>
            <value>The width of the small icons.</value>
        </member>
        <member name="P:Jam.Shell.SystemImageList.BackColor">
            <summary>
            The BackColor for the imagelist.
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemImageList.Size">
            <summary>
            Decides which size the icons of the system image list should have.
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemImageList.ImageWidth">
            <summary>
            The width of the images in the current image list.
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemImageList.ImageHeight">
            <summary>
            The height of the images in the current image list.
            </summary>
        </member>
        <member name="P:Jam.Shell.SystemImageList.Handle">
            <summary>
            Returns the handle to the system image list.
            </summary>
        </member>
        <member name="M:Jam.Shell.SystemImageList.LoadImagelist">
            <summary>Loads the imagelist.</summary>
        </member>
        <member name="M:Jam.Shell.SystemImageList.GetFileIconHandle(System.String,Jam.Shell.SystemImageListSize,System.Boolean,System.Boolean)">
            <summary>
            Returns the handle of the icon for the specified filePath.
            </summary>
            <param name="pName">full path of the file</param>
            <param name="pSize">If set to SystemImageListSize.SmallIcons small icons are returned, large icons in all other cases</param>
            <param name="pAddOverlays">if true the icon will contain overlays.</param>
            <param name="pOpened">if true returns the opened icon for folders.</param>
            <returns>The icon of the specified path with the given parameters.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageList.GetFileIconHandle(Jam.Shell.ItemIdList,Jam.Shell.SystemImageListSize,System.Boolean,System.Boolean)">
            <summary>
            Returns the handle of the icon for the specified <see cref="T:Jam.Shell.ItemIdList"/>.
            </summary>
            <param name="pItemIdList">The absolute ItemIdList of the element.</param>
            <param name="pSize">If set to SystemImageListSize.SmallIcons small icons are returned, large icons in all other cases</param>
            <param name="pAddOverlays">if true icons include the links overlay</param>
            <param name="pOpened">if true returns the opened icon for folders.</param>
            <returns>The icon of the specified path with the given parameters.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageList.GetIconIndexForPath(System.String,System.Boolean,System.IO.FileAttributes)">
            <summary>Gets icon index for path.</summary>
            <param name="pFilePath">Full pathname of the file.</param>
            <param name="pOpened">true, if the icon should be returned open, like it is often used for the
            selected node in treeviews.</param>
            <param name="pAttributes">The file attributes that should be used. Usually 0 is passed here.</param>
            <returns>The icon index for path.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageList.GetIndexFromItemIdList(Jam.Shell.ItemIdList,System.Boolean)">
            <summary>Gets icon index for item identifier list.</summary>
            <exception cref="T:System.ArgumentNullException">Thrown when one or more required arguments are null.</exception>
            <param name="pItemIdList">The absolute ItemIdList of the element.</param>
            <param name="pOpened">true, if the icon should be returned open, like it is often used for the
            selected node in treeviews.</param>
            <returns>The icon index for item identifier list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageList.GetIconIndexOfOverlay(Jam.Shell.ItemIdList)">
            <summary>Gets icon index of overlay.</summary>
            <exception cref="T:System.ArgumentNullException">Thrown when one or more required arguments are null.</exception>
            <param name="pItemIdList">The absolute ItemIdList of the element.</param>
            <returns>The icon index of overlay. This is not the overlay index, but the index of the icon in the imagelist to use as overlay.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageList.GetIndexFromExtension(System.String)">
            <summary>
            Returns the icon index for the passed file extension
            </summary>
            <param name="pExtension">a file extnsion like "TXT".</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageList.GetFolderIconNumber(System.Boolean)">
            <summary>
            Returns the icon index of the default folder icon
            </summary>
            <param name="pOpened">true, if the icon should be returned open, like it is often used for the selected item in a treeview.</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageList.GetFolderIconNumber(System.Boolean,Jam.Shell.SystemImageListSize)">
            <summary>Returns the icon index of the default folder icon.</summary>
            <param name="pOpened">true, if the icon should be returned open, like it is often used for the
            selected item in a treeview.</param>
            <param name="pSize">The size of the SystemImageList.</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageList.GetFileDefaultIconNumber">
            <summary>
            Get the icon number of the default file
            </summary>
            <returns>The icon number of the default file icon.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageList.GetIconIndex(System.String,System.Boolean,System.IO.FileAttributes)">
            <summary>Gets the index of the icon of the passed ItemIdList.</summary>
            <param name="pFilePath">Full pathname of the file.</param>
            <param name="pOpened">true, if the icon should be returned open, like it is often used for the
            selected node in treeviews.</param>
            <param name="pAttributes">The file attributes that should be used. Usually 0 is passed here. If set the file to retrieve the icon for will not be accessed, it need not even exist. Instead the icon is returned based on this parameter.</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageList.GetIconHandle(System.String,System.Boolean,System.IO.FileAttributes)">
            <summary>Gets icon handle for the passed ItemIdList.</summary>
            <param name="pFilePath">Full pathname of the file.</param>
            <param name="pOpened">if true returns the opened icon for folders.</param>
            <param name="pAttributes">The file attributes that should be used. Usually 0 is passed here.</param>
            <returns>The icon handle.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageList.GetIconIndex(Jam.Shell.ItemIdList,System.Boolean)">
            <summary>Gets the index of the icon of the passed ItemIdList.</summary>
            <param name="pItemIdList">The absolute ItemIdList of the element.</param>
            <param name="pOpened">true, if the icon should be returned open, like it is often used for the
            selected node in treeviews.</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageList.GetIconHandle(Jam.Shell.ItemIdList,System.Boolean)">
            <summary>Gets icon handle for the passed ItemIdList.</summary>
            <param name="pItemIdList">The absolute ItemIdList of the element.</param>
            <param name="pOpened">if true returns the opened icon for folders.</param>
            <returns>The icon handle.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageList.GetIconHandle(System.Int32)">
            <summary>Gets icon handle for the image index.</summary>
            <param name="pIconIndex">Zero-based index of the icon.</param>
            <returns>The icon handle.</returns>
            <remarks>The returned icon handle must be released using <see cref="M:Jam.Shell.SystemImageList.DestroyIcon(System.IntPtr)"/> when the handle is not needed anymore to avoid GDI leaks.</remarks>
        </member>
        <member name="M:Jam.Shell.SystemImageList.DestroyIcon(System.IntPtr)">
            <summary>Destroys the icon referenced by hIcon.</summary>
            <param name="hIcon">The icon handle.</param>
            <returns>True if it succeeds, false if it fails.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageList.GetSpecialFolderIcon(Jam.Shell.ShellFolder,System.Boolean)">
            <summary>
            Returns the icon index of the passed special folder.
            </summary>
            <param name="pSpecialFolder">A constant from the ShellFolder1 enumeration.</param>
            <param name="pOpened">true, if the icon should be returned open, like it is often used for the selected item in a treeview.</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="M:Jam.Shell.SystemImageList.GetSpecialFolderIcon(Jam.Shell.ShellFolder)">
            <summary>
            Returns the icon index of the passed special folder.
            </summary>
            <param name="pSpecialFolder">A constant from the ShellFolder1 enumeration.</param>
            <returns>The index of the corresponding icon in the system image list.</returns>
        </member>
        <member name="P:Jam.Shell.SystemImageList.Count">
            <summary>Gets the number of icons in this image list. </summary>
            <value>The number of icons.</value>
        </member>
        <member name="M:Jam.Shell.SystemImageList.Dispose(System.Boolean)">
            <summary>This code added to correctly implement the disposable pattern.</summary>
            <param name="disposing">True to release both managed and unmanaged resources; false to
            release only unmanaged resources.</param>
        </member>
        <member name="M:Jam.Shell.SystemImageList.Finalize">
            <summary>Finalizes an instance of the <see cref="T:Jam.Shell.SystemImageList"/> class.</summary>
        </member>
        <member name="M:Jam.Shell.SystemImageList.Dispose">
            <summary>This code added to correctly implement the disposable pattern.</summary>
        </member>
        <member name="T:Jam.Shell.JamThread">
            <summary>
            Improved version of .Net's Thread class
            </summary>
        </member>
        <member name="F:Jam.Shell.JamThread.m_Thread">
            <summary>
            Reference to the thread object
            </summary>
        </member>
        <member name="F:Jam.Shell.JamThread.m_WakeUpEvent">
            <summary>
            Use this event to wakeup the thread when new work is pending
            </summary>
        </member>
        <member name="F:Jam.Shell.JamThread.m_ThreadPool">
            <summary>
            Reference to the thread pool this thread is assigned to
            </summary>
        </member>
        <member name="F:Jam.Shell.JamThread.m_LastTimeProcessingOccured">
            <summary>
            A tick value containing the milliseconds since system start on when
            the last processing occured on this thread
            </summary>
        </member>
        <member name="F:Jam.Shell.JamThread.m_LastTimeProcessingWentBusy">
            <summary>
            A tick value indicating the last time the thread started <see cref="M:Jam.Shell.IWorkItem.HandleWorkItem"/>
            (in milliseconds since system start). If this value is -1 the thread is in idle state.
            </summary>
        </member>
        <member name="F:Jam.Shell.JamThread.m_ThreadCounter">
            <summary>
            Counts the pooled threads.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamThread.#ctor(Jam.Shell.WorkerThreadPool)">
            <summary>Sets up a thread.</summary>
            <param name="threadPool">The threadpool the thread is associated with.</param>
        </member>
        <member name="M:Jam.Shell.JamThread.#ctor(Jam.Shell.WorkerThreadPool,System.Boolean)">
            <summary>
            Sets up a jam thread object
            </summary>
            <param name="threadPool">The threadpool the thread is associated with</param>
            <param name="initializeCOM">Whether the thread should be COM aware</param>
        </member>
        <member name="P:Jam.Shell.JamThread.WorkItem">
            <summary>
            Get or set the WorkItem that is currently processed by the thread
            </summary>
        </member>
        <member name="P:Jam.Shell.JamThread.IdleTime">
            <summary>
            Returns the time in milliseconds the thread is idle
            since the last time an item has been processed
            </summary>
        </member>
        <member name="P:Jam.Shell.JamThread.BusyTime">
            <summary>
            Returns the time in milliseconds the thread is busy, or -1 if it's idle.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamThread.Stop">
            <summary>
            Stops the thread and indefinitely waits until the processing finished
            </summary>
        </member>
        <member name="M:Jam.Shell.JamThread.Stop(System.Int32)">
            <summary>
            Stops the processing of items, the thread finishes.
            </summary>
            <param name="millis">milliseconds to wait to join the thread</param>
            <returns>true if joining the thread within milliseconds timespan succeeded, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.JamThread.Join(System.Int32)">
            <summary>
            Joins the thread.
            </summary>
            <param name="millis">milliseconds to wait to join the thread, -1 to wait indefinitely</param>
            <returns>true if joining the thread within milliseconds timespan succeeded, false otherwise</returns>
        </member>
        <member name="M:Jam.Shell.JamThread.Abort">
            <summary>
            Stops the thread by calling <see cref="M:System.Threading.Thread.Abort"/>, this usually terminates the thread.
            Use this function with caution, aborting a thread while it holds a mutex can cause dead-locks.
            <see cref="T:System.Threading.ThreadAbortException"/> for further details.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamThread.ProcessItems">
            <summary>
            The thread loop that performs the work
            </summary>
        </member>
        <member name="P:Jam.Shell.JamThread.IsFinished">
            <summary>
            Returns true if the thread is finished.
            If this value is set, the thread is woken
            up in case it is waiting for an event.
            </summary>
        </member>
        <member name="M:Jam.Shell.JamThread.Dispose(System.Boolean)">
            <summary>
            Releases ressources.
            </summary>
            <param name="disposing">The handle that the ItemIdList instance keeps is released if this parameter is true</param>
        </member>
        <member name="M:Jam.Shell.JamThread.Dispose">
            <summary>
            Implementation of IDisposable
            </summary>
        </member>
        <member name="T:Jam.Shell.IWorkItem">
            <summary>
            This interface defines a work item that can be queued to the threadpool
            </summary>
        </member>
        <member name="M:Jam.Shell.IWorkItem.HandleWorkItem">
            <summary>
            This method is called when the work item is processed
            </summary>
        </member>
        <member name="M:Jam.Shell.IWorkItem.Terminate">
            <summary>
            Set the state of the item to denote that it has been terminated before it finished
            processing, the implementation of this method should issue the <see cref="E:Jam.Shell.IWorkItem.Terminated"/> event.
            </summary>
        </member>
        <member name="P:Jam.Shell.IWorkItem.IsTerminated">
            <summary>Gets a value indicating whether this object is terminated.</summary>
            <value>True if this object is terminated, false if not.</value>
        </member>
        <member name="E:Jam.Shell.IWorkItem.WorkDone">
            <summary>
            This event is performed if the item's work is finished.
            <seealso cref="E:Jam.Shell.IWorkItem.Terminated"/>.
            </summary>
        </member>
        <member name="E:Jam.Shell.IWorkItem.Terminated">
            <summary>
            This event is performed if the item's work was aborted before it finished processing.
            <seealso cref="E:Jam.Shell.IWorkItem.WorkDone"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.IWorkItem.Result">
            <summary>
            The result of the operation performed in <see cref="M:Jam.Shell.IWorkItem.HandleWorkItem"/>, may be null
            </summary>
        </member>
        <member name="P:Jam.Shell.IWorkItem.Tag">
            <summary>
            A tag that can be freely used to identify a workitem or a group of workitems
            </summary>
        </member>
        <member name="P:Jam.Shell.IWorkItem.AllowAbortUponExceedingTimeLimit">
            <summary>
            Whether to allow aborting the work item when the timelimit exceeded (see <see cref="P:Jam.Shell.WorkerThreadPool.MaxBusyTime"/>)
            </summary>
        </member>
        <member name="P:Jam.Shell.IWorkItem.MaxBusyTime">
            <summary>
            The maximum time a workItem may be busy until it is aborted. Must be > 0 to be taken into account.
            </summary>
        </member>
        <member name="T:Jam.Shell.BasicWorkItem">
            <summary>
            This class provides base functionality for a work item,
            only the abstract method <see cref="M:Jam.Shell.BasicWorkItem.HandleWorkItem"/> has to be implemented to start things
            </summary>
        </member>
        <member name="M:Jam.Shell.BasicWorkItem.DoWork">
            <summary>
            This method is called from <see cref="M:Jam.Shell.BasicWorkItem.HandleWorkItem"/> when the work item is processed.
            May set <see cref="P:Jam.Shell.BasicWorkItem.Result"/> if the operation returned a result
            </summary>
        </member>
        <member name="M:Jam.Shell.BasicWorkItem.HandleWorkItem">
            <summary>
            Calls <see cref="M:Jam.Shell.BasicWorkItem.HandleWorkItem"/> method, then after the call to the method returns,
            issues the event <see cref="E:Jam.Shell.BasicWorkItem.WorkDone"/> if assigned
            </summary>
        </member>
        <member name="M:Jam.Shell.BasicWorkItem.Terminate">
            <summary>
            Sets the state of the item (<see cref="P:Jam.Shell.BasicWorkItem.IsTerminated"/> to true),
            issues the <see cref="E:Jam.Shell.BasicWorkItem.Terminated"/> event if assigned.
            </summary>
        </member>
        <member name="P:Jam.Shell.BasicWorkItem.Result">
            <summary>
            The result of the work item
            </summary>
        </member>
        <member name="M:Jam.Shell.BasicWorkItem.#ctor">
            <summary>
            Standard constructor
            </summary>
        </member>
        <member name="M:Jam.Shell.BasicWorkItem.#ctor(System.Boolean)">
            <summary>
            Allowing to abort is disabled per default since thread aborting results in
            unstable system state, see http://msdn.microsoft.com/en-us/magazine/cc163644.aspx :
            [..] "I'll caution you against using Thread.Abort to control the lifetime of a thread,
            especially if you have little knowledge about the implementation of the code you're
            aborting. An abort inside of a critical region could spell disaster for an entire
            AppDomain, and while a polite abort does signficantly reduce the window of disaster
            to very tiny slivers, that one time out of 1,000 could lead to a deadlock or resource
            leak or worse."
            </summary>
            <param name="allowAbortUponExceedingTimeLimit">If true, the thread is aborted via
            <see cref="M:System.Threading.Thread.Abort"/> if the <see cref="P:Jam.Shell.WorkerThreadPool.MaxBusyTime"/> is exceeded.</param>
        </member>
        <member name="E:Jam.Shell.BasicWorkItem.WorkDone">
            <summary>
            Register to this event to get notified when the
            item <see cref="M:Jam.Shell.BasicWorkItem.HandleWorkItem"/> method has finished.
            </summary>
        </member>
        <member name="E:Jam.Shell.BasicWorkItem.Terminated">
            <summary>
            This event occurs if the item terminated before it finished processing.
            <see cref="P:Jam.Shell.BasicWorkItem.IsTerminated"/> and <see cref="P:Jam.Shell.BasicWorkItem.AllowAbortUponExceedingTimeLimit"/>
            </summary>
        </member>
        <member name="P:Jam.Shell.BasicWorkItem.Tag">
            <summary>
            A work item can be tagged to be distinguishable from other items
            </summary>
        </member>
        <member name="P:Jam.Shell.BasicWorkItem.IsTerminated">
            <summary>
            This property is set to true if the work item was terminated before
            it finished processing, this may happen e.g. if
            <see cref="P:Jam.Shell.BasicWorkItem.AllowAbortUponExceedingTimeLimit"/> was true.
            </summary>
        </member>
        <member name="P:Jam.Shell.BasicWorkItem.MaxBusyTime">
            <summary>
            The maximum time a workItem may be busy until it is aborted. Must be > 0 to be taken into account.
            </summary>
        </member>
        <member name="P:Jam.Shell.BasicWorkItem.AllowAbortUponExceedingTimeLimit">
            <summary>
            Whether to allow aborting the <see cref="M:Jam.Shell.BasicWorkItem.HandleWorkItem"/> method if the
            maximum busy time exceeded. Per default this value is true.
            </summary>
        </member>
        <member name="M:Jam.Shell.BasicWorkItem.ToString">
            <summary>
            Returns the Tag as string.
            </summary>
            <returns>The workItem's tag.</returns>
        </member>
        <member name="T:Jam.Shell.SynchronizationContextWorkItem">
            <summary>A workItem using an AsyncOperation that can be used to Post delegates to the SynchronizationContext the workItem was created in (should be the GUI Thread). </summary>
        </member>
        <member name="M:Jam.Shell.SynchronizationContextWorkItem.Post(System.Threading.SendOrPostCallback,System.Object)">
            <summary>Post the passed delegate.</summary>
            <param name="pMethod">The method.</param>
            <param name="state">The state.</param>
        </member>
        <member name="M:Jam.Shell.SynchronizationContextWorkItem.PostCompleted(System.Threading.SendOrPostCallback,System.Object)">
            <summary>Calls PostOperationCompleted.</summary>
            <param name="pMethod">The method.</param>
            <param name="state">The state.</param>
        </member>
        <member name="T:Jam.Shell.GUIWorkItemCompletedEventArgs">
            <summary>
            EventArgs used in the GUIWaitCallbackWorkItem.Completed event.
            </summary>
        </member>
        <member name="P:Jam.Shell.GUIWorkItemCompletedEventArgs.Result">
            <summary>
            An object representing the result of the work item.
            </summary>
        </member>
        <member name="T:Jam.Shell.GUIWaitCallbackWorkItem">
            <summary>
            Like the <see cref="T:Jam.Shell.WorkerThreadPool.WaitCallbackWorkItem"/>. 
            In contrast to it issues the <see cref="E:Jam.Shell.GUIWaitCallbackWorkItem.Completed"/> event when the WorkItem has finished. This event is issued in the Synchronization context 
            that created the WorkItem so it's not necessary to call BeginInvoke when updating the GUI with results of the WorkItem.
            </summary>
        </member>
        <member name="M:Jam.Shell.GUIWaitCallbackWorkItem.#ctor(System.Threading.WaitCallback,System.Object,System.Threading.SynchronizationContext)">
            <summary>
            Standard constructor
            </summary>
            <param name="waitCallBack">The WaitCallback to be executed in a thread.</param>
            <param name="taskData">Can hold any object. Is passed to the WaitcallBack delegate and passed further to <see cref="P:Jam.Shell.GUIWorkItemCompletedEventArgs.Result" /></param>
            <param name="synchronizationContext">The synchronization context the <see cref="M:Jam.Shell.GUIWaitCallbackWorkItem.OnCompleted(Jam.Shell.GUIWorkItemCompletedEventArgs)"/> event is raised for</param>
        </member>
        <member name="M:Jam.Shell.GUIWaitCallbackWorkItem.#ctor(System.Threading.WaitCallback,System.Object,System.Int32,System.Threading.SynchronizationContext)">
            <summary>
            Constructor that saves the given handle as Tag
            </summary>
            <param name="waitCallBack">The WaitCallback to be executed in a thread.</param>
            <param name="taskData">Can hold any object. Is passed to the WaitcallBack delegate and passed further to <see cref="P:Jam.Shell.GUIWorkItemCompletedEventArgs.Result" /></param>
            <param name="tag">An int identifying the WorkItem</param>
            <param name="synchronizationContext">The synchronization context the <see cref="M:Jam.Shell.GUIWaitCallbackWorkItem.OnCompleted(Jam.Shell.GUIWorkItemCompletedEventArgs)"/> event is raised for</param>
        </member>
        <member name="M:Jam.Shell.GUIWaitCallbackWorkItem.#ctor(System.Object,System.Int32,System.Threading.SynchronizationContext,System.Threading.WaitCallback,System.EventHandler{Jam.Shell.GUIWorkItemCompletedEventArgs})">
            <summary>Creates a <see cref="T:Jam.Shell.GUIWaitCallbackWorkItem"/> receiving a WaitCallback that is executed asnychronously. When finished, the pCompletedHandler is executed in the passed SynchronizationContext</summary>
            <param name="pTaskData">Arbitrary data that is passed to the WaitCallback.</param>
            <param name="pTag">A tag to be able to recognize the WorkItem in the ThreadPool.</param>
            <param name="pSynchronizationContext">A SynchronizationContext that is used for the execution of the completedHandler.</param>
            <param name="pWaitCallBack">The WaitCallback that is executed asynchronously.</param>
            <param name="pCompletedHandler">The handler that is executed in the passed SynchronizationContext after the WaitCallBack has finished.</param>
        </member>
        <member name="M:Jam.Shell.GUIWaitCallbackWorkItem.DoWork">
            <summary>
            Invokes the wait call back method.
            </summary>
        </member>
        <member name="T:Jam.Shell.ItemsQueue`1">
            <summary>Thread save queue of items.</summary>
            <typeparam name="T">The type of elements in the queue.</typeparam>
        </member>
        <member name="F:Jam.Shell.ItemsQueue`1.m_List">
            <summary>
            List of items, use
            <code>lock(m_List) { .. }</code> whenever the
            datastructure is accessed either by reading or writing
            </summary>
        </member>
        <member name="T:Jam.Shell.ItemsQueue`1.IterateItemsQueueDelegate">
            <summary>
            Delegate for IterateList.
            </summary>
            <param name="element">The queued element</param>
            <param name="param">An additional parameter that can be passed through by calling methods</param>
        </member>
        <member name="M:Jam.Shell.ItemsQueue`1.IterateList(Jam.Shell.ItemsQueue{`0}.IterateItemsQueueDelegate,System.Boolean,System.Object)">
            <summary>
            Iterates the Queue in a thread safe manner executing the passed method on each queue element
            </summary>
            <param name="method">A method conforming to IterateItemsQueueDelegate</param>
            <param name="iterateFromBeginning">Iterate the list from the beginning (true) or the end (false)?</param>
            <param name="param">Additional parameter that might be used to pass through information to /method/</param>
        </member>
        <member name="M:Jam.Shell.ItemsQueue`1.Add(`0)">
            <summary>
            Add an item to the queue
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Jam.Shell.ItemsQueue`1.Remove(`0)">
            <summary>
            Removes an item by its reference from the queue
            </summary>
            <param name="item"></param>
            <returns>true if the item was present in the queue</returns>
        </member>
        <member name="M:Jam.Shell.ItemsQueue`1.Clear">
            <summary>
            Terminates the workitems and clears the queue.
            </summary>
            <returns>The number of terminated workitems.</returns>
        </member>
        <member name="M:Jam.Shell.ItemsQueue`1.DequeueFirst">
            <summary>
            Dequeues the first item in the queue
            </summary>
            <returns>The first item in the queue or null if the queue is empty.</returns>
        </member>
        <member name="M:Jam.Shell.ItemsQueue`1.DequeueLast">
            <summary>
            Dequeues the last item in the queue
            </summary>
            <returns>The last item in the list or null if the queue is empty.</returns>
        </member>
        <member name="P:Jam.Shell.ItemsQueue`1.Item(System.Int32)">
            <summary>
            Gets the item at the specified index.
            </summary>
            <param name="index">The index.</param>
            <returns>The item at the specific index. Null if the index is invalid.</returns>
        </member>
        <member name="P:Jam.Shell.ItemsQueue`1.Count">
            <summary>
            Gets the number of items in the queue
            </summary>
        </member>
        <member name="T:Jam.Shell.ItemsQueue`1.DetermineRemoveItem">
            <summary>
            Delegate definition for the <see cref="M:Jam.Shell.ItemsQueue`1.RemoveItems(Jam.Shell.ItemsQueue{`0}.DetermineRemoveItem,System.Object)" /> method parameter
            </summary>
            <param name="item">The item.</param>
            <param name="lParam">A parameter that might hold additional data</param>
            <returns>
            true if the item should be removed
            </returns>
        </member>
        <member name="M:Jam.Shell.ItemsQueue`1.RemoveItems(Jam.Shell.ItemsQueue{`0}.DetermineRemoveItem,System.Object)">
            <summary>
            Removes all items where calling the delegate returns true
            </summary>
            <param name="determineRemoveItem">a delegate to determine whether the items should be removed</param>
            <param name="lParam">A parameter that might hold additional data that is passed to the <see cref="T:Jam.Shell.ItemsQueue`1.DetermineRemoveItem"/> calls.</param>
            <returns>
            The number of removed items.
            </returns>
            <exception cref="T:System.ArgumentNullException">determineRemoveItem;The item that should be removed was 'null'</exception>
        </member>
        <member name="T:Jam.Shell.WorkItemsQueue">
            <summary>
            A queue of Workitems
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkItemsQueue.RemoveItemsOfType(System.Type)">
            <summary>
            Removes all items of a particular type from the queue
            </summary>
            <param name="type">The specific type</param>
            <returns>List of <see cref="T:Jam.Shell.IWorkItem"/> instances that matched the criterion and were removed from the list.</returns>
        </member>
        <member name="M:Jam.Shell.WorkItemsQueue.RemoveItemsOfType(System.Type,System.Boolean)">
            <summary>
            Removes all items of a particular type from the queue
            </summary>
            <param name="type">The specific type</param>
            <param name="extendingTypesAlso">if true also types extending 'type' are pruned from the datastructure</param>
            <returns>List of <see cref="T:Jam.Shell.IWorkItem"/> instances that matched the criterion and were removed from the list</returns>
        </member>
        <member name="M:Jam.Shell.WorkItemsQueue.RemoveItemsWithTag(System.Int32)">
            <summary>
            Removes all workitems that have the given tag
            </summary>
            <param name="tag">The specific tag</param>
            <returns>List of <see cref="T:Jam.Shell.IWorkItem"/> instances that matched the criterion and were removed from the list</returns>
        </member>
        <member name="T:Jam.Shell.WorkerThreadPool">
            <summary>
            A thread pool that manages work items, in contrast to the
            common .net threadpool, threads managed by this pool may perform calls to COM objects.
            </summary>
        </member>
        <member name="F:Jam.Shell.WorkerThreadPool.m_WorkerItemsQueue">
            <summary>
            This queue contains all items that get processed.
            </summary>
        </member>
        <member name="F:Jam.Shell.WorkerThreadPool.m_InitializeCOM">
            <summary>
            Whether the threads are prepared to perform calls to COM objects
            </summary>
        </member>
        <member name="F:Jam.Shell.WorkerThreadPool.m_FinishEvent">
            <summary>
            <see cref="M:Jam.Shell.WorkerThreadPool.WaitFinish(System.Int32)"/>
            </summary>
        </member>
        <member name="F:Jam.Shell.WorkerThreadPool.DEBUG">
            <summary>
            For testing purposes
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.CheckAddNewWorkerThread">
            <summary>
            Determines whether new threads should be spawned, ensures that <see cref="P:Jam.Shell.WorkerThreadPool.MinWorkerThreads"/>
            threads are available for processing
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.CreateThread">
            <summary>
            Creates a thread and adds it to the idle structure
            </summary>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.RemoveThread(Jam.Shell.JamThread)">
            <summary>
            Removes the thread from the idle and busy structure and stops it.
            </summary>
            <param name="thread"></param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.RemoveIdleThread(Jam.Shell.JamThread,System.Object)">
            <summary>
            Returns true if the thread exceeded idle time,
            the thread is stopped in that case
            </summary>
            <param name="thread">The thread.</param>
            <param name="lParam">not used.</param>
            <returns>
            true if the thread exceeded the maximum idle time
            </returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.RemoveThreadsExceedingMaxIdleTime">
            <summary>
            This method removes threads from the idle pool where
            the maximum idle time is exceeded. This method does
            nothing if only <see cref="P:Jam.Shell.WorkerThreadPool.MinWorkerThreads"/> are active
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.AbortHangingThread(Jam.Shell.JamThread,System.Object)">
            <summary>
            Returns true if the thread exceeded maximum busy time,
            the thread is stopped in that case
            </summary>
            <param name="thread">The thread.</param>
            <param name="lParam">A parameter that might hold additional data; not used here.</param>
            <returns>
            true if the thread exceeded the maximum idle time.
            </returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.AbortThreadsExceedingMaxBusyTime">
            <summary>
            This method removes threads from the busy pool if
            the maximum busy time is exceeded.
            Additionally if the thread is being stopped, if it doesn't
            join within 100ms abort is signalled via <see cref="M:System.Threading.Thread.Abort"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.OnAllWorkItemsDone">
            <summary>
            Issues the <see cref="E:Jam.Shell.WorkerThreadPool.AllWorkItemsDone"/> event
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.GetCpuUsage">
            <summary>
            Determines the overall cpu usage of the current process
            </summary>
            <returns>The CPU's idle percentage.</returns>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.QueryCpuUsage">
            <summary>
            If this property is set to true, the threadpool queries the
            current overall cpu load to determine whether to start additional
            threads that process the work items. <seealso cref="P:Jam.Shell.WorkerThreadPool.MaxWorkerThreads"/>.
            The default value for this setting is true.
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.#ctor">
            <summary>
            Standard constructor, initializes a threadpool without support
            for COM.
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.#ctor(System.Boolean,System.Boolean)">
            <summary>
            Creates a new WorkerThreadPool instance.
            </summary>
            <param name="pInitializeCOM">if true, threads in the pool are prepared to support COM calls.</param>
            <param name="pAutoShutDown">if true, all threads of the threadpool instance will be terminated on application exit.</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.#ctor(System.Boolean)">
            <summary>
            Creates a new WorkerThreadPool instance.
            </summary>
            <param name="pInitializeCOM">if true, threads in the pool are prepared to support COM calls</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.OnApplicationExit(System.Object,System.EventArgs)">
            <summary>
            Stops any pending threads if the applications exits
            </summary>
            <param name="sender">The sender of the event.</param>
            <param name="e">Contains event information.</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.CheckDisposed">
            <summary>
            Call this method to check if the thread pool is still available.
            </summary>
            <exception cref="T:System.ObjectDisposedException">If the ThreadPool has already been disposed</exception>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.Dispose(System.Boolean)">
            <summary>
            Implementation of IDispsable interface
            </summary>
            <param name="disposing"></param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.Dispose">
            <summary>
            Call this method to clean up all threads from the pool,
            in that case the ThreadPool instance cannot be used anymore,
            calls to functions of it will result in an <see cref="T:System.ObjectDisposedException"/>.
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.QueueLength">
            <summary>
            Returns the number of work items residing in the queue
            waiting to get processed by the next free thread.
            </summary>
            <seealso cref="P:Jam.Shell.WorkerThreadPool.WorkItemsCount"/>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.AddWorkItem(Jam.Shell.IWorkItem)">
            <summary>
            Adds a work item to the internal queue but and immediately
            starts processing the item, see also <see cref="M:Jam.Shell.WorkerThreadPool.AddWorkItem(Jam.Shell.IWorkItem,System.Boolean)"/> and <see cref="M:Jam.Shell.WorkerThreadPool.StartProcessing"/>.
            </summary>
            <param name="workItem"></param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.AddWorkItem(Jam.Shell.IWorkItem,System.Boolean)">
            <summary>
            Adds a work item to the internal queue but does not yet
            start processing them, see <see cref="M:Jam.Shell.WorkerThreadPool.StartProcessing"/> for that.
            </summary>
            <param name="workItem"></param>
            <param name="immediatelyStartProcessing">if true, starts processing the item immediately</param>
        </member>
        <member name="T:Jam.Shell.WorkerThreadPool.WaitCallbackWorkItem">
            <summary>
            This class wraps a waitcallback to be compatible to the
            .net ThreadPool implementation.
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.WaitCallbackWorkItem.#ctor(System.Threading.WaitCallback,System.Object)">
            <summary>
            Standard constructor
            </summary>
            <param name="waitCallBack"></param>
            <param name="state"></param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.WaitCallbackWorkItem.#ctor(System.Threading.WaitCallback,System.Object,System.Int32)">
            <summary>
            Constructor that saves the given handle as Tag
            </summary>
            <param name="waitCallBack"></param>
            <param name="state"></param>
            <param name="handle"></param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.WaitCallbackWorkItem.#ctor(System.Threading.WaitCallback,System.Object,System.Int32,System.Int32)">
            <summary>
            Constructor that saves the given handle as Tag and waits the given time before the callback is executed.
            </summary>
            <param name="waitCallBack"></param>
            <param name="state"></param>
            <param name="handle"></param>
            <param name="timeToWait"></param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.WaitCallbackWorkItem.DoWork">
            <summary>
            Invokes the wait call back method.
            </summary>
        </member>
        <member name="T:Jam.Shell.WorkerThreadPool.ActionWorkItem`1">
            <summary>
            This class wraps an <see cref="T:System.Action`1"/> delegate to be able
            to perform an action on the thread.
            </summary>
            <typeparam name="T">The type of parameter the Action takes.</typeparam>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.ActionWorkItem`1.#ctor(System.Action{`0},`0)">
            <summary>
            Standard constructor
            </summary>
            <param name="action">An <see cref="T:System.Action`1"/> delegate</param>
            <param name="state">The state of this ActionWorkItem.</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.ActionWorkItem`1.#ctor(System.Action{`0},`0,System.String)">
            <summary>
            Standard constructor
            </summary>
            <param name="pAction">An <see cref="T:System.Action`1"/> delegate</param>
            <param name="pState">The state of this ActionWorkItem.</param>
            <param name="pNameTag">A string that is used when calling the ToString() method for debug purposes.</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.ActionWorkItem`1.DoWork">
            <summary>
            Invokes the wait call back method
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.ActionWorkItem`1.ToString">
            <summary>
            Returns the name tag of the ActionWorkItem.
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.QueueUserWorkItem``1(System.Action{``0})">
            <summary>
            Adds an <see cref="T:System.Action`1"/> delegate call to the work item queue.
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
            <param name="action">An <see cref="T:System.Action`1"/> delegate.</param>
            <returns>An IWorkItem.</returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.QueueUserWorkItem``1(System.Action{``0},``0)">
            <summary>
            Adds an <see cref="T:System.Action`1"/> delegate call to the work item queue.
            </summary>
            <typeparam name="T">The type of the action.</typeparam>
            <param name="pAction">An <see cref="T:System.Action`1"/> delegate.</param>
            <param name="pState">The state of this WorkItem.</param>
            <returns>An IWorkItem.</returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.QueueUserWorkItem``1(System.Action{``0},``0,System.String)">
            <summary>
            Adds an <see cref="T:System.Action`1"/> delegate call to the work item queue.
            </summary>
            <typeparam name="T">The type of the action.</typeparam>
            <param name="pAction">An <see cref="T:System.Action`1"/> delegate.</param>
            <param name="pState">The state of this WorkItem.</param>
            <param name="pNameTag">A tag that is used to identify the WorkItem using it`s ToString() method. </param>
            <returns>An IWorkItem.</returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.QueueUserWorkItem(System.Threading.WaitCallback)">
            <summary>
            Adds a user work item to the Threadpool that is immediately being processed.
            </summary>
            <param name="waitCallBack">A <see cref="T:System.Threading.WaitCallback"/> that defines the WorkItem.</param>
            <returns>The IWorkItem that has been queued.</returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object)">
            <summary>
            Adds a user work item to the Threadpool that is immediately being processed.
            </summary>
            <param name="waitCallBack">A <see cref="T:System.Threading.WaitCallback"/> that defines the WorkItem.</param>
            <param name="state">An object that is passed to the workitem.</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object,System.Int32)">
            <summary>
            Adds a user work item to the Threadpool that is immediately being processed and tagged with the given handle.
            </summary>
            <param name="waitCallBack">A <see cref="T:System.Threading.WaitCallback"/> that defines the WorkItem.</param>
            <param name="state">An object that is passed to the workitem.</param>
            <param name="handle">An id for the WorkItem, like e.g. the handle of the control the queued workitem belongs to.</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.QueueUserWorkItem(System.Threading.WaitCallback,System.Object,System.Int32,System.Int32)">
            <summary>
            Adds a user work item to the Threadpool that is processed after the given time and tagged with the given handle.
            </summary>
            <param name="waitCallBack">A <see cref="T:System.Threading.WaitCallback"/> that defines the WorkItem.</param>
            <param name="state">An object that is passed to the workitem.</param>
            <param name="handle">An id for the WorkItem, like e.g. the handle of the control the queued workitem belongs to.</param>
            <param name="timeToWait">Milliseconds before the WorkItem starts its job.</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.QueueGUIWorkItem(System.Threading.WaitCallback,System.Object,System.EventHandler{Jam.Shell.GUIWorkItemCompletedEventArgs},System.Threading.SynchronizationContext)">
            <summary>
            Adds a work item to the Threadpool that is immediately being processed.
            When the WorkItem is finished Event OnCompleted is raised on the calling synchronization context, so that no BeginInvoke is needed to update the main thread.
            </summary>
            <param name="waitCallBack">The WaitCallback to be executed in a thread.</param>
            <param name="taskData">Can hold any object. Is passed to the WaitcallBack delegate and passed further to <see cref="P:Jam.Shell.GUIWorkItemCompletedEventArgs.Result" /></param>
            <param name="completedHandler">The completed handler.</param>
            <param name="synchronizationContext">The synchronization context the OnCompleted event is raised in.</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.StartProcessing">
            <summary>
            Start processing the work items (<see cref="M:Jam.Shell.WorkerThreadPool.AddWorkItem(Jam.Shell.IWorkItem,System.Boolean)"/>)
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.Paused">
            <summary>
            If this property is set to true the processing of new work items is paused,
            if it is set to false, processing is resumed. Getter and setter of this method are thread safe.
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.AssignPendingItemsToIdleThreads">
            <summary>
            Assigns pending work items to all idle threads
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.NotifyFinishedItem(Jam.Shell.JamThread)">
            <summary>
            Is called by <see cref="T:Jam.Shell.JamThread"/> so the pool is notified
            </summary>
            <param name="jamThread"></param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.TerminateProcessing">
            <summary>
            Stops processing work items that are queued. Running threads will be aborted after <see cref="P:Jam.Shell.WorkerThreadPool.MaxTimeUntilHardTerminate"/> ms.
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.TerminateProcessing(System.Boolean)">
            <summary>
            Stops processing work items that are queued. 
            </summary>
            <param name="force">if set to <c>true</c> busy threads are aborted after the timespan given in <see cref="P:Jam.Shell.WorkerThreadPool.MaxTimeUntilHardTerminate"/>.</param>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.TerminateProcessing(System.Int32)">
            <summary>
            Stops processing the threads.
            </summary>
            <param name="millis">Milliseconds running threads are given to finish their work before they are aborted.</param>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.Terminated">
            <summary>
            Returns true if processing was terminated via <see cref="M:Jam.Shell.WorkerThreadPool.TerminateProcessing"/> or
            <see cref="M:Jam.Shell.WorkerThreadPool.TerminateProcessing(System.Boolean)"/>. Is reset to false in a call to <see cref="M:Jam.Shell.WorkerThreadPool.StartProcessing"/>.
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.AbortThreadItem(Jam.Shell.JamThread,System.Object)">
            <summary>
            First tries to stop a busy thread if that was not
            possible within 50 milliseconds, the thread is aborted.
            </summary>
            <param name="thread">The thread.</param>
            <param name="millis">Contains the time in millis a thread can finish before being aborted.</param>
            <returns>
            Always returns true so the thread is removed from the busy queue.
            </returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.TerminateWorkItemsForTag(System.Int32)">
            <summary>
            Removes all pending work items from the work queue and terminates the running work items having the tag specified.
            </summary>
            <param name="tag">The tag.</param>
            <returns>The number of removed work items.</returns>
            <remarks>Threads or currently running matching workitems are not being stopped by this. </remarks>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.AbortThreadItemsForTag(Jam.Shell.JamThread,System.Object)">
            <summary>
            Aborts the threads that currently handle work items with the given tag.
            </summary>
            <param name="pThread">The thread.</param>
            <param name="lParam">Not used.</param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.TerminateWorkItemsForType(System.Type)">
            <summary>
            Removes all pending work items of type 'type'.
            </summary>
            <param name="type">The type of workitems to be removed.</param>
            <returns>The number of removed worker items.</returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.AbortWorkItemsForType(Jam.Shell.JamThread,System.Object)">
            <summary>
            Terminated the WorkItem if its type matches and finishes its thread.
            </summary>
            <param name="pThread">The thread.</param>
            <param name="lParam">Not used-</param>
            <returns>true if the item matched and was finished, false otherwise.</returns>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.MaxIdleTime">
            <summary>
            The maximum time a thread may be idle until it is removed
            from the pool if more that <see cref="P:Jam.Shell.WorkerThreadPool.MinWorkerThreads"/> are available
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.MaxBusyTime">
            <summary>
            The maximum time a thread may be busy until it is aborted.
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.MaxTimeUntilHardTerminate">
            <summary>
            Gets or sets the maximum time threads are given to finish when the ThreadPool is terminated before they are aborted.
            </summary>
            <value>
            The maximum time in milliseconds until hard terminate. Default 3000.
            </value>
        </member>
        <member name="E:Jam.Shell.WorkerThreadPool.AllWorkItemsDone">
            <summary>
            This event occurs if the threads finished processing all workitems,
            it happens from a different thread context. So do not perform gui operations
            directly.
            </summary>
        </member>
        <member name="E:Jam.Shell.WorkerThreadPool.NewWorkItemEvent">
            <summary>
            This event occurs if a new work item begins to process
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.WorkItemsCount">
            <summary>
            Returns the number of current work items.
            </summary>
            <seealso cref="P:Jam.Shell.WorkerThreadPool.QueueLength"/>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.MaxCpuUsage">
            <summary>
            The maximum cpu usage in percent were spawning additional
            worker threads is allowed
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.MinWorkerThreads">
            <summary>
            The minimum number of worker threads
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.MaxWorkerThreads">
            <summary>
            The maximum number of worker threads the pool may allocate
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.UseLIFO">
            <summary>
            If set to False, the oldest work item in the queue will be used a next item. This is the default value.
            If set to True, the newest work item in the queue will be used as next work item.
            True can be a good setting if the number of work items is large and their order doesn't matter
            </summary>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.WaitFinish">
            <summary>
            Waits until all threads finished processing (the workitem queue is empty).
            </summary>
            <remarks>Might immediately return if the workitem queue has already been empty without anyone waiting for it. (The AutoResetEvent is still signalled in this case).</remarks>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.ToString">
            <summary>
            Returns the list of WorkItems in the Queue and that are being processed at the moment.
            Note that the NameTag has to be set when queueing the items with QueueUserWorkItem.
            </summary>
            <returns>The list of WorkItems in the Queue and that are being processed at the moment.</returns>
        </member>
        <member name="M:Jam.Shell.WorkerThreadPool.WaitFinish(System.Int32)">
            <summary>
            Waits until all threads finished processing (the workitem queue is empty).
            </summary>
            <param name="millis">The timeout in milliseconds.</param>
            <returns>true if threads finished processing within timespan, false otherwise</returns>
            <remarks>Might immediately return if the workitem queue has already been empty without anyone waiting for it. (The AutoResetEvent is still signalled in this case).</remarks>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.InstanceUsesLIFO">
            <summary>
            Whether the threadpool returned by <see cref="P:Jam.Shell.WorkerThreadPool.Instance"/> uses LIFO,
            the default value is false
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.InstanceInitializesCOM">
            <summary>
            Whether the threadpool returned by <see cref="P:Jam.Shell.WorkerThreadPool.Instance"/> initializes
            to let the threads in the pool make use of COM objects.
            The default value is true.
            </summary>
        </member>
        <member name="P:Jam.Shell.WorkerThreadPool.Instance">
            <summary>
            Get a lazy initialized singleton instance of <see cref="T:Jam.Shell.WorkerThreadPool"/> (thread-safe).
            Per default the Threadpool is prepared for usage with COM, see <see cref="P:Jam.Shell.WorkerThreadPool.InstanceInitializesCOM"/>.
            </summary>
        </member>
        <member name="T:Jam.Shell.WorkerThreadPool.NestedSingleton">
            <summary>
            See http://www.yoda.arachsys.com/csharp/singleton.html
            </summary>
        </member>
        <member name="T:Jam.Shell.NewWorkItemEventArgs">
            <summary>
            Event arguments of e.g. <see cref="E:Jam.Shell.WorkerThreadPool.NewWorkItemEvent"/>
            </summary>
        </member>
        <member name="M:Jam.Shell.NewWorkItemEventArgs.#ctor(Jam.Shell.IWorkItem)">
            <summary>
            Standard constructor
            </summary>
            <param name="workItem"></param>
        </member>
        <member name="P:Jam.Shell.NewWorkItemEventArgs.WorkItem">
            <summary>
            Returns a reference to the work item.
            </summary>
        </member>
        <member name="T:Jam.Shell.PROCESSENTRY32">
            <summary>
            Structure keeping information on the process info
            </summary>
        </member>
        <member name="T:Jam.Shell.ProcessTimes">
            <summary>
            This structure keeps track of particular process times
            </summary>
        </member>
        <member name="F:Jam.Shell.ProcessTimes.CreationTime">
            <summary>CreationTime, ExitTime, KernalTime, UserTime</summary>
        </member>
        <member name="F:Jam.Shell.ProcessTimes.ExitTime">
            <summary>CreationTime, ExitTime, KernalTime, UserTime</summary>
        </member>
        <member name="F:Jam.Shell.ProcessTimes.KernelTime">
            <summary>CreationTime, ExitTime, KernalTime, UserTime</summary>
        </member>
        <member name="F:Jam.Shell.ProcessTimes.UserTime">
            <summary>CreationTime, ExitTime, KernalTime, UserTime</summary>
        </member>
        <member name="F:Jam.Shell.ProcessTimes.RawCreationTime">
            <summary>Creation, Exit, Kernel and UserTime as FILETIME</summary>
        </member>
        <member name="F:Jam.Shell.ProcessTimes.RawExitTime">
            <summary>Creation, Exit, Kernel and UserTime as FILETIME</summary>
        </member>
        <member name="F:Jam.Shell.ProcessTimes.RawKernelTime">
            <summary>Creation, Exit, Kernel and UserTime as FILETIME</summary>
        </member>
        <member name="F:Jam.Shell.ProcessTimes.RawUserTime">
            <summary>Creation, Exit, Kernel and UserTime as FILETIME</summary>
        </member>
        <member name="M:Jam.Shell.ProcessTimes.ConvertTime">
            <summary>
            Converts the file times from the creation times
            </summary>
        </member>
        <member name="T:Jam.Shell.ProcessData">
            <summary>
            This class keeps track of particular process information
            </summary>
        </member>
        <member name="P:Jam.Shell.ProcessData.ID">
            <summary>
            Returns the process id
            </summary>
        </member>
        <member name="P:Jam.Shell.ProcessData.Name">
            <summary>
            Returns the name of the process
            </summary>
        </member>
        <member name="M:Jam.Shell.ProcessData.#ctor(System.UInt32,System.String,System.Int64,System.Int64)">
            <summary>
            Standard constructor
            </summary>
            <param name="id"></param>
            <param name="name"></param>
            <param name="oldUserTime"></param>
            <param name="oldKernelTime"></param>
        </member>
        <member name="M:Jam.Shell.ProcessData.UpdateCpuUsage(System.Int64,System.Int64)">
            <summary>
            Updates the the processor times for the particular process
            </summary>
            <param name="newUserTime"></param>
            <param name="newKernelTime"></param>
            <returns>the usage in percent</returns>
        </member>
        <member name="T:Jam.Shell.CpuUsage">
            <summary>
            Determines cpu idle time on the machine
            </summary>
        </member>
        <member name="F:Jam.Shell.CpuUsage.c_MinimumElapsedMS">
            <summary>
            The minimum time that needs to elapse until a new usage value is calculated
            </summary>
        </member>
        <member name="M:Jam.Shell.CpuUsage.#ctor">
            <summary>
            Standard constructor
            </summary>
        </member>
        <member name="M:Jam.Shell.CpuUsage.ProcessExists(System.UInt32)">
            <summary>
            Returns the process data if existent in the list
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Jam.Shell.CpuUsage.GetIdlePercentage">
            <summary>
            Determines the cpu idle time of the machine
            </summary>
            <returns>cpu idle in between 0% and 100% free </returns>
        </member>
        <member name="M:ShellLinkHelper.AdaptProgramFilesPath(System.String)">
            <summary>Fixes potentially wrong paths returned by IShellLinkW.</summary>
            <param name="pPath">Full pathname of the file.</param>
            <returns>A fixed path or pPath.</returns>
        </member>
        <member name="M:ShellLinkHelper.GetLinkTarget(System.String)">
            <summary>
            Gets the link target.
            </summary>
            <param name="aPath">A path to a link.</param>
            <returns></returns>
        </member>
        <member name="M:ShellLinkHelper.GetLinkTargetIdList(System.String)">
            <summary>Gets the linked ItemIdList.</summary>
            <exception cref="T:System.Runtime.InteropServices.InvalidComObjectException">Thrown when the ShellLink ComObject can't be created.</exception>
            <param name="pPath">The path to resolve.</param>
            <returns>An ItemIdList for the linked element.</returns>
        </member>
        <member name="M:ShellLinkHelper.CreateShellShortcut(System.String,System.String)">
            <summary>
            Creates a new shortcut for the given target path.
            </summary>
            <param name="pTargetPath">The target path.</param>
            <param name="pDestinationFileName">The destination file name for the shortcut.</param>
        </member>
        <member name="M:ShellLinkHelper.CreateShellShortcut(System.String,System.String,System.String,System.Int32,System.String)">
            <summary>
            Creates a new shortcut for the given target path.
            </summary>
            <param name="pTarget">The target path.</param>
            <param name="pDestinationFileName">The destination file name for the shortcut.</param>
            <param name="pArguments">Possible arguments that are used when executing the link.</param>
            <param name="pShowCmd">The show command</param>
            <param name="pDescription">The description.</param>
        </member>
        <member name="M:ShellLinkHelper.CreateShortcutShowDialog(System.String)">
            <summary>
            Displays the 'Create Shortcut' Dialog.
            </summary>
            <param name="p_ShortcutPath">The path the shortcut should be created in</param>
            <exception cref="T:System.UnauthorizedAccessException">The caller does not have the required permission.  
            -or- path specified a file that is read-only.</exception>
            <exception cref="T:System.ArgumentException">
            path is a zero-length string, contains only white space, or contains one
            or more invalid characters as defined by System.IO.Path.InvalidPathChars.
            </exception>
            <exception cref="T:System.ArgumentNullException">
            path is null.
            </exception>
            <exception cref="T:System.IO.PathTooLongException">
            The specified path, file name, or both exceed the system-defined maximum
            length. For example, on Windows-based platforms, paths must be less than
            248 characters, and file names must be less than 260 characters.
            </exception>
            <exception cref="T:System.IO.DirectoryNotFoundException">
            The specified path is invalid (for example, it is on an unmapped drive).
            </exception>
            <exception cref="T:System.IO.IOException">An I/O error occurred while creating the file.</exception>
            <exception cref="T:System.ArgumentNullException">If the passed path is null.</exception>
            <exception cref="T:System.IO.PathTooLongException">If the path has more than 255 characters, this exception is thrown.</exception>
        </member>
    </members>
</doc>
